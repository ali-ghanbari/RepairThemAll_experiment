cd /tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis dynamoth \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 7 \
	--source flink-compiler/src/main/java \
	--classpath "flink-compiler/target/classes:flink-compiler/target/test-classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-shaded/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-core/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-java/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-runtime/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-clients/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-test-utils/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-scala/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-examples/flink-java-examples/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-examples/flink-scala-examples/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-tests/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-avro/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-jdbc/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-spargel/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-hadoop-compatibility/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-core/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-connectors/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-examples/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-hbase/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-yarn/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-quickstart/flink-quickstart-java/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-quickstart/flink-quickstart-scala/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-java8/target/classes:/home/tdurieux/.m2/repository/io/netty/netty-all/4.0.21.Final/netty-all-4.0.21.Final.jar:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-common/0.98.6.1-hadoop2/hbase-common-0.98.6.1-hadoop2.jar:/home/tdurieux/.m2/repository/org/scalamacros/quasiquotes_2.10/2.0.1/quasiquotes_2.10-2.0.1.jar:/home/tdurieux/.m2/repository/io/netty/netty/3.6.2.Final/netty-3.6.2.Final.jar:/home/tdurieux/.m2/repository/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar:/home/tdurieux/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.2.5/httpclient-4.2.5.jar:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/home/tdurieux/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/home/tdurieux/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/home/tdurieux/.m2/repository/org/apache/mina/mina-core/2.0.4/mina-core-2.0.4.jar:/home/tdurieux/.m2/repository/com/google/code/simple-spring-memcached/spymemcached/2.8.4/spymemcached-2.8.4.jar:/home/tdurieux/.m2/repository/org/apache/avro/avro/1.7.6/avro-1.7.6.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-java/0.8-incubating-SNAPSHOT/flink-java-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.json/2.0.6/org.apache.sling.commons.json-2.0.6.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.0.0.M1/jetty-server-8.0.0.M1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-connectors/0.8-incubating-SNAPSHOT/flink-streaming-connectors-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.1.2/grizzly-rcm-2.1.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.0.0.M1/jetty-continuation-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-hdfs/2.2.0/hadoop-hdfs-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-examples/0.8-incubating-SNAPSHOT/flink-streaming-examples-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-scala-examples/0.8-incubating-SNAPSHOT/flink-scala-examples-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-json/1.9/jersey-json-1.9.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-java-examples/0.8-incubating-SNAPSHOT/flink-java-examples-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/avro/avro-ipc/1.7.6/avro-ipc-1.7.6.jar:/home/tdurieux/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/tdurieux/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.9/jersey-guice-1.9.jar:/home/tdurieux/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-module-junit4-common/1.5.5/powermock-module-junit4-common-1.5.5.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-core/0.8-incubating-SNAPSHOT/flink-core-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/tomcat/jasper-compiler/5.5.23/jasper-compiler-5.5.23.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-reflect/1.5.5/powermock-reflect-1.5.5.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-java/0.8-incubating-SNAPSHOT/flink-java-0.8-incubating-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/com/rabbitmq/amqp-client/3.3.1/amqp-client-3.3.1.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-compiler/2.10.4/scala-compiler-2.10.4.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-common/2.2.0/hadoop-common-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-yarn/0.8-incubating-SNAPSHOT/flink-yarn-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-spargel/0.8-incubating-SNAPSHOT/flink-spargel-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-api/2.2.0/hadoop-yarn-api-2.2.0.jar:/home/tdurieux/.m2/repository/com/esotericsoftware/kryo/kryo/2.24.0/kryo-2.24.0.jar:/home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-xc/1.8.3/jackson-xc-1.8.3.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-reflect/2.10.4/scala-reflect-2.10.4.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-api-mockito/1.5.5/powermock-api-mockito-1.5.5.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http/2.1.2/grizzly-http-2.1.2.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.8/jackson-core-asl-1.8.8.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-configuration/1.5.0/flume-ng-configuration-1.5.0.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.6/commons-codec-1.6.jar:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-client/0.98.6.1-hadoop2/hbase-client-0.98.6.1-hadoop2.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.7/commons-codec-1.7.jar:/home/tdurieux/.m2/repository/redis/clients/jedis/2.4.2/jedis-2.4.2.jar:/home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar:/home/tdurieux/.m2/repository/tomcat/jasper-runtime/5.5.23/jasper-runtime-5.5.23.jar:/home/tdurieux/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/home/tdurieux/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.8/jackson-mapper-asl-1.8.8.jar:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.3.4/zookeeper-3.3.4.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-api-support/1.5.5/powermock-api-support-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-tests/0.8-incubating-SNAPSHOT/flink-tests-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-protocol/0.98.6.1-hadoop2/hbase-protocol-0.98.6.1-hadoop2.jar:/home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/tdurieux/.m2/repository/com/twitter/joauth/6.0.2/joauth-6.0.2.jar:/home/tdurieux/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-common/2.2.0/hadoop-yarn-common-2.2.0.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.3/commons-codec-1.3.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.1/commons-math-2.1.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.4/commons-codec-1.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.0.0.M1/jetty-io-8.0.0.M1.jar:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.1.1/jackson-databind-2.1.1.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.2/httpclient-4.2.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/com/jcraft/jsch/0.1.42/jsch-0.1.42.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.1.2/grizzly-http-server-2.1.2.jar:/home/tdurieux/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.0.0.M1/jetty-security-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-hadoop-compatibility/0.8-incubating-SNAPSHOT/flink-hadoop-compatibility-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-module-junit4/1.5.5/powermock-module-junit4-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.2/httpcore-4.2.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-library/2.10.4/scala-library-2.10.4.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-avro/0.8-incubating-SNAPSHOT/flink-avro-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.1.1/jackson-annotations-2.1.1.jar:/home/tdurieux/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/home/tdurieux/.m2/repository/org/cloudera/htrace/htrace-core/2.04/htrace-core-2.04.jar:/home/tdurieux/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-server/1.9/jersey-server-1.9.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-shaded/0.8-incubating-SNAPSHOT/flink-shaded-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/tdurieux/.m2/repository/org/apache/kafka/kafka_2.10/0.8.0/kafka_2.10-0.8.0.jar:/home/tdurieux/.m2/repository/commons-daemon/commons-daemon/1.0.13/commons-daemon-1.0.13.jar:/home/tdurieux/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-core/1.9/jersey-core-1.9.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.1/commons-io-2.1.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.1.2/grizzly-framework-2.1.2.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/4.0/asm-4.0.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-test-framework/jersey-test-framework-core/1.9/jersey-test-framework-core-1.9.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-core/1.5.0/flume-ng-core-1.5.0.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/home/tdurieux/.m2/repository/asm/asm/3.1/asm-3.1.jar:/home/tdurieux/.m2/repository/commons-el/commons-el/1.0/commons-el-1.0.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-clients/0.8-incubating-SNAPSHOT/flink-clients-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-runtime/0.8-incubating-SNAPSHOT/flink-runtime-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/google/inject/extensions/guice-servlet/3.0/guice-servlet-3.0.jar:/home/tdurieux/.m2/repository/com/esotericsoftware/minlog/minlog/1.2/minlog-1.2.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-pool2/2.0/commons-pool2-2.0.jar:/home/tdurieux/.m2/repository/org/tukaani/xz/1.0/xz-1.0.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/../lib/tools.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-core/0.8-incubating-SNAPSHOT/flink-streaming-core-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.4.5/zookeeper-3.4.5.jar:/home/tdurieux/.m2/repository/org/xerial/snappy/snappy-java/1.0.5/snappy-java-1.0.5.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-compiler/0.8-incubating-SNAPSHOT/flink-compiler-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-grizzly2/1.9/jersey-grizzly2-1.9.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-core/1.5.5/powermock-core-1.5.5.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/servlet-api/3.0.20100224/servlet-api-3.0.20100224.jar:/home/tdurieux/.m2/repository/com/twitter/hbc-core/2.2.0/hbc-core-2.2.0.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/11.0.2/guava-11.0.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.0.0.M1/jetty-util-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.0.0.M1/jetty-http-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sdk/1.5.0/flume-ng-sdk-1.5.0.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.3/jackson-jaxrs-1.8.3.jar:/home/tdurieux/.m2/repository/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-core/0.8-incubating-SNAPSHOT/flink-core-0.8-incubating-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-hbase/0.8-incubating-SNAPSHOT/flink-hbase-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-scala/0.8-incubating-SNAPSHOT/flink-scala-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.5/joda-time-2.5.jar:/home/tdurieux/.m2/repository/io/netty/netty/3.6.6.Final/netty-3.6.6.Final.jar:/home/tdurieux/.m2/repository/org/scalatest/scalatest_2.10/2.2.0/scalatest_2.10-2.2.0.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-test-framework/jersey-test-framework-grizzly2/1.9/jersey-test-framework-grizzly2-1.9.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/12.0.1/guava-12.0.1.jar:/home/tdurieux/.m2/repository/com/github/stephenc/findbugs/findbugs-annotations/1.3.9-1/findbugs-annotations-1.3.9-1.jar:/home/tdurieux/.m2/repository/com/amazonaws/aws-java-sdk/1.8.1/aws-java-sdk-1.8.1.jar:/home/tdurieux/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-library/2.10.1/scala-library-2.10.1.jar:/home/tdurieux/.m2/repository/org/fusesource/leveldbjni/leveldbjni-all/1.8/leveldbjni-all-1.8.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.1.2/grizzly-http-servlet-2.1.2.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-compress/1.4.1/commons-compress-1.4.1.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-test-utils/0.8-incubating-SNAPSHOT/flink-test-utils-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/101tec/zkclient/0.3/zkclient-0.3.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-core/2.2.0/hadoop-mapreduce-client-core-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-auth/2.2.0/hadoop-auth-2.2.0.jar:/home/tdurieux/.m2/repository/org/glassfish/javax.servlet/3.1/javax.servlet-3.1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-client/2.2.0/hadoop-yarn-client-2.2.0.jar:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/home/tdurieux/.m2/repository/net/java/dev/jets3t/jets3t/0.6.1/jets3t-0.6.1.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.1.1/jackson-core-2.1.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.0.0.M1/jetty-servlet-8.0.0.M1.jar:/home/tdurieux/.m2/repository/io/netty/netty/3.5.12.Final/netty-3.5.12.Final.jar:/home/tdurieux/.m2/repository/commons-net/commons-net/3.1/commons-net-3.1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-annotations/2.2.0/hadoop-annotations-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.2.4/httpcore-4.2.4.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-client/1.9/jersey-client-1.9.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.10.1.1/derby-10.10.1.1.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
java.lang.ClassNotFoundException: archetype-resources.src.main.java.WordCountJob
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at sacha.finder.processor.Processor.process(Processor.java:55)
	at fr.inria.lille.repair.common.finder.TestClassFinderRunner.call(TestClassFinderRunner.java:27)
	at fr.inria.lille.repair.common.finder.TestClassFinderRunner.call(TestClassFinderRunner.java:19)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.ClassNotFoundException: archetype-resources.src.main.java.Job
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at sacha.finder.processor.Processor.process(Processor.java:55)
	at fr.inria.lille.repair.common.finder.TestClassFinderRunner.call(TestClassFinderRunner.java:27)
	at fr.inria.lille.repair.common.finder.TestClassFinderRunner.call(TestClassFinderRunner.java:19)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:52:51.669 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [flink-compiler/src/main/java]
19:52:51.672 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-compiler/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-compiler/target/test-classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-shaded/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-core/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-java/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-runtime/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-clients/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-test-utils/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-scala/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-examples/flink-java-examples/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-examples/flink-scala-examples/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-tests/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-avro/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-jdbc/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-spargel/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-hadoop-compatibility/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-core/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-connectors/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-examples/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-hbase/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-yarn/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-quickstart/flink-quickstart-java/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-quickstart/flink-quickstart-scala/target/classes/, file:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-java8/target/classes/, file:/home/tdurieux/.m2/repository/io/netty/netty-all/4.0.21.Final/netty-all-4.0.21.Final.jar, file:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-common/0.98.6.1-hadoop2/hbase-common-0.98.6.1-hadoop2.jar, file:/home/tdurieux/.m2/repository/org/scalamacros/quasiquotes_2.10/2.0.1/quasiquotes_2.10-2.0.1.jar, file:/home/tdurieux/.m2/repository/io/netty/netty/3.6.2.Final/netty-3.6.2.Final.jar, file:/home/tdurieux/.m2/repository/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar, file:/home/tdurieux/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar, file:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.2.5/httpclient-4.2.5.jar, file:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar, file:/home/tdurieux/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar, file:/home/tdurieux/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar, file:/home/tdurieux/.m2/repository/org/apache/mina/mina-core/2.0.4/mina-core-2.0.4.jar, file:/home/tdurieux/.m2/repository/com/google/code/simple-spring-memcached/spymemcached/2.8.4/spymemcached-2.8.4.jar, file:/home/tdurieux/.m2/repository/org/apache/avro/avro/1.7.6/avro-1.7.6.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-java/0.8-incubating-SNAPSHOT/flink-java-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.json/2.0.6/org.apache.sling.commons.json-2.0.6.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.0.0.M1/jetty-server-8.0.0.M1.jar, file:/home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-connectors/0.8-incubating-SNAPSHOT/flink-streaming-connectors-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar, file:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.1.2/grizzly-rcm-2.1.2.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.0.0.M1/jetty-continuation-8.0.0.M1.jar, file:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-hdfs/2.2.0/hadoop-hdfs-2.2.0.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-examples/0.8-incubating-SNAPSHOT/flink-streaming-examples-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-scala-examples/0.8-incubating-SNAPSHOT/flink-scala-examples-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar, file:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-json/1.9/jersey-json-1.9.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-java-examples/0.8-incubating-SNAPSHOT/flink-java-examples-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/apache/avro/avro-ipc/1.7.6/avro-ipc-1.7.6.jar, file:/home/tdurieux/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar, file:/home/tdurieux/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.9/jersey-guice-1.9.jar, file:/home/tdurieux/.m2/repository/junit/junit/4.7/junit-4.7.jar, file:/home/tdurieux/.m2/repository/org/powermock/powermock-module-junit4-common/1.5.5/powermock-module-junit4-common-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-core/0.8-incubating-SNAPSHOT/flink-core-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/tomcat/jasper-compiler/5.5.23/jasper-compiler-5.5.23.jar, file:/home/tdurieux/.m2/repository/org/powermock/powermock-reflect/1.5.5/powermock-reflect-1.5.5.jar, file:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-java/0.8-incubating-SNAPSHOT/flink-java-0.8-incubating-SNAPSHOT-tests.jar, file:/home/tdurieux/.m2/repository/com/rabbitmq/amqp-client/3.3.1/amqp-client-3.3.1.jar, file:/home/tdurieux/.m2/repository/org/scala-lang/scala-compiler/2.10.4/scala-compiler-2.10.4.jar, file:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-common/2.2.0/hadoop-common-2.2.0.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-yarn/0.8-incubating-SNAPSHOT/flink-yarn-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-spargel/0.8-incubating-SNAPSHOT/flink-spargel-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-api/2.2.0/hadoop-yarn-api-2.2.0.jar, file:/home/tdurieux/.m2/repository/com/esotericsoftware/kryo/kryo/2.24.0/kryo-2.24.0.jar, file:/home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, file:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-xc/1.8.3/jackson-xc-1.8.3.jar, file:/home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar, file:/home/tdurieux/.m2/repository/org/scala-lang/scala-reflect/2.10.4/scala-reflect-2.10.4.jar, file:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar, file:/home/tdurieux/.m2/repository/org/powermock/powermock-api-mockito/1.5.5/powermock-api-mockito-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http/2.1.2/grizzly-http-2.1.2.jar, file:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.8/jackson-core-asl-1.8.8.jar, file:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar, file:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-configuration/1.5.0/flume-ng-configuration-1.5.0.jar, file:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.6/commons-codec-1.6.jar, file:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-client/0.98.6.1-hadoop2/hbase-client-0.98.6.1-hadoop2.jar, file:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.7/commons-codec-1.7.jar, file:/home/tdurieux/.m2/repository/redis/clients/jedis/2.4.2/jedis-2.4.2.jar, file:/home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar, file:/home/tdurieux/.m2/repository/tomcat/jasper-runtime/5.5.23/jasper-runtime-5.5.23.jar, file:/home/tdurieux/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar, file:/home/tdurieux/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar, file:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.8/jackson-mapper-asl-1.8.8.jar, file:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.3.4/zookeeper-3.3.4.jar, file:/home/tdurieux/.m2/repository/org/powermock/powermock-api-support/1.5.5/powermock-api-support-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-tests/0.8-incubating-SNAPSHOT/flink-tests-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-protocol/0.98.6.1-hadoop2/hbase-protocol-0.98.6.1-hadoop2.jar, file:/home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, file:/home/tdurieux/.m2/repository/com/twitter/joauth/6.0.2/joauth-6.0.2.jar, file:/home/tdurieux/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar, file:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-common/2.2.0/hadoop-yarn-common-2.2.0.jar, file:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.3/commons-codec-1.3.jar, file:/home/tdurieux/.m2/repository/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar, file:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.1/commons-math-2.1.jar, file:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.4/commons-codec-1.4.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.0.0.M1/jetty-io-8.0.0.M1.jar, file:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar, file:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar, file:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.1.1/jackson-databind-2.1.1.jar, file:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.2/httpclient-4.2.jar, file:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, file:/home/tdurieux/.m2/repository/com/jcraft/jsch/0.1.42/jsch-0.1.42.jar, file:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.1.2/grizzly-http-server-2.1.2.jar, file:/home/tdurieux/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar, file:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.0.0.M1/jetty-security-8.0.0.M1.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-hadoop-compatibility/0.8-incubating-SNAPSHOT/flink-hadoop-compatibility-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/powermock/powermock-module-junit4/1.5.5/powermock-module-junit4-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.2/httpcore-4.2.jar, file:/home/tdurieux/.m2/repository/org/scala-lang/scala-library/2.10.4/scala-library-2.10.4.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-avro/0.8-incubating-SNAPSHOT/flink-avro-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.1.1/jackson-annotations-2.1.1.jar, file:/home/tdurieux/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar, file:/home/tdurieux/.m2/repository/org/cloudera/htrace/htrace-core/2.04/htrace-core-2.04.jar, file:/home/tdurieux/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar, file:/home/tdurieux/.m2/repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar, file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar, file:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-server/1.9/jersey-server-1.9.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-shaded/0.8-incubating-SNAPSHOT/flink-shaded-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar, file:/home/tdurieux/.m2/repository/org/apache/kafka/kafka_2.10/0.8.0/kafka_2.10-0.8.0.jar, file:/home/tdurieux/.m2/repository/commons-daemon/commons-daemon/1.0.13/commons-daemon-1.0.13.jar, file:/home/tdurieux/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar, file:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-core/1.9/jersey-core-1.9.jar, file:/home/tdurieux/.m2/repository/commons-io/commons-io/2.1/commons-io-2.1.jar, file:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.1.2/grizzly-framework-2.1.2.jar, file:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar, file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar, file:/home/tdurieux/.m2/repository/org/ow2/asm/asm/4.0/asm-4.0.jar, file:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-test-framework/jersey-test-framework-core/1.9/jersey-test-framework-core-1.9.jar, file:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-core/1.5.0/flume-ng-core-1.5.0.jar, file:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar, file:/home/tdurieux/.m2/repository/asm/asm/3.1/asm-3.1.jar, file:/home/tdurieux/.m2/repository/commons-el/commons-el/1.0/commons-el-1.0.jar, file:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-clients/0.8-incubating-SNAPSHOT/flink-clients-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-runtime/0.8-incubating-SNAPSHOT/flink-runtime-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/com/google/inject/extensions/guice-servlet/3.0/guice-servlet-3.0.jar, file:/home/tdurieux/.m2/repository/com/esotericsoftware/minlog/minlog/1.2/minlog-1.2.jar, file:/home/tdurieux/.m2/repository/org/apache/commons/commons-pool2/2.0/commons-pool2-2.0.jar, file:/home/tdurieux/.m2/repository/org/tukaani/xz/1.0/xz-1.0.jar, file:/usr/lib/jvm/java-8-openjdk-amd64/jre/../lib/tools.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-core/0.8-incubating-SNAPSHOT/flink-streaming-core-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.4.5/zookeeper-3.4.5.jar, file:/home/tdurieux/.m2/repository/org/xerial/snappy/snappy-java/1.0.5/snappy-java-1.0.5.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-compiler/0.8-incubating-SNAPSHOT/flink-compiler-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-grizzly2/1.9/jersey-grizzly2-1.9.jar, file:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar, file:/home/tdurieux/.m2/repository/org/powermock/powermock-core/1.5.5/powermock-core-1.5.5.jar, file:/home/tdurieux/.m2/repository/org/mortbay/jetty/servlet-api/3.0.20100224/servlet-api-3.0.20100224.jar, file:/home/tdurieux/.m2/repository/com/twitter/hbc-core/2.2.0/hbc-core-2.2.0.jar, file:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar, file:/home/tdurieux/.m2/repository/com/google/guava/guava/11.0.2/guava-11.0.2.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.0.0.M1/jetty-util-8.0.0.M1.jar, file:/home/tdurieux/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.0.0.M1/jetty-http-8.0.0.M1.jar, file:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sdk/1.5.0/flume-ng-sdk-1.5.0.jar, file:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.3/jackson-jaxrs-1.8.3.jar, file:/home/tdurieux/.m2/repository/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-core/0.8-incubating-SNAPSHOT/flink-core-0.8-incubating-SNAPSHOT-tests.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-hbase/0.8-incubating-SNAPSHOT/flink-hbase-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-scala/0.8-incubating-SNAPSHOT/flink-scala-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/joda-time/joda-time/2.5/joda-time-2.5.jar, file:/home/tdurieux/.m2/repository/io/netty/netty/3.6.6.Final/netty-3.6.6.Final.jar, file:/home/tdurieux/.m2/repository/org/scalatest/scalatest_2.10/2.2.0/scalatest_2.10-2.2.0.jar, file:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-test-framework/jersey-test-framework-grizzly2/1.9/jersey-test-framework-grizzly2-1.9.jar, file:/home/tdurieux/.m2/repository/com/google/guava/guava/12.0.1/guava-12.0.1.jar, file:/home/tdurieux/.m2/repository/com/github/stephenc/findbugs/findbugs-annotations/1.3.9-1/findbugs-annotations-1.3.9-1.jar, file:/home/tdurieux/.m2/repository/com/amazonaws/aws-java-sdk/1.8.1/aws-java-sdk-1.8.1.jar, file:/home/tdurieux/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar, file:/home/tdurieux/.m2/repository/org/scala-lang/scala-library/2.10.1/scala-library-2.10.1.jar, file:/home/tdurieux/.m2/repository/org/fusesource/leveldbjni/leveldbjni-all/1.8/leveldbjni-all-1.8.jar, file:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.1.2/grizzly-http-servlet-2.1.2.jar, file:/home/tdurieux/.m2/repository/org/apache/commons/commons-compress/1.4.1/commons-compress-1.4.1.jar, file:/home/tdurieux/.m2/repository/org/apache/flink/flink-test-utils/0.8-incubating-SNAPSHOT/flink-test-utils-0.8-incubating-SNAPSHOT.jar, file:/home/tdurieux/.m2/repository/com/101tec/zkclient/0.3/zkclient-0.3.jar, file:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-core/2.2.0/hadoop-mapreduce-client-core-2.2.0.jar, file:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-auth/2.2.0/hadoop-auth-2.2.0.jar, file:/home/tdurieux/.m2/repository/org/glassfish/javax.servlet/3.1/javax.servlet-3.1.jar, file:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-client/2.2.0/hadoop-yarn-client-2.2.0.jar, file:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/home/tdurieux/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar, file:/home/tdurieux/.m2/repository/net/java/dev/jets3t/jets3t/0.6.1/jets3t-0.6.1.jar, file:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, file:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.1.1/jackson-core-2.1.1.jar, file:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.0.0.M1/jetty-servlet-8.0.0.M1.jar, file:/home/tdurieux/.m2/repository/io/netty/netty/3.5.12.Final/netty-3.5.12.Final.jar, file:/home/tdurieux/.m2/repository/commons-net/commons-net/3.1/commons-net-3.1.jar, file:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-annotations/2.2.0/hadoop-annotations-2.2.0.jar, file:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.2.4/httpcore-4.2.4.jar, file:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-client/1.9/jersey-client-1.9.jar, file:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar, file:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.10.1.1/derby-10.10.1.1.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
19:52:51.672 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
19:52:51.672 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.flink.compiler.AdditionalOperatorsTest, org.apache.flink.compiler.BranchingPlansCompilerTest, org.apache.flink.compiler.BroadcastVariablePipelinebreakerTest, org.apache.flink.compiler.CachedMatchStrategyCompilerTest, org.apache.flink.compiler.CoGroupSolutionSetFirstTest, org.apache.flink.compiler.DOPChangeTest, org.apache.flink.compiler.DisjointDataFlowsTest, org.apache.flink.compiler.FeedbackPropertiesMatchTest, org.apache.flink.compiler.GroupOrderTest, org.apache.flink.compiler.HardPlansCompilationTest, org.apache.flink.compiler.IterationsCompilerTest, org.apache.flink.compiler.NestedIterationsTest, org.apache.flink.compiler.PartitionPushdownTest, org.apache.flink.compiler.PipelineBreakerTest, org.apache.flink.compiler.ReduceAllTest, org.apache.flink.compiler.SortPartialReuseTest, org.apache.flink.compiler.UnionPropertyPropagationTest, org.apache.flink.compiler.UnionReplacementTest, org.apache.flink.compiler.WorksetIterationCornerCasesTest, org.apache.flink.compiler.WorksetIterationsRecordApiCompilerTest, org.apache.flink.compiler.costs.DefaultCostEstimatorTest, org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest, org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest, org.apache.flink.compiler.custompartition.CustomPartitioningGlobalOptimizationTest, org.apache.flink.compiler.custompartition.CustomPartitioningTest, org.apache.flink.compiler.custompartition.GroupingKeySelectorTranslationTest, org.apache.flink.compiler.custompartition.GroupingPojoTranslationTest, org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest, org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest, org.apache.flink.compiler.dataproperties.GlobalPropertiesFilteringTest, org.apache.flink.compiler.dataproperties.GlobalPropertiesMatchingTest, org.apache.flink.compiler.dataproperties.GlobalPropertiesPushdownTest, org.apache.flink.compiler.java.DeltaIterationDependenciesTest, org.apache.flink.compiler.java.DistinctAndGroupingOptimizerTest, org.apache.flink.compiler.java.GroupReduceCompilationTest, org.apache.flink.compiler.java.IterationCompilerTest, org.apache.flink.compiler.java.JoinTranslationTest, org.apache.flink.compiler.java.OpenIterationTest, org.apache.flink.compiler.java.PartitioningOperatorTest, org.apache.flink.compiler.java.ReduceCompilationTest, org.apache.flink.compiler.java.WorksetIterationsJavaApiCompilerTest, org.apache.flink.compiler.operators.CoGroupGlobalPropertiesCompatibilityTest, org.apache.flink.compiler.operators.CoGroupOnConflictingPartitioningsTest, org.apache.flink.compiler.operators.JoinGlobalPropertiesCompatibilityTest, org.apache.flink.compiler.operators.JoinOnConflictingPartitioningsTest, org.apache.flink.compiler.plan.ChannelTest, org.apache.flink.compiler.plandump.NumberFormattingTest]
19:52:51.674 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[flink-compiler/src/main/java], projectClasspath='[Ljava.net.URL;@6debcae2', projectTests=[org.apache.flink.compiler.AdditionalOperatorsTest, org.apache.flink.compiler.BranchingPlansCompilerTest, org.apache.flink.compiler.BroadcastVariablePipelinebreakerTest, org.apache.flink.compiler.CachedMatchStrategyCompilerTest, org.apache.flink.compiler.CoGroupSolutionSetFirstTest, org.apache.flink.compiler.DOPChangeTest, org.apache.flink.compiler.DisjointDataFlowsTest, org.apache.flink.compiler.FeedbackPropertiesMatchTest, org.apache.flink.compiler.GroupOrderTest, org.apache.flink.compiler.HardPlansCompilationTest, org.apache.flink.compiler.IterationsCompilerTest, org.apache.flink.compiler.NestedIterationsTest, org.apache.flink.compiler.PartitionPushdownTest, org.apache.flink.compiler.PipelineBreakerTest, org.apache.flink.compiler.ReduceAllTest, org.apache.flink.compiler.SortPartialReuseTest, org.apache.flink.compiler.UnionPropertyPropagationTest, org.apache.flink.compiler.UnionReplacementTest, org.apache.flink.compiler.WorksetIterationCornerCasesTest, org.apache.flink.compiler.WorksetIterationsRecordApiCompilerTest, org.apache.flink.compiler.costs.DefaultCostEstimatorTest, org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest, org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest, org.apache.flink.compiler.custompartition.CustomPartitioningGlobalOptimizationTest, org.apache.flink.compiler.custompartition.CustomPartitioningTest, org.apache.flink.compiler.custompartition.GroupingKeySelectorTranslationTest, org.apache.flink.compiler.custompartition.GroupingPojoTranslationTest, org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest, org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest, org.apache.flink.compiler.dataproperties.GlobalPropertiesFilteringTest, org.apache.flink.compiler.dataproperties.GlobalPropertiesMatchingTest, org.apache.flink.compiler.dataproperties.GlobalPropertiesPushdownTest, org.apache.flink.compiler.java.DeltaIterationDependenciesTest, org.apache.flink.compiler.java.DistinctAndGroupingOptimizerTest, org.apache.flink.compiler.java.GroupReduceCompilationTest, org.apache.flink.compiler.java.IterationCompilerTest, org.apache.flink.compiler.java.JoinTranslationTest, org.apache.flink.compiler.java.OpenIterationTest, org.apache.flink.compiler.java.PartitioningOperatorTest, org.apache.flink.compiler.java.ReduceCompilationTest, org.apache.flink.compiler.java.WorksetIterationsJavaApiCompilerTest, org.apache.flink.compiler.operators.CoGroupGlobalPropertiesCompatibilityTest, org.apache.flink.compiler.operators.CoGroupOnConflictingPartitioningsTest, org.apache.flink.compiler.operators.JoinGlobalPropertiesCompatibilityTest, org.apache.flink.compiler.operators.JoinOnConflictingPartitioningsTest, org.apache.flink.compiler.plan.ChannelTest, org.apache.flink.compiler.plandump.NumberFormattingTest], complianceLevel=7, outputFolder=., json=true}
19:52:51.675 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 24
19:52:51.680 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 445 MB
19:52:51.680 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
19:52:51.680 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 483 MB
19:52:51.681 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
19:52:51.682 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
19:52:51.682 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
19:53:02.517 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
19:53:02.518 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.Ordering:148 which is executed by 2 tests
19:53:02.518 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.Ordering:148
19:53:02.518 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
19:53:02.519 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.TwoInputNode:439 which is executed by 4 tests
-2053174239
19:53:03.260 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
19:53:03.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.DistinctOperator:48 which is executed by 4 tests
19:53:03.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.DistinctOperator:48
19:53:03.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
19:53:03.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.DistinctOperator:114 which is executed by 4 tests
19:53:03.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.DistinctOperator:114
19:53:03.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
19:53:03.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.DistinctOperator:110 which is executed by 4 tests
19:53:03.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.DistinctOperator:110
19:53:03.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
19:53:03.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.DistinctOperator:107 which is executed by 4 tests
19:53:03.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.DistinctOperator:107
19:53:03.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
19:53:03.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.DistinctOperator:106 which is executed by 4 tests
19:53:03.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.DistinctOperator:106
19:53:03.264 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
19:53:03.264 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.DistinctOperator:104 which is executed by 4 tests
19:53:03.264 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.DistinctOperator:104
19:53:03.264 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
19:53:03.264 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.DistinctOperator:103 which is executed by 4 tests
19:53:03.264 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.DistinctOperator:103
19:53:03.265 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
19:53:03.265 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.DistinctOperator:100 which is executed by 4 tests
19:53:03.265 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.DistinctOperator:100
19:53:03.265 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
19:53:03.265 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.DistinctOperator:99 which is executed by 4 tests
19:53:03.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.DistinctOperator:99
19:53:03.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
19:53:03.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.DistinctOperator:98 which is executed by 4 tests
19:53:03.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.DistinctOperator:98
19:53:03.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
19:53:03.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.DistinctOperator:95 which is executed by 4 tests
19:53:03.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.DistinctOperator:95
19:53:03.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
19:53:03.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.DistinctOperator:94 which is executed by 4 tests
19:53:03.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.DistinctOperator:94
19:53:03.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
19:53:03.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.DistinctOperator:93 which is executed by 4 tests
19:53:03.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.DistinctOperator:93
19:53:03.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
19:53:03.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.DistinctOperator:91 which is executed by 4 tests
19:53:03.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.DistinctOperator:91
19:53:03.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
19:53:03.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.DistinctOperator:89 which is executed by 4 tests
19:53:03.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.DistinctOperator:89
19:53:03.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
19:53:03.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.DistinctOperator:87 which is executed by 4 tests
19:53:03.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.DistinctOperator:87
19:53:03.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
19:53:03.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:93 which is executed by 4 tests
19:53:03.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:93
19:53:03.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
19:53:03.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:92 which is executed by 4 tests
19:53:03.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:92
19:53:03.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
19:53:03.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.DataSet:436 which is executed by 4 tests
19:53:03.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.DataSet:436
19:53:03.271 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
19:53:03.271 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.Ordering:143 which is executed by 1 tests
19:53:03.271 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.Ordering:143
19:53:03.271 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
19:53:03.271 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:1188 which is executed by 4 tests
1189329080
19:53:03.681 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
19:53:03.681 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:1186 which is executed by 4 tests
1189329080
19:53:04.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
19:53:04.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:1185 which is executed by 4 tests
1189329080
19:53:04.361 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:05.059 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (655 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) . Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) . Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:06.892 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
19:53:06.893 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:1184 which is executed by 4 tests
1189329080
19:53:07.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:07.502 [pool-10-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (264 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) . Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) . Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:08.504 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
19:53:08.504 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:1183 which is executed by 4 tests
1189329080
19:53:08.826 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
19:53:08.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:1181 which is executed by 4 tests
1189329080
19:53:09.129 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:09.402 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (239 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join(1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup(1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:10.327 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
19:53:10.327 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:1180 which is executed by 4 tests
1189329080
19:53:10.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:10.913 [pool-22-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (241 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @  (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @  (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:11.789 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
19:53:11.789 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:1178 which is executed by 4 tests
1189329080
19:53:12.118 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
19:53:12.118 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:721 which is executed by 4 tests
1189329080
19:53:12.421 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:12.670 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (238 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: Error in compiler: more than one best plan was created!
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:564)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: Error in compiler: more than one best plan was created!
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:564)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:403)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:403)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:13.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
19:53:13.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase$PartitionMethod:36 which is executed by 1 tests
19:53:13.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase$PartitionMethod:36
19:53:13.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
19:53:13.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.util.FieldSet:231 which is executed by 6 tests
19:53:13.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.util.FieldSet:231
19:53:13.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
19:53:13.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:141 which is executed by 6 tests
1625508872
19:53:14.234 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:14.474 [pool-34-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (229 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:15.073 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
19:53:15.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.SortedGrouping:94 which is executed by 6 tests
19:53:15.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.SortedGrouping:94
19:53:15.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
19:53:15.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.SortedGrouping:90 which is executed by 6 tests
19:53:15.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.SortedGrouping:90
19:53:15.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
19:53:15.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:175 which is executed by 6 tests
19:53:15.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:175
19:53:15.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
19:53:15.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:173 which is executed by 6 tests
19:53:15.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:173
19:53:15.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
19:53:15.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:172 which is executed by 6 tests
19:53:15.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:172
19:53:15.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
19:53:15.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:171 which is executed by 6 tests
19:53:15.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:171
19:53:15.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
19:53:15.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:169 which is executed by 6 tests
19:53:15.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:169
19:53:15.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
19:53:15.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:168 which is executed by 6 tests
19:53:15.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:168
19:53:15.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
19:53:15.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:166 which is executed by 6 tests
19:53:15.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:166
19:53:15.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
19:53:15.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.TwoInputNode:362 which is executed by 7 tests
-2053174239
19:53:15.366 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:15.607 [pool-40-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (231 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:324)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:324)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:324)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:324)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:16.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
19:53:16.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.SingleInputNode:232 which is executed by 7 tests
1770269029
19:53:16.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
19:53:16.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:358 which is executed by 7 tests
19:53:16.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:358
19:53:16.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
19:53:16.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:357 which is executed by 7 tests
19:53:16.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:357
19:53:16.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
19:53:16.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:356 which is executed by 7 tests
19:53:16.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:356
19:53:16.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
19:53:16.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:355 which is executed by 7 tests
19:53:16.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:355
19:53:16.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
19:53:16.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:354 which is executed by 7 tests
19:53:16.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:354
19:53:16.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
19:53:16.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:342 which is executed by 7 tests
19:53:16.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:342
19:53:16.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
19:53:16.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:341 which is executed by 7 tests
19:53:16.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:341
19:53:16.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
19:53:16.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:300 which is executed by 7 tests
19:53:16.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:300
19:53:16.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
19:53:16.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:299 which is executed by 7 tests
19:53:16.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:299
19:53:16.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
19:53:16.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.SingleInputUdfOperator:131 which is executed by 7 tests
19:53:16.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.SingleInputUdfOperator:131
19:53:16.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
19:53:16.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.SingleInputUdfOperator:130 which is executed by 7 tests
19:53:16.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.SingleInputUdfOperator:130
19:53:16.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
19:53:16.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.SingleInputUdfOperator:128 which is executed by 7 tests
19:53:16.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.SingleInputUdfOperator:128
19:53:16.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
19:53:16.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.SingleInputUdfOperator:127 which is executed by 7 tests
19:53:16.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.SingleInputUdfOperator:127
19:53:16.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
19:53:16.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.JoinOperator$DefaultJoin:523 which is executed by 2 tests
19:53:16.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.JoinOperator$DefaultJoin:523
19:53:16.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
19:53:16.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.JoinOperator$DefaultJoin:522 which is executed by 2 tests
19:53:16.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.JoinOperator$DefaultJoin:522
19:53:16.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
19:53:16.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.JoinOperator$DefaultJoin:519 which is executed by 2 tests
19:53:16.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.JoinOperator$DefaultJoin:519
19:53:16.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
19:53:16.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:97 which is executed by 2 tests
19:53:16.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:97
19:53:16.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
19:53:16.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.UnsortedGrouping:235 which is executed by 8 tests
19:53:16.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.UnsortedGrouping:235
19:53:16.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
19:53:16.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.UnsortedGrouping:234 which is executed by 8 tests
19:53:16.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.UnsortedGrouping:234
19:53:16.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
19:53:16.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.UnsortedGrouping:233 which is executed by 8 tests
19:53:16.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.UnsortedGrouping:233
19:53:16.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
19:53:16.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.SortedGrouping:131 which is executed by 8 tests
19:53:16.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.SortedGrouping:131
19:53:16.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
19:53:16.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.SortedGrouping:130 which is executed by 8 tests
19:53:16.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.SortedGrouping:130
19:53:16.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
19:53:16.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.SortedGrouping:129 which is executed by 8 tests
19:53:16.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.SortedGrouping:129
19:53:16.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
19:53:16.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.SortedGrouping:126 which is executed by 8 tests
19:53:16.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.SortedGrouping:126
19:53:16.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
19:53:16.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.util.FieldList:142 which is executed by 8 tests
19:53:16.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.util.FieldList:142
19:53:16.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
19:53:16.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.CoGroupNode:59 which is executed by 2 tests
45987318
19:53:16.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
19:53:16.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.DataSet:945 which is executed by 8 tests
19:53:16.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.DataSet:945
19:53:16.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
19:53:16.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.Ordering:158 which is executed by 8 tests
19:53:16.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.Ordering:158
19:53:16.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
19:53:16.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.Ordering:102 which is executed by 8 tests
19:53:16.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.Ordering:102
19:53:16.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
19:53:16.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.Ordering:99 which is executed by 8 tests
19:53:16.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.Ordering:99
19:53:16.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
19:53:16.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.Ordering:95 which is executed by 8 tests
19:53:16.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.Ordering:95
19:53:16.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
19:53:16.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.Ordering:92 which is executed by 8 tests
19:53:16.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.Ordering:92
19:53:16.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
19:53:16.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:799 which is executed by 8 tests
1189329080
19:53:17.271 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:17.517 [pool-46-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (235 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:18.344 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
19:53:18.344 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:798 which is executed by 8 tests
1189329080
19:53:18.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:18.884 [pool-52-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (232 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:19.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
19:53:19.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:97 which is executed by 8 tests
1625508872
19:53:19.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:20.168 [pool-58-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (229 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:20.810 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
19:53:20.810 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:94 which is executed by 8 tests
1625508872
19:53:21.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:21.320 [pool-64-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (229 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:21.914 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:22.153 [pool-70-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (229 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.RuntimeException: Bug: Inconsistent sort for group strategy.
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:53)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.RuntimeException: Bug: Inconsistent sort for group strategy.
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:53)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:200 which is executed by 9 tests
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:200
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:199 which is executed by 9 tests
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:199
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:191 which is executed by 9 tests
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:191
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:190 which is executed by 9 tests
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:190
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:189 which is executed by 9 tests
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:189
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:188 which is executed by 9 tests
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:188
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
19:53:22.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:187 which is executed by 9 tests
19:53:22.743 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:187
19:53:22.743 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
19:53:22.743 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedLocalProperties:100 which is executed by 9 tests
-1126041135
19:53:23.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
19:53:23.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedLocalProperties:99 which is executed by 9 tests
-1126041135
19:53:23.276 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:23.734 [pool-76-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (446 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:24.315 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
19:53:24.315 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase:76 which is executed by 9 tests
19:53:24.315 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase:76
19:53:24.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
19:53:24.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase:73 which is executed by 9 tests
19:53:24.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase:73
19:53:24.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
19:53:24.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase:72 which is executed by 9 tests
19:53:24.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase:72
19:53:24.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
19:53:24.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor:119 which is executed by 9 tests
-897196051
19:53:24.581 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:24.824 [pool-82-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (233 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
java.lang.UnsupportedOperationException: Not yet supported
	at org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor.createPossibleGlobalProperties(PartitionNode.java:80)
	at org.apache.flink.compiler.operators.OperatorDescriptorSingle.getPossibleGlobalProperties(OperatorDescriptorSingle.java:58)
	at org.apache.flink.compiler.dag.SingleInputNode.computeInterestingPropertiesForInputs(SingleInputNode.java:222)
	at org.apache.flink.compiler.PactCompiler$InterestingPropertyVisitor.preVisit(PactCompiler.java:1029)
	at org.apache.flink.compiler.PactCompiler$InterestingPropertyVisitor.preVisit(PactCompiler.java:1007)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:484)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:486)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:486)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:486)
	at org.apache.flink.compiler.dag.TwoInputNode.accept(TwoInputNode.java:735)
	at org.apache.flink.compiler.dag.DataSinkNode.accept(DataSinkNode.java:246)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:549)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.UnsupportedOperationException: Not yet supported
	at org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor.createPossibleGlobalProperties(PartitionNode.java:80)
	at org.apache.flink.compiler.operators.OperatorDescriptorSingle.getPossibleGlobalProperties(OperatorDescriptorSingle.java:58)
	at org.apache.flink.compiler.dag.SingleInputNode.computeInterestingPropertiesForInputs(SingleInputNode.java:222)
	at org.apache.flink.compiler.PactCompiler$InterestingPropertyVisitor.preVisit(PactCompiler.java:1029)
	at org.apache.flink.compiler.PactCompiler$InterestingPropertyVisitor.preVisit(PactCompiler.java:1007)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:484)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:486)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:486)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:486)
	at org.apache.flink.compiler.dag.TwoInputNode.accept(TwoInputNode.java:735)
	at org.apache.flink.compiler.dag.DataSinkNode.accept(DataSinkNode.java:246)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:549)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:25.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
19:53:25.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor:118 which is executed by 9 tests
-897196051
19:53:25.668 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:25.907 [pool-88-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (228 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:27)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:27)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:26.664 [pool-87-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.SortPartialReuseTest#testCustomPartitioningNotReused
java -cp /tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-compiler/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-compiler/target/test-classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-shaded/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-core/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-java/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-runtime/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-clients/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-test-utils/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-scala/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-examples/flink-java-examples/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-examples/flink-scala-examples/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-tests/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-avro/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-jdbc/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-spargel/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-hadoop-compatibility/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-core/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-connectors/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-examples/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-hbase/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-yarn/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-quickstart/flink-quickstart-java/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-quickstart/flink-quickstart-scala/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-java8/target/classes:/home/tdurieux/.m2/repository/io/netty/netty-all/4.0.21.Final/netty-all-4.0.21.Final.jar:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-common/0.98.6.1-hadoop2/hbase-common-0.98.6.1-hadoop2.jar:/home/tdurieux/.m2/repository/org/scalamacros/quasiquotes_2.10/2.0.1/quasiquotes_2.10-2.0.1.jar:/home/tdurieux/.m2/repository/io/netty/netty/3.6.2.Final/netty-3.6.2.Final.jar:/home/tdurieux/.m2/repository/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar:/home/tdurieux/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.2.5/httpclient-4.2.5.jar:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/home/tdurieux/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/home/tdurieux/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/home/tdurieux/.m2/repository/org/apache/mina/mina-core/2.0.4/mina-core-2.0.4.jar:/home/tdurieux/.m2/repository/com/google/code/simple-spring-memcached/spymemcached/2.8.4/spymemcached-2.8.4.jar:/home/tdurieux/.m2/repository/org/apache/avro/avro/1.7.6/avro-1.7.6.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-java/0.8-incubating-SNAPSHOT/flink-java-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.json/2.0.6/org.apache.sling.commons.json-2.0.6.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.0.0.M1/jetty-server-8.0.0.M1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-connectors/0.8-incubating-SNAPSHOT/flink-streaming-connectors-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.1.2/grizzly-rcm-2.1.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.0.0.M1/jetty-continuation-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-hdfs/2.2.0/hadoop-hdfs-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-examples/0.8-incubating-SNAPSHOT/flink-streaming-examples-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-scala-examples/0.8-incubating-SNAPSHOT/flink-scala-examples-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-json/1.9/jersey-json-1.9.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-java-examples/0.8-incubating-SNAPSHOT/flink-java-examples-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/avro/avro-ipc/1.7.6/avro-ipc-1.7.6.jar:/home/tdurieux/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/tdurieux/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.9/jersey-guice-1.9.jar:/home/tdurieux/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-module-junit4-common/1.5.5/powermock-module-junit4-common-1.5.5.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-core/0.8-incubating-SNAPSHOT/flink-core-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/tomcat/jasper-compiler/5.5.23/jasper-compiler-5.5.23.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-reflect/1.5.5/powermock-reflect-1.5.5.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-java/0.8-incubating-SNAPSHOT/flink-java-0.8-incubating-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/com/rabbitmq/amqp-client/3.3.1/amqp-client-3.3.1.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-compiler/2.10.4/scala-compiler-2.10.4.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-common/2.2.0/hadoop-common-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-yarn/0.8-incubating-SNAPSHOT/flink-yarn-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-spargel/0.8-incubating-SNAPSHOT/flink-spargel-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-api/2.2.0/hadoop-yarn-api-2.2.0.jar:/home/tdurieux/.m2/repository/com/esotericsoftware/kryo/kryo/2.24.0/kryo-2.24.0.jar:/home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-xc/1.8.3/jackson-xc-1.8.3.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-reflect/2.10.4/scala-reflect-2.10.4.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-api-mockito/1.5.5/powermock-api-mockito-1.5.5.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http/2.1.2/grizzly-http-2.1.2.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.8/jackson-core-asl-1.8.8.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-configuration/1.5.0/flume-ng-configuration-1.5.0.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.6/commons-codec-1.6.jar:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-client/0.98.6.1-hadoop2/hbase-client-0.98.6.1-hadoop2.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.7/commons-codec-1.7.jar:/home/tdurieux/.m2/repository/redis/clients/jedis/2.4.2/jedis-2.4.2.jar:/home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar:/home/tdurieux/.m2/repository/tomcat/jasper-runtime/5.5.23/jasper-runtime-5.5.23.jar:/home/tdurieux/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/home/tdurieux/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.8/jackson-mapper-asl-1.8.8.jar:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.3.4/zookeeper-3.3.4.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-api-support/1.5.5/powermock-api-support-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-tests/0.8-incubating-SNAPSHOT/flink-tests-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-protocol/0.98.6.1-hadoop2/hbase-protocol-0.98.6.1-hadoop2.jar:/home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/tdurieux/.m2/repository/com/twitter/joauth/6.0.2/joauth-6.0.2.jar:/home/tdurieux/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-common/2.2.0/hadoop-yarn-common-2.2.0.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.3/commons-codec-1.3.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.1/commons-math-2.1.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.4/commons-codec-1.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.0.0.M1/jetty-io-8.0.0.M1.jar:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.1.1/jackson-databind-2.1.1.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.2/httpclient-4.2.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/com/jcraft/jsch/0.1.42/jsch-0.1.42.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.1.2/grizzly-http-server-2.1.2.jar:/home/tdurieux/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.0.0.M1/jetty-security-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-hadoop-compatibility/0.8-incubating-SNAPSHOT/flink-hadoop-compatibility-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-module-junit4/1.5.5/powermock-module-junit4-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.2/httpcore-4.2.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-library/2.10.4/scala-library-2.10.4.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-avro/0.8-incubating-SNAPSHOT/flink-avro-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.1.1/jackson-annotations-2.1.1.jar:/home/tdurieux/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/home/tdurieux/.m2/repository/org/cloudera/htrace/htrace-core/2.04/htrace-core-2.04.jar:/home/tdurieux/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-server/1.9/jersey-server-1.9.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-shaded/0.8-incubating-SNAPSHOT/flink-shaded-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/tdurieux/.m2/repository/org/apache/kafka/kafka_2.10/0.8.0/kafka_2.10-0.8.0.jar:/home/tdurieux/.m2/repository/commons-daemon/commons-daemon/1.0.13/commons-daemon-1.0.13.jar:/home/tdurieux/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-core/1.9/jersey-core-1.9.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.1/commons-io-2.1.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.1.2/grizzly-framework-2.1.2.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/4.0/asm-4.0.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-test-framework/jersey-test-framework-core/1.9/jersey-test-framework-core-1.9.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-core/1.5.0/flume-ng-core-1.5.0.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/home/tdurieux/.m2/repository/asm/asm/3.1/asm-3.1.jar:/home/tdurieux/.m2/repository/commons-el/commons-el/1.0/commons-el-1.0.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-clients/0.8-incubating-SNAPSHOT/flink-clients-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-runtime/0.8-incubating-SNAPSHOT/flink-runtime-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/google/inject/extensions/guice-servlet/3.0/guice-servlet-3.0.jar:/home/tdurieux/.m2/repository/com/esotericsoftware/minlog/minlog/1.2/minlog-1.2.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-pool2/2.0/commons-pool2-2.0.jar:/home/tdurieux/.m2/repository/org/tukaani/xz/1.0/xz-1.0.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/../lib/tools.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-core/0.8-incubating-SNAPSHOT/flink-streaming-core-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.4.5/zookeeper-3.4.5.jar:/home/tdurieux/.m2/repository/org/xerial/snappy/snappy-java/1.0.5/snappy-java-1.0.5.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-compiler/0.8-incubating-SNAPSHOT/flink-compiler-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-grizzly2/1.9/jersey-grizzly2-1.9.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-core/1.5.5/powermock-core-1.5.5.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/servlet-api/3.0.20100224/servlet-api-3.0.20100224.jar:/home/tdurieux/.m2/repository/com/twitter/hbc-core/2.2.0/hbc-core-2.2.0.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/11.0.2/guava-11.0.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.0.0.M1/jetty-util-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.0.0.M1/jetty-http-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sdk/1.5.0/flume-ng-sdk-1.5.0.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.3/jackson-jaxrs-1.8.3.jar:/home/tdurieux/.m2/repository/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-core/0.8-incubating-SNAPSHOT/flink-core-0.8-incubating-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-hbase/0.8-incubating-SNAPSHOT/flink-hbase-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-scala/0.8-incubating-SNAPSHOT/flink-scala-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.5/joda-time-2.5.jar:/home/tdurieux/.m2/repository/io/netty/netty/3.6.6.Final/netty-3.6.6.Final.jar:/home/tdurieux/.m2/repository/org/scalatest/scalatest_2.10/2.2.0/scalatest_2.10-2.2.0.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-test-framework/jersey-test-framework-grizzly2/1.9/jersey-test-framework-grizzly2-1.9.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/12.0.1/guava-12.0.1.jar:/home/tdurieux/.m2/repository/com/github/stephenc/findbugs/findbugs-annotations/1.3.9-1/findbugs-annotations-1.3.9-1.jar:/home/tdurieux/.m2/repository/com/amazonaws/aws-java-sdk/1.8.1/aws-java-sdk-1.8.1.jar:/home/tdurieux/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-library/2.10.1/scala-library-2.10.1.jar:/home/tdurieux/.m2/repository/org/fusesource/leveldbjni/leveldbjni-all/1.8/leveldbjni-all-1.8.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.1.2/grizzly-http-servlet-2.1.2.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-compress/1.4.1/commons-compress-1.4.1.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-test-utils/0.8-incubating-SNAPSHOT/flink-test-utils-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/101tec/zkclient/0.3/zkclient-0.3.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-core/2.2.0/hadoop-mapreduce-client-core-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-auth/2.2.0/hadoop-auth-2.2.0.jar:/home/tdurieux/.m2/repository/org/glassfish/javax.servlet/3.1/javax.servlet-3.1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-client/2.2.0/hadoop-yarn-client-2.2.0.jar:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/home/tdurieux/.m2/repository/net/java/dev/jets3t/jets3t/0.6.1/jets3t-0.6.1.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.1.1/jackson-core-2.1.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.0.0.M1/jetty-servlet-8.0.0.M1.jar:/home/tdurieux/.m2/repository/io/netty/netty/3.5.12.Final/netty-3.5.12.Final.jar:/home/tdurieux/.m2/repository/commons-net/commons-net/3.1/commons-net-3.1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-annotations/2.2.0/hadoop-annotations-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.2.4/httpcore-4.2.4.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-client/1.9/jersey-client-1.9.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.10.1.1/derby-10.10.1.1.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/home/tdurieux/defects4j4repair/repair_tools/nopol.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar: fr.inria.lille.repair.MethodTestRunner org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testIncompatibleHashAndCustomPartitioning org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionPojo org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionKeySelector org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testIncompatibleHashAndCustomPartitioning org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningCoGroup org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningJoin org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionTuples org.apache.flink.compiler.java.PartitioningOperatorTest#testPartitiongOperatorPreservesFields 
19:53:27.497 [pool-87-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - ClassPrepareEvent
19:53:27.523 [pool-87-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.compiler.dataproperties.RequestedGlobalProperties
19:53:27.525 [pool-87-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor
19:53:27.535 [pool-87-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.api.common.operators.base.PartitionOperatorBase$PartitionMethod
19:53:27.540 [pool-87-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.api.common.operators.util.FieldSet
19:53:27.544 [pool-87-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.api.common.functions.Partitioner
19:53:27.565 [pool-87-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.lang.String
19:53:27.566 [pool-87-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.lang.UnsupportedOperationException
19:53:27.567 [pool-87-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.lang.IllegalArgumentException
19:53:27.722 [pool-87-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.Collections
19:53:27.728 [pool-87-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.List
19:53:27.891 [pool-87-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:53:27.901 [pool-87-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testIncompatibleHashAndCustomPartitioning iteration 0
19:53:27.908 [pool-87-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] rgps=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=827)
19:53:27.911 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:53:27.911 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=817)
19:53:27.911 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:53:27.939 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:53:27.943 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:53:27.949 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:53:27.949 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:53:27.949 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:53:27.949 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:53:28.008 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:53:28.009 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:53:28.028 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:53:28.033 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:53:28.036 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:53:28.040 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:53:28.043 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:53:28.047 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:53:28.048 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:53:28.053 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:53:28.062 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:53:28.065 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:53:28.068 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:53:28.071 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:53:28.074 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:53:28.076 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:53:28.078 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:53:28.084 [pool-131-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:28.089 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:53:28.092 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:53:28.095 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:53:28.098 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:53:28.101 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:53:28.104 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:53:28.105 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:53:28.106 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:53:28.113 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:53:28.115 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:53:28.118 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:53:28.121 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:53:28.124 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:53:28.126 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:53:28.128 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:53:28.129 [pool-147-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:28.133 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:53:28.136 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:53:28.139 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:53:28.142 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:53:28.145 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:53:28.147 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:53:28.149 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:53:28.150 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:53:28.226 [pool-87-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:53:28.230 [pool-87-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionPojo iteration 0
19:53:28.231 [pool-87-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] rgps=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1236)
19:53:28.231 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:53:28.231 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1229)
19:53:28.232 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:53:28.245 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:53:28.248 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:53:28.251 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:53:28.251 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:53:28.252 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:53:28.252 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:53:28.261 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:53:28.262 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:53:28.270 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:53:28.274 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:53:28.277 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:53:28.280 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:53:28.283 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:53:28.286 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:53:28.287 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:53:28.291 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:53:28.297 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:53:28.300 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:53:28.302 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:53:28.305 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:53:28.308 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:53:28.311 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:53:28.312 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:53:28.314 [pool-178-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:28.319 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:53:28.323 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:53:28.326 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:53:28.329 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:53:28.331 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:53:28.334 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:53:28.335 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:53:28.336 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:53:28.342 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:53:28.345 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:53:28.347 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:53:28.350 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:53:28.353 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:53:28.356 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:53:28.357 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:53:28.359 [pool-194-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:28.362 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:53:28.365 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:53:28.368 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:53:28.371 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:53:28.374 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:53:28.377 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:53:28.379 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:53:28.380 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:53:28.398 [pool-87-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:53:28.402 [pool-87-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionKeySelector iteration 0
19:53:28.403 [pool-87-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] rgps=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1341)
19:53:28.403 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:53:28.403 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1333)
19:53:28.403 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:53:28.413 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:53:28.416 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:53:28.419 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:53:28.419 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:53:28.420 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:53:28.420 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:53:28.426 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:53:28.427 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:53:28.435 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:53:28.438 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:53:28.440 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:53:28.443 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:53:28.446 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:53:28.449 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:53:28.450 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:53:28.455 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:53:28.461 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:53:28.463 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:53:28.466 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:53:28.469 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:53:28.472 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:53:28.474 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:53:28.476 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:53:28.477 [pool-225-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:28.481 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:53:28.484 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:53:28.486 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:53:28.489 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:53:28.492 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:53:28.494 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:53:28.496 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:53:28.497 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:53:28.503 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:53:28.506 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:53:28.508 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:53:28.511 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:53:28.514 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:53:28.517 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:53:28.518 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:53:28.520 [pool-241-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:28.523 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:53:28.526 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:53:28.529 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:53:28.532 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:53:28.534 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:53:28.537 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:53:28.538 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:53:28.540 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:53:28.563 [pool-87-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:53:28.567 [pool-87-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testIncompatibleHashAndCustomPartitioning iteration 0
19:53:28.568 [pool-87-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] rgps=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1404)
19:53:28.568 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:53:28.569 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1394)
19:53:28.569 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:53:28.578 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:53:28.580 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:53:28.584 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:53:28.584 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:53:28.584 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:53:28.584 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:53:28.588 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:53:28.590 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:53:28.598 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:53:28.601 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:53:28.605 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:53:28.608 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:53:28.611 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:53:28.614 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:53:28.615 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:53:28.619 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:53:28.624 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:53:28.627 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:53:28.630 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:53:28.633 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:53:28.635 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:53:28.638 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:53:28.639 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:53:28.641 [pool-272-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:28.644 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:53:28.647 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:53:28.650 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:53:28.652 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:53:28.655 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:53:28.658 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:53:28.659 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:53:28.660 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:53:28.666 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:53:28.669 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:53:28.672 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:53:28.674 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:53:28.677 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:53:28.680 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:53:28.681 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:53:28.683 [pool-288-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:28.687 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:53:28.689 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:53:28.692 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:53:28.695 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:53:28.698 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:53:28.701 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:53:28.702 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:53:28.703 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:53:28.716 [pool-87-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:53:28.720 [pool-87-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningCoGroup iteration 0
19:53:28.721 [pool-87-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] rgps=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1436)
19:53:28.721 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:53:28.721 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1429)
19:53:28.721 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:53:28.730 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:53:28.733 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:53:28.737 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:53:28.737 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:53:28.737 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:53:28.737 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:53:28.741 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:53:28.743 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:53:28.752 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:53:28.755 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:53:28.759 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:53:28.762 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:53:28.765 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:53:28.768 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:53:28.769 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:53:28.773 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:53:28.780 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:53:28.783 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:53:28.786 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:53:28.789 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:53:28.791 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:53:28.794 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:53:28.795 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:53:28.797 [pool-319-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:28.800 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:53:28.803 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:53:28.806 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:53:28.808 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:53:28.811 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:53:28.814 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:53:28.815 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:53:28.816 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:53:28.822 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:53:28.825 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:53:28.827 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:53:28.830 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:53:28.833 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:53:28.836 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:53:28.837 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:53:28.838 [pool-335-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:28.842 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:53:28.845 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:53:28.847 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:53:28.850 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:53:28.853 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:53:28.855 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:53:28.856 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:53:28.858 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:53:28.859 [pool-87-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:53:28.861 [pool-87-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningCoGroup iteration 1
19:53:28.862 [pool-87-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] rgps=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1449)
19:53:28.862 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:53:28.862 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1447)
19:53:28.863 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:53:28.872 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:53:28.874 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:53:28.877 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:53:28.877 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:53:28.877 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:53:28.877 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:53:28.881 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:53:28.882 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:53:28.889 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:53:28.891 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:53:28.894 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:53:28.897 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:53:28.899 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:53:28.902 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:53:28.903 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:53:28.906 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:53:28.912 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:53:28.914 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:53:28.917 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:53:28.920 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:53:28.923 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:53:28.925 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:53:28.927 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:53:28.928 [pool-366-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:28.931 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:53:28.934 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:53:28.937 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:53:28.940 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:53:28.942 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:53:28.945 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:53:28.946 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:53:28.947 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:53:28.953 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:53:28.956 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:53:28.958 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:53:28.961 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:53:28.963 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:53:28.966 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:53:28.967 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:53:28.968 [pool-382-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:28.972 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:53:28.975 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:53:28.978 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:53:28.980 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:53:28.983 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:53:28.985 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:53:28.986 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:53:28.987 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:53:29.056 [pool-87-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:53:29.060 [pool-87-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningJoin iteration 0
19:53:29.061 [pool-87-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] rgps=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1541)
19:53:29.061 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:53:29.061 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1534)
19:53:29.061 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:53:29.075 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:53:29.078 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:53:29.082 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:53:29.082 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:53:29.082 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:53:29.082 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:53:29.088 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:53:29.090 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:53:29.099 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:53:29.101 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:53:29.104 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:53:29.107 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:53:29.110 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:53:29.113 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:53:29.114 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:53:29.118 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:53:29.124 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:53:29.127 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:53:29.130 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:53:29.133 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:53:29.136 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:53:29.139 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:53:29.140 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:53:29.142 [pool-413-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:29.146 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:53:29.149 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:53:29.152 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:53:29.155 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:53:29.158 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:53:29.160 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:53:29.162 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:53:29.163 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:53:29.169 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:53:29.171 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:53:29.174 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:53:29.177 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:53:29.180 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:53:29.183 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:53:29.184 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:53:29.186 [pool-429-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:29.190 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:53:29.193 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:53:29.196 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:53:29.199 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:53:29.202 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:53:29.205 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:53:29.206 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:53:29.207 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:53:29.208 [pool-87-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:53:29.210 [pool-87-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningJoin iteration 1
19:53:29.211 [pool-87-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] rgps=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1574)
19:53:29.211 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:53:29.211 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1572)
19:53:29.212 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:53:29.221 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:53:29.224 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:53:29.227 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:53:29.227 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:53:29.227 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:53:29.227 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:53:29.230 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:53:29.231 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:53:29.238 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:53:29.243 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:53:29.245 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:53:29.248 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:53:29.250 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:53:29.252 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:53:29.253 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:53:29.256 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:53:29.262 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:53:29.264 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:53:29.267 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:53:29.270 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:53:29.272 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:53:29.275 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:53:29.276 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:53:29.277 [pool-460-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:29.281 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:53:29.283 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:53:29.286 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:53:29.288 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:53:29.291 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:53:29.294 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:53:29.295 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:53:29.295 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:53:29.301 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:53:29.304 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:53:29.306 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:53:29.309 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:53:29.311 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:53:29.314 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:53:29.315 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:53:29.316 [pool-476-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:29.320 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:53:29.323 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:53:29.325 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:53:29.328 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:53:29.330 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:53:29.333 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:53:29.334 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:53:29.335 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:53:29.365 [pool-87-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:53:29.369 [pool-87-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionTuples iteration 0
19:53:29.370 [pool-87-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] rgps=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1594)
19:53:29.370 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:53:29.370 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1587)
19:53:29.370 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:53:29.380 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:53:29.383 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:53:29.386 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:53:29.386 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:53:29.386 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:53:29.386 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:53:29.390 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:53:29.390 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:53:29.397 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:53:29.400 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:53:29.402 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:53:29.404 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:53:29.407 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:53:29.409 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:53:29.410 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:53:29.413 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:53:29.419 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:53:29.421 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:53:29.424 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:53:29.426 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:53:29.429 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:53:29.432 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:53:29.433 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:53:29.434 [pool-507-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:29.437 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:53:29.440 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:53:29.443 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:53:29.445 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:53:29.448 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:53:29.450 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:53:29.451 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:53:29.452 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:53:29.458 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:53:29.460 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:53:29.463 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:53:29.465 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:53:29.468 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:53:29.470 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:53:29.471 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:53:29.473 [pool-523-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:29.476 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:53:29.479 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:53:29.481 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:53:29.484 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:53:29.486 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:53:29.489 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:53:29.490 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:53:29.491 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:53:29.497 [pool-87-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:53:29.500 [pool-87-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.java.PartitioningOperatorTest#testPartitiongOperatorPreservesFields iteration 0
19:53:29.501 [pool-87-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] rgps=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1614)
19:53:29.501 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:53:29.501 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1607)
19:53:29.501 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:53:29.511 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:53:29.513 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:53:29.516 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:53:29.516 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:53:29.516 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:53:29.516 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:53:29.519 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:53:29.520 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:53:29.527 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:53:29.529 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:53:29.532 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:53:29.534 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:53:29.536 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:53:29.539 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:53:29.539 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:53:29.542 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:53:29.548 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:53:29.551 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:53:29.554 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:53:29.556 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:53:29.559 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:53:29.561 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:53:29.562 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:53:29.564 [pool-554-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:29.567 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:53:29.570 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:53:29.572 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:53:29.575 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:53:29.577 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:53:29.580 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:53:29.581 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:53:29.582 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:53:29.587 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:53:29.590 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:53:29.593 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:53:29.595 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:53:29.598 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:53:29.600 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:53:29.601 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:53:29.602 [pool-570-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:29.606 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:53:29.609 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:53:29.611 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:53:29.614 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:53:29.616 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:53:29.619 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:53:29.620 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:53:29.620 [pool-87-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:53:29.623 [pool-87-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - Exit


========= Info ==========
Nb constants             40
Nb method invocations    6
Nb field access          3
Nb variables             3
Total                    52
Nb evaluated expressions 1
Init Execution time      1194 ms
Collect Execution time   1741 ms
Combine Execution time   12.0 ms
Nb Combination par sec   83 combinations/sec
Total Execution time     2947 ms
Nb line execution        10
Nb results               1

Results:
1. (((org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_BOTH_MERGE.equals(localStrategy)) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_FIRST_MERGE.equals(localStrategy))) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_SECOND_MERGE.equals(localStrategy))) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_MERGE.equals(localStrategy))


========================
         Stat
========================
Operators: 
Methods: 
setForceRebalancing() 1
singletonList(T) 1
setCustomPartitioned(org.apache.flink.api.common.operators.util.FieldSet,org.apache.flink.api.common.functions.Partitioner) 1
setHashPartitioned(org.apache.flink.api.common.operators.util.FieldSet) 1
Variable: 
keys 4
rgps 4
pMethod 2
org.apache.flink.api.common.operators.base.PartitionOperatorBase.PartitionMethod.REBALANCE 2
org.apache.flink.api.common.operators.base.PartitionOperatorBase.PartitionMethod.CUSTOM 2
org.apache.flink.api.common.operators.base.PartitionOperatorBase.PartitionMethod.RANGE 2
org.apache.flink.api.common.operators.base.PartitionOperatorBase.PartitionMethod.HASH 2
customPartitioner 2

 & 40 & 6 & 3 & 3 & 52 & 1 & 2949 ms & 10 &
19:53:29.638 [pool-87-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor:118: PRECONDITION (((org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_BOTH_MERGE.equals(localStrategy)) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_FIRST_MERGE.equals(localStrategy))) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_SECOND_MERGE.equals(localStrategy))) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_MERGE.equals(localStrategy))
19:53:30.015 [pool-87-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
PartitionNode.java:69: error: cannot find symbol
                    if ((((org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_BOTH_MERGE.equals(localStrategy)) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_FIRST_MERGE.equals(localStrategy))) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_SECOND_MERGE.equals(localStrategy))) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_MERGE.equals(localStrategy)))
                                                                                                             ^
  symbol:   variable localStrategy
  location: class org.apache.flink.compiler.dag.PartitionNode.PartitionDescriptor
PartitionNode.java:69: error: cannot find symbol
                    if ((((org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_BOTH_MERGE.equals(localStrategy)) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_FIRST_MERGE.equals(localStrategy))) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_SECOND_MERGE.equals(localStrategy))) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_MERGE.equals(localStrategy)))
                                                                                                                                                                                                                    ^
  symbol:   variable localStrategy
  location: class org.apache.flink.compiler.dag.PartitionNode.PartitionDescriptor
PartitionNode.java:69: error: cannot find symbol
                    if ((((org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_BOTH_MERGE.equals(localStrategy)) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_FIRST_MERGE.equals(localStrategy))) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_SECOND_MERGE.equals(localStrategy))) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_MERGE.equals(localStrategy)))
                                                                                                                                                                                                                                                                                                                             ^
  symbol:   variable localStrategy
  location: class org.apache.flink.compiler.dag.PartitionNode.PartitionDescriptor
PartitionNode.java:69: error: cannot find symbol
                    if ((((org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_BOTH_MERGE.equals(localStrategy)) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_FIRST_MERGE.equals(localStrategy))) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_SECOND_MERGE.equals(localStrategy))) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_MERGE.equals(localStrategy)))
                                                                                                                                                                                                                                                                                                                                                                                                                          ^
  symbol:   variable localStrategy
  location: class org.apache.flink.compiler.dag.PartitionNode.PartitionDescriptor
19:53:30.016 [pool-87-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Patch malformed (((org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_BOTH_MERGE.equals(localStrategy)) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_FIRST_MERGE.equals(localStrategy))) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_SORT_SECOND_MERGE.equals(localStrategy))) || (org.apache.flink.compiler.PactCompiler.HINT_LOCAL_STRATEGY_MERGE.equals(localStrategy))
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99) ~[nopol.jar:na]
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135) ~[nopol.jar:na]
	at fr.inria.lille.repair.nopol.patch.TestPatch.passesAllTests(TestPatch.java:60) ~[nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.isOk(NoPol.java:317) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:302) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:53:30.017 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: invalid patch
19:53:30.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
19:53:30.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.PartitionOperator:137 which is executed by 9 tests
19:53:30.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.PartitionOperator:137
19:53:30.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
19:53:30.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.PartitionOperator:135 which is executed by 9 tests
19:53:30.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.PartitionOperator:135
19:53:30.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
19:53:30.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.PartitionOperator:134 which is executed by 9 tests
19:53:30.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.PartitionOperator:134
19:53:30.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
19:53:30.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.PartitionOperator:133 which is executed by 9 tests
19:53:30.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.PartitionOperator:133
19:53:30.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
19:53:30.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.PartitionOperator:131 which is executed by 9 tests
19:53:30.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.PartitionOperator:131
19:53:30.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
19:53:30.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.PartitionOperator:130 which is executed by 9 tests
19:53:30.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.PartitionOperator:130
19:53:30.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
19:53:30.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.PartitionOperator:129 which is executed by 9 tests
19:53:30.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.PartitionOperator:129
19:53:30.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
19:53:30.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:1023 which is executed by 9 tests
1189329080
19:53:30.352 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:30.608 [pool-580-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (245 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:31.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
19:53:31.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:99 which is executed by 9 tests
1625508872
19:53:31.789 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:32.032 [pool-586-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (232 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:53:32.380 [pool-585-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
GroupReduceWithCombineProperties.java:75: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:32.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
19:53:32.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:93 which is executed by 9 tests
1625508872
19:53:32.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:32.889 [pool-588-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (234 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:33.467 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:33.716 [pool-594-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (234 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.NullPointerException
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:52)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.NullPointerException
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:52)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:34.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
19:53:34.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase:81 which is executed by 10 tests
19:53:34.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase:81
19:53:34.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #107
19:53:34.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase:80 which is executed by 10 tests
19:53:34.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase:80
19:53:34.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #108
19:53:34.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase:71 which is executed by 10 tests
19:53:34.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase:71
19:53:34.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #109
19:53:34.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.PartitionOperator:127 which is executed by 10 tests
19:53:34.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.PartitionOperator:127
19:53:34.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #110
19:53:34.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.PartitionOperator:125 which is executed by 10 tests
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.PartitionOperator:125
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #111
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.Keys:401 which is executed by 11 tests
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.Keys:401
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #112
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.Keys:400 which is executed by 11 tests
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.Keys:400
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #113
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.Keys:399 which is executed by 11 tests
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.Keys:399
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #114
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.Keys:398 which is executed by 11 tests
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.Keys:398
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #115
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.Keys:395 which is executed by 11 tests
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.Keys:395
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #116
19:53:34.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.JoinNode:71 which is executed by 3 tests
-1337278867
19:53:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #117
19:53:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:337 which is executed by 12 tests
19:53:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:337
19:53:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #118
19:53:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:336 which is executed by 12 tests
19:53:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:336
19:53:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #119
19:53:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:335 which is executed by 12 tests
19:53:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:335
19:53:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #120
19:53:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:331 which is executed by 12 tests
19:53:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:331
19:53:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #121
19:53:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:328 which is executed by 12 tests
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:328
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #122
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:327 which is executed by 12 tests
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:327
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #123
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:326 which is executed by 12 tests
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:326
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #124
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:324 which is executed by 12 tests
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:324
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #125
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:323 which is executed by 12 tests
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:323
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #126
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:319 which is executed by 12 tests
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:319
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #127
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:317 which is executed by 12 tests
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:317
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #128
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:295 which is executed by 12 tests
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:295
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #129
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:201 which is executed by 12 tests
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:201
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #130
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:186 which is executed by 12 tests
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:186
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #131
19:53:34.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:184 which is executed by 12 tests
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:184
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #132
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:182 which is executed by 12 tests
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:182
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #133
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:147 which is executed by 12 tests
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:147
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #134
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:146 which is executed by 12 tests
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:146
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #135
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:142 which is executed by 12 tests
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:142
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #136
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:140 which is executed by 12 tests
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:140
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #137
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:123 which is executed by 12 tests
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:123
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #138
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:120 which is executed by 12 tests
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:120
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #139
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:117 which is executed by 12 tests
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:117
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #140
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:116 which is executed by 12 tests
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:116
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #141
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:115 which is executed by 12 tests
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:115
19:53:34.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #142
19:53:34.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:112 which is executed by 12 tests
19:53:34.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.functions.SemanticPropUtil:112
19:53:34.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #143
19:53:34.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.costs.Costs:432 which is executed by 13 tests
65296935
19:53:34.838 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:35.081 [pool-600-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (231 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:53:35.477 [pool-599-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Costs.java:263: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:35.478 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #144
19:53:35.478 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.costs.Costs:421 which is executed by 14 tests
65296935
19:53:35.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:36.076 [pool-602-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (249 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:36.658 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:36.898 [pool-608-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (230 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #145
19:53:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:64 which is executed by 15 tests
19:53:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:64
19:53:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #146
19:53:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:63 which is executed by 15 tests
19:53:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:63
19:53:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #147
19:53:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:62 which is executed by 15 tests
19:53:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:62
19:53:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #148
19:53:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:59 which is executed by 15 tests
19:53:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:59
19:53:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #149
19:53:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:58 which is executed by 15 tests
19:53:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:58
19:53:37.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #150
19:53:37.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:57 which is executed by 15 tests
19:53:37.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:57
19:53:37.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #151
19:53:37.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.SingleInputNode:371 which is executed by 4 tests
1770269029
19:53:37.777 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #152
19:53:37.777 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.SingleInputNode:370 which is executed by 4 tests
1770269029
19:53:38.052 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #153
19:53:38.052 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:128 which is executed by 16 tests
1625508872
19:53:38.315 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:38.557 [pool-614-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (231 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:39.142 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #154
19:53:39.142 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedGlobalProperties:339 which is executed by 17 tests
-167437147
19:53:39.406 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #155
19:53:39.406 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:103 which is executed by 18 tests
19:53:39.406 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.SingleInputSemanticProperties:103
19:53:39.406 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #156
19:53:39.406 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.PartitionNode:79 which is executed by 19 tests
-897196051
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #157
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:92 which is executed by 19 tests
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:92
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #158
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:178 which is executed by 20 tests
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:178
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #159
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:165 which is executed by 20 tests
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:165
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #160
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:162 which is executed by 20 tests
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:162
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #161
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:161 which is executed by 20 tests
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:161
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #162
19:53:39.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:160 which is executed by 20 tests
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:160
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #163
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:159 which is executed by 20 tests
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:159
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #164
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:156 which is executed by 20 tests
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:156
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #165
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:155 which is executed by 20 tests
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:155
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #166
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:154 which is executed by 20 tests
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:154
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #167
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:152 which is executed by 20 tests
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:152
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #168
19:53:39.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:891 which is executed by 21 tests
1189329080
19:53:40.009 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:40.259 [pool-620-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (239 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:41.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #169
19:53:41.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:890 which is executed by 21 tests
1189329080
19:53:41.292 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:41.536 [pool-626-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (233 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:42.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #170
19:53:42.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.Keys$ExpressionKeys:358 which is executed by 22 tests
19:53:42.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.Keys$ExpressionKeys:358
19:53:42.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #171
19:53:42.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.util.FieldList:70 which is executed by 22 tests
19:53:42.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.util.FieldList:70
19:53:42.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #172
19:53:42.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.util.FieldList:69 which is executed by 22 tests
19:53:42.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.util.FieldList:69
19:53:42.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #173
19:53:42.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.util.FieldList:68 which is executed by 22 tests
19:53:42.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.util.FieldList:68
19:53:42.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #174
19:53:42.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.util.FieldList:67 which is executed by 22 tests
19:53:42.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.util.FieldList:67
19:53:42.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #175
19:53:42.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.PartitionNode:42 which is executed by 46 tests
-897196051
19:53:42.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #176
19:53:42.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.PartitionNode:74 which is executed by 23 tests
-897196051
19:53:42.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #177
19:53:42.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.PartitionNode:73 which is executed by 23 tests
-897196051
19:53:43.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:43.317 [pool-632-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (232 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:44.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #178
19:53:44.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.PartitionNode:72 which is executed by 23 tests
-897196051
19:53:44.449 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:44.688 [pool-638-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (229 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:45.275 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #179
19:53:45.275 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.PartitionNode:66 which is executed by 23 tests
-897196051
19:53:45.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #180
19:53:45.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.PartitionNode:56 which is executed by 23 tests
-897196051
19:53:45.798 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #181
19:53:45.798 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase:67 which is executed by 23 tests
19:53:45.798 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase:67
19:53:45.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #182
19:53:45.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase:63 which is executed by 23 tests
19:53:45.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.base.PartitionOperatorBase:63
19:53:45.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #183
19:53:45.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:120 which is executed by 23 tests
1625508872
19:53:46.065 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:46.310 [pool-644-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (234 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:53:46.658 [pool-643-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
GroupReduceWithCombineProperties.java:75: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:46.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #184
19:53:46.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:119 which is executed by 23 tests
1625508872
19:53:46.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:47.168 [pool-646-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (234 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:47.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #185
19:53:47.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:118 which is executed by 23 tests
1625508872
19:53:48.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:48.284 [pool-652-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (256 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: Cannot determine costs: Shipping strategy has not been set for an input.
	at org.apache.flink.compiler.costs.CostEstimator.costOperator(CostEstimator.java:99)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:345)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: Cannot determine costs: Shipping strategy has not been set for an input.
	at org.apache.flink.compiler.costs.CostEstimator.costOperator(CostEstimator.java:99)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:345)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:48.909 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #186
19:53:48.909 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:117 which is executed by 23 tests
1625508872
19:53:49.173 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #187
19:53:49.173 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:115 which is executed by 23 tests
1625508872
19:53:49.435 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:49.679 [pool-658-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (233 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:50.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #188
19:53:50.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:113 which is executed by 23 tests
1625508872
19:53:50.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:50.766 [pool-664-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (234 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:51.363 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #189
19:53:51.363 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:111 which is executed by 23 tests
1625508872
19:53:51.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:51.874 [pool-670-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (235 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:52.455 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #190
19:53:52.455 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:110 which is executed by 23 tests
1625508872
19:53:52.765 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:53.007 [pool-676-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (231 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: Trying to set the costs of an operator before the predecessor costs are computed.
	at org.apache.flink.compiler.plan.PlanNode.setCosts(PlanNode.java:288)
	at org.apache.flink.compiler.costs.CostEstimator.costOperator(CostEstimator.java:226)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:345)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: Trying to set the costs of an operator before the predecessor costs are computed.
	at org.apache.flink.compiler.plan.PlanNode.setCosts(PlanNode.java:288)
	at org.apache.flink.compiler.costs.CostEstimator.costOperator(CostEstimator.java:226)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:345)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:53.582 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #191
19:53:53.582 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:109 which is executed by 23 tests
1625508872
19:53:53.846 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #192
19:53:53.846 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:108 which is executed by 23 tests
1625508872
19:53:54.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #193
19:53:54.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:106 which is executed by 23 tests
1625508872
19:53:54.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:54.619 [pool-682-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (234 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:55.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #194
19:53:55.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:105 which is executed by 23 tests
1625508872
19:53:55.455 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #195
19:53:55.455 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:103 which is executed by 23 tests
1625508872
19:53:55.720 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:55.967 [pool-688-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (236 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: Cannot produce GlobalProperties before ship strategy is set.
	at org.apache.flink.compiler.plan.Channel.getGlobalProperties(Channel.java:403)
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:67)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: Cannot produce GlobalProperties before ship strategy is set.
	at org.apache.flink.compiler.plan.Channel.getGlobalProperties(Channel.java:403)
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:67)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:56.554 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #196
19:53:56.554 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:102 which is executed by 23 tests
1625508872
19:53:56.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #197
19:53:56.822 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.plan.SingleInputPlanNode:147 which is executed by 23 tests
2069752622
19:53:57.139 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #198
19:53:57.139 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.plan.SingleInputPlanNode:146 which is executed by 23 tests
2069752622
19:53:57.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:57.652 [pool-694-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (234 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:58.238 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #199
19:53:58.239 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.plan.SingleInputPlanNode:145 which is executed by 23 tests
2069752622
19:53:58.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:58.751 [pool-700-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (240 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:53:59.343 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #200
19:53:59.343 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.plan.SingleInputPlanNode:141 which is executed by 23 tests
2069752622
19:53:59.607 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:53:59.855 [pool-706-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (237 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:00.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:00.694 [pool-712-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (235 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: Invalid id for driver key information. DriverStrategy requires only 2 comparators.
	at org.apache.flink.compiler.plan.SingleInputPlanNode.setDriverKeyInfo(SingleInputPlanNode.java:72)
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:113)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: Invalid id for driver key information. DriverStrategy requires only 2 comparators.
	at org.apache.flink.compiler.plan.SingleInputPlanNode.setDriverKeyInfo(SingleInputPlanNode.java:72)
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:113)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:01.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #201
19:54:01.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.plan.SingleInputPlanNode:131 which is executed by 23 tests
2069752622
19:54:01.608 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #202
19:54:01.608 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.plan.SingleInputPlanNode:130 which is executed by 23 tests
2069752622
19:54:01.872 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:02.119 [pool-718-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (235 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:02.702 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #203
19:54:02.702 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor:144 which is executed by 23 tests
-897196051
19:54:02.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #204
19:54:02.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor:138 which is executed by 23 tests
-897196051
19:54:03.245 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #205
19:54:03.245 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor:132 which is executed by 23 tests
-897196051
19:54:03.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #206
19:54:03.507 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor:126 which is executed by 23 tests
-897196051
19:54:03.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #207
19:54:03.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor:110 which is executed by 23 tests
-897196051
19:54:04.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:04.282 [pool-724-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (240 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:27)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:27)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:05.004 [pool-723-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.custompartition.GroupingKeySelectorTranslationTest#testCustomPartitioningKeySelectorGroupReduceSorted
19:54:05.007 [pool-723-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest#testCustomPartitioningTupleGroupReduceSorted2
19:54:05.009 [pool-723-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.custompartition.GroupingPojoTranslationTest#testCustomPartitioningTupleGroupReduce
19:54:05.014 [pool-723-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.SortPartialReuseTest#testCustomPartitioningNotReused
19:54:05.016 [pool-723-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.custompartition.GroupingKeySelectorTranslationTest#testCustomPartitioningKeySelectorGroupReduce
19:54:05.048 [pool-723-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.custompartition.GroupingPojoTranslationTest#testCustomPartitioningTupleGroupReduceSorted
19:54:05.050 [pool-723-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.custompartition.GroupingKeySelectorTranslationTest#testCustomPartitioningKeySelectorGroupReduceSorted2
19:54:05.051 [pool-723-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest#testCustomPartitioningTupleGroupReduceSorted
19:54:05.053 [pool-723-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest#testCustomPartitioningTupleReduce
19:54:05.055 [pool-723-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.custompartition.GroupingKeySelectorTranslationTest#testCustomPartitioningKeySelectorReduce
19:54:05.059 [pool-723-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest#testCustomPartitioningTupleGroupReduce
19:54:05.062 [pool-723-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.custompartition.GroupingPojoTranslationTest#testCustomPartitioningTupleReduce
19:54:05.075 [pool-723-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest#testCustomPartitioningTupleAgg
19:54:05.078 [pool-723-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.custompartition.GroupingPojoTranslationTest#testCustomPartitioningTupleGroupReduceSorted2
java -cp /tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-compiler/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-compiler/target/test-classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-shaded/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-core/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-java/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-runtime/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-clients/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-test-utils/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-scala/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-examples/flink-java-examples/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-examples/flink-scala-examples/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-tests/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-avro/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-jdbc/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-spargel/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-hadoop-compatibility/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-core/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-connectors/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-examples/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-hbase/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-yarn/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-quickstart/flink-quickstart-java/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-quickstart/flink-quickstart-scala/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-java8/target/classes:/home/tdurieux/.m2/repository/io/netty/netty-all/4.0.21.Final/netty-all-4.0.21.Final.jar:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-common/0.98.6.1-hadoop2/hbase-common-0.98.6.1-hadoop2.jar:/home/tdurieux/.m2/repository/org/scalamacros/quasiquotes_2.10/2.0.1/quasiquotes_2.10-2.0.1.jar:/home/tdurieux/.m2/repository/io/netty/netty/3.6.2.Final/netty-3.6.2.Final.jar:/home/tdurieux/.m2/repository/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar:/home/tdurieux/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.2.5/httpclient-4.2.5.jar:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/home/tdurieux/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/home/tdurieux/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/home/tdurieux/.m2/repository/org/apache/mina/mina-core/2.0.4/mina-core-2.0.4.jar:/home/tdurieux/.m2/repository/com/google/code/simple-spring-memcached/spymemcached/2.8.4/spymemcached-2.8.4.jar:/home/tdurieux/.m2/repository/org/apache/avro/avro/1.7.6/avro-1.7.6.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-java/0.8-incubating-SNAPSHOT/flink-java-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.json/2.0.6/org.apache.sling.commons.json-2.0.6.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.0.0.M1/jetty-server-8.0.0.M1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-connectors/0.8-incubating-SNAPSHOT/flink-streaming-connectors-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.1.2/grizzly-rcm-2.1.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.0.0.M1/jetty-continuation-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-hdfs/2.2.0/hadoop-hdfs-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-examples/0.8-incubating-SNAPSHOT/flink-streaming-examples-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-scala-examples/0.8-incubating-SNAPSHOT/flink-scala-examples-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-json/1.9/jersey-json-1.9.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-java-examples/0.8-incubating-SNAPSHOT/flink-java-examples-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/avro/avro-ipc/1.7.6/avro-ipc-1.7.6.jar:/home/tdurieux/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/tdurieux/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.9/jersey-guice-1.9.jar:/home/tdurieux/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-module-junit4-common/1.5.5/powermock-module-junit4-common-1.5.5.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-core/0.8-incubating-SNAPSHOT/flink-core-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/tomcat/jasper-compiler/5.5.23/jasper-compiler-5.5.23.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-reflect/1.5.5/powermock-reflect-1.5.5.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-java/0.8-incubating-SNAPSHOT/flink-java-0.8-incubating-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/com/rabbitmq/amqp-client/3.3.1/amqp-client-3.3.1.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-compiler/2.10.4/scala-compiler-2.10.4.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-common/2.2.0/hadoop-common-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-yarn/0.8-incubating-SNAPSHOT/flink-yarn-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-spargel/0.8-incubating-SNAPSHOT/flink-spargel-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-api/2.2.0/hadoop-yarn-api-2.2.0.jar:/home/tdurieux/.m2/repository/com/esotericsoftware/kryo/kryo/2.24.0/kryo-2.24.0.jar:/home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-xc/1.8.3/jackson-xc-1.8.3.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-reflect/2.10.4/scala-reflect-2.10.4.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-api-mockito/1.5.5/powermock-api-mockito-1.5.5.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http/2.1.2/grizzly-http-2.1.2.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.8/jackson-core-asl-1.8.8.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-configuration/1.5.0/flume-ng-configuration-1.5.0.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.6/commons-codec-1.6.jar:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-client/0.98.6.1-hadoop2/hbase-client-0.98.6.1-hadoop2.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.7/commons-codec-1.7.jar:/home/tdurieux/.m2/repository/redis/clients/jedis/2.4.2/jedis-2.4.2.jar:/home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar:/home/tdurieux/.m2/repository/tomcat/jasper-runtime/5.5.23/jasper-runtime-5.5.23.jar:/home/tdurieux/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/home/tdurieux/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.8/jackson-mapper-asl-1.8.8.jar:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.3.4/zookeeper-3.3.4.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-api-support/1.5.5/powermock-api-support-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-tests/0.8-incubating-SNAPSHOT/flink-tests-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-protocol/0.98.6.1-hadoop2/hbase-protocol-0.98.6.1-hadoop2.jar:/home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/tdurieux/.m2/repository/com/twitter/joauth/6.0.2/joauth-6.0.2.jar:/home/tdurieux/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-common/2.2.0/hadoop-yarn-common-2.2.0.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.3/commons-codec-1.3.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.1/commons-math-2.1.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.4/commons-codec-1.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.0.0.M1/jetty-io-8.0.0.M1.jar:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.1.1/jackson-databind-2.1.1.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.2/httpclient-4.2.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/com/jcraft/jsch/0.1.42/jsch-0.1.42.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.1.2/grizzly-http-server-2.1.2.jar:/home/tdurieux/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.0.0.M1/jetty-security-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-hadoop-compatibility/0.8-incubating-SNAPSHOT/flink-hadoop-compatibility-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-module-junit4/1.5.5/powermock-module-junit4-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.2/httpcore-4.2.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-library/2.10.4/scala-library-2.10.4.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-avro/0.8-incubating-SNAPSHOT/flink-avro-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.1.1/jackson-annotations-2.1.1.jar:/home/tdurieux/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/home/tdurieux/.m2/repository/org/cloudera/htrace/htrace-core/2.04/htrace-core-2.04.jar:/home/tdurieux/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-server/1.9/jersey-server-1.9.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-shaded/0.8-incubating-SNAPSHOT/flink-shaded-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/tdurieux/.m2/repository/org/apache/kafka/kafka_2.10/0.8.0/kafka_2.10-0.8.0.jar:/home/tdurieux/.m2/repository/commons-daemon/commons-daemon/1.0.13/commons-daemon-1.0.13.jar:/home/tdurieux/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-core/1.9/jersey-core-1.9.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.1/commons-io-2.1.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.1.2/grizzly-framework-2.1.2.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/4.0/asm-4.0.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-test-framework/jersey-test-framework-core/1.9/jersey-test-framework-core-1.9.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-core/1.5.0/flume-ng-core-1.5.0.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/home/tdurieux/.m2/repository/asm/asm/3.1/asm-3.1.jar:/home/tdurieux/.m2/repository/commons-el/commons-el/1.0/commons-el-1.0.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-clients/0.8-incubating-SNAPSHOT/flink-clients-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-runtime/0.8-incubating-SNAPSHOT/flink-runtime-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/google/inject/extensions/guice-servlet/3.0/guice-servlet-3.0.jar:/home/tdurieux/.m2/repository/com/esotericsoftware/minlog/minlog/1.2/minlog-1.2.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-pool2/2.0/commons-pool2-2.0.jar:/home/tdurieux/.m2/repository/org/tukaani/xz/1.0/xz-1.0.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/../lib/tools.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-core/0.8-incubating-SNAPSHOT/flink-streaming-core-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.4.5/zookeeper-3.4.5.jar:/home/tdurieux/.m2/repository/org/xerial/snappy/snappy-java/1.0.5/snappy-java-1.0.5.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-compiler/0.8-incubating-SNAPSHOT/flink-compiler-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-grizzly2/1.9/jersey-grizzly2-1.9.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-core/1.5.5/powermock-core-1.5.5.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/servlet-api/3.0.20100224/servlet-api-3.0.20100224.jar:/home/tdurieux/.m2/repository/com/twitter/hbc-core/2.2.0/hbc-core-2.2.0.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/11.0.2/guava-11.0.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.0.0.M1/jetty-util-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.0.0.M1/jetty-http-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sdk/1.5.0/flume-ng-sdk-1.5.0.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.3/jackson-jaxrs-1.8.3.jar:/home/tdurieux/.m2/repository/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-core/0.8-incubating-SNAPSHOT/flink-core-0.8-incubating-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-hbase/0.8-incubating-SNAPSHOT/flink-hbase-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-scala/0.8-incubating-SNAPSHOT/flink-scala-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.5/joda-time-2.5.jar:/home/tdurieux/.m2/repository/io/netty/netty/3.6.6.Final/netty-3.6.6.Final.jar:/home/tdurieux/.m2/repository/org/scalatest/scalatest_2.10/2.2.0/scalatest_2.10-2.2.0.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-test-framework/jersey-test-framework-grizzly2/1.9/jersey-test-framework-grizzly2-1.9.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/12.0.1/guava-12.0.1.jar:/home/tdurieux/.m2/repository/com/github/stephenc/findbugs/findbugs-annotations/1.3.9-1/findbugs-annotations-1.3.9-1.jar:/home/tdurieux/.m2/repository/com/amazonaws/aws-java-sdk/1.8.1/aws-java-sdk-1.8.1.jar:/home/tdurieux/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-library/2.10.1/scala-library-2.10.1.jar:/home/tdurieux/.m2/repository/org/fusesource/leveldbjni/leveldbjni-all/1.8/leveldbjni-all-1.8.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.1.2/grizzly-http-servlet-2.1.2.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-compress/1.4.1/commons-compress-1.4.1.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-test-utils/0.8-incubating-SNAPSHOT/flink-test-utils-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/101tec/zkclient/0.3/zkclient-0.3.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-core/2.2.0/hadoop-mapreduce-client-core-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-auth/2.2.0/hadoop-auth-2.2.0.jar:/home/tdurieux/.m2/repository/org/glassfish/javax.servlet/3.1/javax.servlet-3.1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-client/2.2.0/hadoop-yarn-client-2.2.0.jar:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/home/tdurieux/.m2/repository/net/java/dev/jets3t/jets3t/0.6.1/jets3t-0.6.1.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.1.1/jackson-core-2.1.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.0.0.M1/jetty-servlet-8.0.0.M1.jar:/home/tdurieux/.m2/repository/io/netty/netty/3.5.12.Final/netty-3.5.12.Final.jar:/home/tdurieux/.m2/repository/commons-net/commons-net/3.1/commons-net-3.1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-annotations/2.2.0/hadoop-annotations-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.2.4/httpcore-4.2.4.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-client/1.9/jersey-client-1.9.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.10.1.1/derby-10.10.1.1.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/home/tdurieux/defects4j4repair/repair_tools/nopol.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar: fr.inria.lille.repair.MethodTestRunner org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testIncompatibleHashAndCustomPartitioning org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionPojo org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionKeySelector org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testIncompatibleHashAndCustomPartitioning org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningCoGroup org.apache.flink.compiler.SortPartialReuseTest#testPartialPartitioningReuse org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningJoin org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionTuples org.apache.flink.compiler.java.PartitioningOperatorTest#testPartitiongOperatorPreservesFields 
19:54:05.775 [pool-723-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - ClassPrepareEvent
19:54:05.779 [pool-723-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.compiler.dataproperties.RequestedGlobalProperties
19:54:05.780 [pool-723-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor
19:54:05.780 [pool-723-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.api.common.operators.base.PartitionOperatorBase$PartitionMethod
19:54:05.781 [pool-723-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.api.common.operators.util.FieldSet
19:54:05.784 [pool-723-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.api.common.functions.Partitioner
19:54:05.784 [pool-723-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.lang.String
19:54:05.785 [pool-723-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.lang.UnsupportedOperationException
19:54:05.785 [pool-723-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.lang.IllegalArgumentException
19:54:05.785 [pool-723-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.Collections
19:54:05.786 [pool-723-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.List
19:54:05.896 [pool-723-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:54:05.902 [pool-723-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testIncompatibleHashAndCustomPartitioning iteration 0
19:54:05.902 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:54:05.902 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=816)
19:54:05.903 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:54:05.914 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:54:05.916 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:54:05.919 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:54:05.919 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:54:05.920 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:54:05.920 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:54:05.953 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:54:05.954 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:54:05.965 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:54:05.967 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:54:05.969 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:54:05.971 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:54:05.973 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:54:05.975 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:54:05.976 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:54:05.979 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:54:05.986 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:54:05.988 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:54:05.991 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:54:05.993 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:54:05.995 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:54:05.997 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:54:05.999 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:54:06.000 [pool-795-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:06.003 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:54:06.006 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:54:06.008 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:54:06.010 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:54:06.012 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:54:06.015 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:54:06.016 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:54:06.016 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:54:06.022 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:54:06.024 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:54:06.026 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:54:06.029 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:54:06.031 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:54:06.034 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:54:06.037 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:54:06.041 [pool-811-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:06.046 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:54:06.050 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:54:06.054 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:54:06.057 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:54:06.060 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:54:06.062 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:54:06.063 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:54:06.064 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:54:06.138 [pool-723-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:54:06.142 [pool-723-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionPojo iteration 0
19:54:06.142 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:54:06.142 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1229)
19:54:06.142 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:54:06.151 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:54:06.154 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:54:06.157 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:54:06.157 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:54:06.157 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:54:06.157 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:54:06.171 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:54:06.172 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:54:06.181 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:54:06.183 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:54:06.186 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:54:06.188 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:54:06.191 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:54:06.193 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:54:06.194 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:54:06.198 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:54:06.203 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:54:06.206 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:54:06.208 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:54:06.211 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:54:06.213 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:54:06.216 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:54:06.217 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:54:06.231 [pool-842-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:06.236 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:54:06.239 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:54:06.241 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:54:06.244 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:54:06.247 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:54:06.249 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:54:06.250 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:54:06.251 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:54:06.257 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:54:06.259 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:54:06.262 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:54:06.264 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:54:06.266 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:54:06.269 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:54:06.270 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:54:06.271 [pool-858-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:06.274 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:54:06.277 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:54:06.279 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:54:06.282 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:54:06.284 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:54:06.287 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:54:06.288 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:54:06.289 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:54:06.290 [pool-723-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:54:06.292 [pool-723-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionPojo iteration 1
19:54:06.293 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:54:06.293 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1318)
19:54:06.293 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:54:06.303 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:54:06.305 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:54:06.308 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:54:06.308 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:54:06.308 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:54:06.308 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:54:06.311 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:54:06.312 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:54:06.318 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:54:06.321 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:54:06.323 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:54:06.324 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:54:06.327 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:54:06.333 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:54:06.335 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:54:06.338 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:54:06.339 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:54:06.340 [pool-883-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:06.344 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:54:06.346 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:54:06.349 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:54:06.350 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:54:06.351 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:54:06.356 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:54:06.359 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:54:06.362 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:54:06.363 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:54:06.364 [pool-893-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:06.367 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:54:06.370 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:54:06.372 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:54:06.374 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:54:06.375 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:54:06.398 [pool-723-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:54:06.402 [pool-723-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionKeySelector iteration 0
19:54:06.402 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:54:06.402 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1343)
19:54:06.402 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:54:06.412 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:54:06.415 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:54:06.418 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:54:06.418 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:54:06.418 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:54:06.418 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:54:06.422 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:54:06.423 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:54:06.430 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:54:06.432 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:54:06.434 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:54:06.437 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:54:06.439 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:54:06.441 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:54:06.442 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:54:06.446 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:54:06.452 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:54:06.455 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:54:06.458 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:54:06.461 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:54:06.463 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:54:06.466 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:54:06.467 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:54:06.468 [pool-921-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:06.472 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:54:06.474 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:54:06.477 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:54:06.479 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:54:06.482 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:54:06.484 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:54:06.485 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:54:06.486 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:54:06.492 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:54:06.494 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:54:06.497 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:54:06.499 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:54:06.502 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:54:06.504 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:54:06.505 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:54:06.506 [pool-937-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:06.510 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:54:06.512 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:54:06.515 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:54:06.517 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:54:06.520 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:54:06.522 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:54:06.523 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:54:06.524 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:54:06.525 [pool-723-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:54:06.528 [pool-723-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionKeySelector iteration 1
19:54:06.528 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:54:06.528 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1372)
19:54:06.528 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:54:06.537 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:54:06.539 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:54:06.542 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:54:06.542 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:54:06.543 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:54:06.543 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:54:06.546 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:54:06.547 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:54:06.553 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:54:06.555 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:54:06.557 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:54:06.558 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:54:06.562 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:54:06.567 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:54:06.570 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:54:06.572 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:54:06.573 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:54:06.575 [pool-962-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:06.578 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:54:06.580 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:54:06.583 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:54:06.584 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:54:06.585 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:54:06.590 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:54:06.593 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:54:06.595 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:54:06.597 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:54:06.598 [pool-972-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:06.602 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:54:06.604 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:54:06.607 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:54:06.608 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:54:06.609 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:54:06.633 [pool-723-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:54:06.637 [pool-723-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testIncompatibleHashAndCustomPartitioning iteration 0
19:54:06.637 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:54:06.637 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1414)
19:54:06.637 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:54:06.648 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:54:06.652 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:54:06.656 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:54:06.656 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:54:06.656 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:54:06.656 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:54:06.661 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:54:06.662 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:54:06.671 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:54:06.675 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:54:06.678 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:54:06.681 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:54:06.684 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:54:06.687 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:54:06.688 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:54:06.692 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:54:06.700 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:54:06.703 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:54:06.706 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:54:06.709 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:54:06.712 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:54:06.714 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:54:06.715 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:54:06.717 [pool-1000-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:06.720 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:54:06.723 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:54:06.726 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:54:06.729 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:54:06.731 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:54:06.734 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:54:06.735 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:54:06.736 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:54:06.742 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:54:06.745 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:54:06.748 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:54:06.751 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:54:06.753 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:54:06.756 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:54:06.757 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:54:06.758 [pool-1016-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:06.762 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:54:06.765 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:54:06.767 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:54:06.770 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:54:06.772 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:54:06.775 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:54:06.776 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:54:06.777 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:54:06.789 [pool-723-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:54:06.792 [pool-723-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningCoGroup iteration 0
19:54:06.793 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:54:06.793 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1449)
19:54:06.793 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:54:06.803 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:54:06.806 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:54:06.809 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:54:06.809 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:54:06.809 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:54:06.809 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:54:06.813 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:54:06.814 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:54:06.835 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:54:06.838 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:54:06.840 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:54:06.843 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:54:06.846 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:54:06.848 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:54:06.849 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:54:06.853 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:54:06.860 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:54:06.863 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:54:06.866 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:54:06.868 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:54:06.871 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:54:06.874 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:54:06.875 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:54:06.877 [pool-1047-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:06.881 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:54:06.884 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:54:06.886 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:54:06.889 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:54:06.892 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:54:06.894 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:54:06.895 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:54:06.897 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:54:06.903 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:54:06.906 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:54:06.909 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:54:06.911 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:54:06.914 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:54:06.917 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:54:06.918 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:54:06.919 [pool-1063-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:06.923 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:54:06.926 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:54:06.929 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:54:06.931 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:54:06.934 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:54:06.937 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:54:06.938 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:54:06.939 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:54:06.940 [pool-723-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:54:06.943 [pool-723-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningCoGroup iteration 1
19:54:06.943 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:54:06.943 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1467)
19:54:06.943 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:54:06.955 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:54:06.958 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:54:06.961 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:54:06.961 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:54:06.961 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:54:06.961 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:54:06.964 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:54:06.965 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:54:06.973 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:54:06.975 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:54:06.978 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:54:06.981 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:54:06.983 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:54:06.986 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:54:06.987 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:54:06.991 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:54:06.997 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:54:07.000 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:54:07.003 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:54:07.005 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:54:07.008 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:54:07.010 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:54:07.011 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:54:07.013 [pool-1094-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:07.016 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:54:07.019 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:54:07.021 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:54:07.023 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:54:07.026 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:54:07.028 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:54:07.029 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:54:07.030 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:54:07.035 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:54:07.038 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:54:07.040 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:54:07.043 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:54:07.045 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:54:07.048 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:54:07.048 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:54:07.050 [pool-1110-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:07.053 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:54:07.055 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:54:07.058 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:54:07.060 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:54:07.063 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:54:07.065 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:54:07.066 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:54:07.067 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:54:07.136 [pool-723-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:54:07.141 [pool-723-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.SortPartialReuseTest#testPartialPartitioningReuse iteration 0
19:54:07.141 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:54:07.141 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1554)
19:54:07.142 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:54:07.152 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:54:07.155 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:54:07.158 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:54:07.158 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:54:07.158 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:54:07.158 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:54:07.164 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:54:07.165 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:54:07.173 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:54:07.175 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:54:07.178 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:54:07.180 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:54:07.183 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:54:07.184 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:54:07.187 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:54:07.194 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:54:07.196 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:54:07.199 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:54:07.202 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:54:07.205 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:54:07.206 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:54:07.207 [pool-1139-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:07.211 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:54:07.214 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:54:07.217 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:54:07.220 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:54:07.222 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:54:07.224 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:54:07.225 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:54:07.232 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:54:07.235 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:54:07.238 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:54:07.241 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:54:07.244 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:54:07.245 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:54:07.247 [pool-1153-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:07.251 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:54:07.254 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:54:07.256 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:54:07.259 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:54:07.262 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:54:07.263 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:54:07.264 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:54:07.273 [pool-723-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:54:07.276 [pool-723-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningJoin iteration 0
19:54:07.277 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:54:07.277 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1596)
19:54:07.277 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:54:07.285 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:54:07.288 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:54:07.291 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:54:07.291 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:54:07.291 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:54:07.291 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:54:07.294 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:54:07.295 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:54:07.302 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:54:07.305 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:54:07.307 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:54:07.310 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:54:07.312 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:54:07.315 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:54:07.316 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:54:07.319 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:54:07.325 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:54:07.328 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:54:07.331 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:54:07.334 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:54:07.337 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:54:07.339 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:54:07.340 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:54:07.342 [pool-1183-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:07.346 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:54:07.348 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:54:07.351 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:54:07.354 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:54:07.357 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:54:07.359 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:54:07.360 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:54:07.361 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:54:07.367 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:54:07.383 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:54:07.387 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:54:07.390 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:54:07.392 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:54:07.395 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:54:07.397 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:54:07.398 [pool-1199-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:07.402 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:54:07.405 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:54:07.408 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:54:07.411 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:54:07.413 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:54:07.416 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:54:07.417 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:54:07.419 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:54:07.420 [pool-723-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:54:07.424 [pool-723-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningJoin iteration 1
19:54:07.424 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:54:07.424 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1613)
19:54:07.424 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:54:07.437 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:54:07.440 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:54:07.443 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:54:07.443 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:54:07.444 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:54:07.444 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:54:07.447 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:54:07.449 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:54:07.457 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:54:07.459 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:54:07.462 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:54:07.465 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:54:07.468 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:54:07.471 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:54:07.472 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:54:07.477 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:54:07.485 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:54:07.488 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:54:07.491 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:54:07.494 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:54:07.497 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:54:07.500 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:54:07.502 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:54:07.504 [pool-1230-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:07.508 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:54:07.511 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:54:07.514 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:54:07.517 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:54:07.519 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:54:07.522 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:54:07.523 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:54:07.525 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:54:07.531 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:54:07.534 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:54:07.537 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:54:07.540 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:54:07.543 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:54:07.545 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:54:07.547 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:54:07.548 [pool-1246-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:07.552 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:54:07.555 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:54:07.558 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:54:07.561 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:54:07.564 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:54:07.567 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:54:07.568 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:54:07.569 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:54:07.599 [pool-723-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:54:07.603 [pool-723-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionTuples iteration 0
19:54:07.603 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:54:07.603 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1629)
19:54:07.603 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:54:07.614 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:54:07.617 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:54:07.620 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:54:07.620 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:54:07.621 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:54:07.621 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:54:07.624 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:54:07.625 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:54:07.632 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:54:07.634 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:54:07.637 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:54:07.639 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:54:07.642 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:54:07.644 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:54:07.645 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:54:07.649 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:54:07.655 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:54:07.658 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:54:07.660 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:54:07.663 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:54:07.666 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:54:07.669 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:54:07.670 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:54:07.672 [pool-1277-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:07.676 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:54:07.679 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:54:07.682 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:54:07.685 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:54:07.688 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:54:07.691 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:54:07.692 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:54:07.694 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:54:07.701 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:54:07.704 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:54:07.706 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:54:07.709 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:54:07.713 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:54:07.716 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:54:07.717 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:54:07.719 [pool-1293-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:07.723 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:54:07.726 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:54:07.729 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:54:07.732 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:54:07.735 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:54:07.738 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:54:07.739 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:54:07.741 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:54:07.742 [pool-723-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:54:07.746 [pool-723-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionTuples iteration 1
19:54:07.746 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:54:07.746 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1646)
19:54:07.747 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:54:07.757 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:54:07.760 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:54:07.764 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:54:07.764 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:54:07.764 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:54:07.764 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:54:07.767 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:54:07.768 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:54:07.776 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:54:07.778 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:54:07.781 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:54:07.782 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:54:07.786 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:54:07.793 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:54:07.796 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:54:07.799 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:54:07.800 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:54:07.802 [pool-1318-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:07.806 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:54:07.809 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:54:07.812 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:54:07.813 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:54:07.814 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:54:07.821 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:54:07.824 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:54:07.827 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:54:07.828 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:54:07.830 [pool-1328-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:07.834 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:54:07.837 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:54:07.840 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:54:07.841 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:54:07.842 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:54:07.848 [pool-723-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:54:07.853 [pool-723-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.java.PartitioningOperatorTest#testPartitiongOperatorPreservesFields iteration 0
19:54:07.853 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:54:07.853 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor(id=1658)
19:54:07.854 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps
19:54:07.865 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this)
19:54:07.868 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps)
19:54:07.871 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.pMethod
19:54:07.872 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:54:07.872 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:54:07.872 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keyList
19:54:07.875 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleGlobalProperties()
19:54:07.876 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleLocalProperties()
19:54:07.884 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this)
19:54:07.887 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) rgps)
19:54:07.890 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.pMethod)
19:54:07.892 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.customPartitioner)
19:54:07.895 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keys)
19:54:07.897 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.equals((java.lang.Object) this.keyList)
19:54:07.898 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.getPartitioning()
19:54:07.903 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] rgps.isTrivial()
19:54:07.909 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this)
19:54:07.912 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) rgps)
19:54:07.915 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.pMethod)
19:54:07.918 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.customPartitioner)
19:54:07.921 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keys)
19:54:07.924 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).contains((java.lang.Object) this.keyList)
19:54:07.925 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).get((int) 0)
19:54:07.927 [pool-1356-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:07.931 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this)
19:54:07.933 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) rgps)
19:54:07.936 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.pMethod)
19:54:07.939 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.customPartitioner)
19:54:07.942 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keys)
19:54:07.945 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).equals((java.lang.Object) this.keyList)
19:54:07.946 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).size()
19:54:07.947 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) this).isEmpty()
19:54:07.954 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this)
19:54:07.957 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) rgps)
19:54:07.960 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.pMethod)
19:54:07.963 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.customPartitioner)
19:54:07.966 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keys)
19:54:07.969 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).contains((java.lang.Object) this.keyList)
19:54:07.970 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).get((int) 0)
19:54:07.971 [pool-1372-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method java.util.Collections$SingletonList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:07.975 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this)
19:54:07.978 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) rgps)
19:54:07.981 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.pMethod)
19:54:07.983 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.customPartitioner)
19:54:07.986 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keys)
19:54:07.989 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).equals((java.lang.Object) this.keyList)
19:54:07.990 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).size()
19:54:07.991 [pool-723-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] java.util.Collections.singletonList((java.lang.Object) rgps).isEmpty()
19:54:07.994 [pool-723-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - Exit


========= Info ==========
Nb constants             24
Nb method invocations    16
Nb field access          4
Nb variables             3
Total                    47
Nb evaluated expressions 1
Init Execution time      808 ms
Collect Execution time   2106 ms
Combine Execution time   5.0 ms
Nb Combination par sec   200 combinations/sec
Total Execution time     2920 ms
Nb line execution        14
Nb results               1

Results:
1. source == (this)


========================
         Stat
========================
Operators: 
Methods: 
setForceRebalancing() 1
singletonList(T) 1
setCustomPartitioned(org.apache.flink.api.common.operators.util.FieldSet,org.apache.flink.api.common.functions.Partitioner) 1
setHashPartitioned(org.apache.flink.api.common.operators.util.FieldSet) 1
Variable: 
keys 4
rgps 4
pMethod 2
org.apache.flink.api.common.operators.base.PartitionOperatorBase.PartitionMethod.REBALANCE 2
org.apache.flink.api.common.operators.base.PartitionOperatorBase.PartitionMethod.CUSTOM 2
org.apache.flink.api.common.operators.base.PartitionOperatorBase.PartitionMethod.RANGE 2
org.apache.flink.api.common.operators.base.PartitionOperatorBase.PartitionMethod.HASH 2
customPartitioner 2

 & 24 & 16 & 4 & 3 & 47 & 1 & 2920 ms & 14 &
19:54:08.000 [pool-723-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor:110: PRECONDITION source == (this)
19:54:08.345 [pool-723-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
PartitionNode.java:61: error: cannot find symbol
            if (source == (this))
                ^
  symbol:   variable source
  location: class org.apache.flink.compiler.dag.PartitionNode.PartitionDescriptor
19:54:08.345 [pool-723-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Patch malformed source == (this)
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99) ~[nopol.jar:na]
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135) ~[nopol.jar:na]
	at fr.inria.lille.repair.nopol.patch.TestPatch.passesAllTests(TestPatch.java:60) ~[nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.isOk(NoPol.java:317) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:302) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:54:08.346 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: invalid patch
19:54:08.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #208
19:54:08.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor:108 which is executed by 23 tests
-897196051
19:54:08.606 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #209
19:54:08.606 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor:103 which is executed by 23 tests
-897196051
19:54:08.890 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #210
19:54:08.890 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.PartitionOperator:115 which is executed by 23 tests
19:54:08.890 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.PartitionOperator:115
19:54:08.890 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #211
19:54:08.890 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.PartitionOperator:112 which is executed by 23 tests
19:54:08.890 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.PartitionOperator:112
19:54:08.890 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #212
19:54:08.890 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.PactCompiler$GraphCreatingVisitor:717 which is executed by 23 tests
1504888066
19:54:09.190 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:09.434 [pool-1382-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (233 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:54:09.992 [pool-1381-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
PactCompiler.java:304: error: variable n might not have been initialized
            this.con2node.put(c, n);
                                 ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #213
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:180 which is executed by 23 tests
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:180
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #214
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:177 which is executed by 23 tests
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:177
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #215
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:176 which is executed by 23 tests
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:176
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #216
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:175 which is executed by 23 tests
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:175
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #217
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:159 which is executed by 23 tests
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:159
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #218
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:158 which is executed by 23 tests
19:54:09.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:158
19:54:09.994 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #219
19:54:09.994 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.util.FieldSet:151 which is executed by 23 tests
19:54:09.994 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.util.FieldSet:151
19:54:09.994 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #220
19:54:09.994 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.util.FieldSet:148 which is executed by 23 tests
19:54:09.994 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.util.FieldSet:148
19:54:09.994 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #221
19:54:09.994 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:139 which is executed by 23 tests
1625508872
19:54:10.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:10.512 [pool-1384-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (239 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.RuntimeException: Bug: Inconsistent sort for group strategy.
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:47)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:11.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #222
19:54:11.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.base.GroupReduceOperatorBase:95 which is executed by 23 tests
19:54:11.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.base.GroupReduceOperatorBase:95
19:54:11.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #223
19:54:11.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.base.GroupReduceOperatorBase:94 which is executed by 23 tests
19:54:11.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.base.GroupReduceOperatorBase:94
19:54:11.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #224
19:54:11.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.JoinNode:162 which is executed by 6 tests
-1337278867
19:54:11.355 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:11.578 [pool-1390-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (213 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 1
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:12.141 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #225
19:54:12.141 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.JoinNode:161 which is executed by 6 tests
-1337278867
19:54:12.408 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:12.632 [pool-1394-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (214 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 1
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:13.234 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #226
19:54:13.234 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:835 which is executed by 6 tests
19:54:13.234 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:835
19:54:13.234 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #227
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:824 which is executed by 6 tests
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:824
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #228
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:455 which is executed by 6 tests
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:455
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #229
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:453 which is executed by 6 tests
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:453
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #230
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator$CoGroupOperatorSets:428 which is executed by 6 tests
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator$CoGroupOperatorSets:428
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #231
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator$CoGroupOperatorSets$CoGroupOperatorSetsPredicate:500 which is executed by 6 tests
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator$CoGroupOperatorSets$CoGroupOperatorSetsPredicate:500
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #232
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:236 which is executed by 6 tests
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:236
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #233
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:235 which is executed by 6 tests
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:235
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #234
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:234 which is executed by 6 tests
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:234
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #235
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:233 which is executed by 6 tests
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:233
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #236
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:230 which is executed by 6 tests
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:230
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #237
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:228 which is executed by 6 tests
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:228
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #238
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:226 which is executed by 6 tests
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:226
19:54:13.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #239
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:225 which is executed by 6 tests
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:225
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #240
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:223 which is executed by 6 tests
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:223
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #241
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:220 which is executed by 6 tests
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:220
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #242
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:217 which is executed by 6 tests
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:217
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #243
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:207 which is executed by 6 tests
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:207
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #244
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:194 which is executed by 6 tests
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:194
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #245
19:54:13.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedLocalProperties:161 which is executed by 24 tests
-1126041135
19:54:13.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #246
19:54:13.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:819 which is executed by 24 tests
1189329080
19:54:13.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:14.037 [pool-1398-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (239 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ GroupReduce (GroupReduce at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:246)) (1:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:347)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ GroupReduce (GroupReduce at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:249)) (1:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:347)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:14.769 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #247
19:54:14.769 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:818 which is executed by 24 tests
1189329080
19:54:15.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:15.311 [pool-1404-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (238 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:16.048 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #248
19:54:16.048 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:815 which is executed by 24 tests
1189329080
19:54:16.342 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #249
19:54:16.342 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:814 which is executed by 24 tests
1189329080
19:54:16.642 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:17.200 [pool-1410-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (238 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ GroupReduce (GroupReduce at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:246)) (1:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:347)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ GroupReduce (GroupReduce at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:249)) (1:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:347)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:17.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #250
19:54:17.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:812 which is executed by 24 tests
1189329080
19:54:18.255 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:18.502 [pool-1416-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (237 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:19.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #251
19:54:19.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:811 which is executed by 24 tests
1189329080
19:54:19.517 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:19.768 [pool-1422-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (240 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:20.496 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:20.747 [pool-1428-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (239 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:21.473 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #252
19:54:21.473 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:806 which is executed by 24 tests
1189329080
19:54:21.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:22.051 [pool-1434-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (244 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:22.784 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #253
19:54:22.784 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:805 which is executed by 24 tests
1189329080
19:54:23.065 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:23.313 [pool-1440-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (236 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:24.043 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #254
19:54:24.043 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:803 which is executed by 24 tests
1189329080
19:54:24.329 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:24.575 [pool-1446-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (235 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:25.312 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:25.563 [pool-1452-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (241 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:26.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #255
19:54:26.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:796 which is executed by 24 tests
1189329080
19:54:26.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:26.876 [pool-1458-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (237 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:27.603 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:27.854 [pool-1464-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (241 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:28.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #256
19:54:28.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:794 which is executed by 24 tests
1189329080
19:54:28.865 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #257
19:54:28.865 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:793 which is executed by 24 tests
1189329080
19:54:29.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:29.405 [pool-1470-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (245 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:30.162 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #258
19:54:30.162 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:791 which is executed by 24 tests
1189329080
19:54:30.445 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #259
19:54:30.445 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:790 which is executed by 24 tests
1189329080
19:54:30.729 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:30.983 [pool-1476-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (243 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:31.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #260
19:54:31.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:789 which is executed by 24 tests
1189329080
19:54:32.024 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #261
19:54:32.025 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:785 which is executed by 24 tests
1189329080
19:54:32.307 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:32.559 [pool-1482-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (241 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:33.292 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #262
19:54:33.292 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:784 which is executed by 24 tests
1189329080
19:54:33.574 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:33.824 [pool-1488-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (239 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #263
19:54:34.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:782 which is executed by 24 tests
1189329080
19:54:34.853 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:35.105 [pool-1494-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (241 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:35.876 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #264
19:54:35.876 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:781 which is executed by 24 tests
1189329080
19:54:36.156 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #265
19:54:36.156 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:780 which is executed by 24 tests
1189329080
19:54:36.444 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:36.695 [pool-1500-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (240 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:37.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #266
19:54:37.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:778 which is executed by 24 tests
1189329080
19:54:37.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:37.979 [pool-1506-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (245 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ GroupReduce (GroupReduce at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:246)) (1:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:347)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ GroupReduce (GroupReduce at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:249)) (1:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:347)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:38.703 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #267
19:54:38.703 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:776 which is executed by 24 tests
1189329080
19:54:38.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #268
19:54:38.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:774 which is executed by 24 tests
1189329080
19:54:39.274 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #269
19:54:39.274 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:773 which is executed by 24 tests
1189329080
19:54:39.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #270
19:54:39.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:771 which is executed by 24 tests
1189329080
19:54:39.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:40.144 [pool-1512-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (244 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:40.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #271
19:54:40.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:754 which is executed by 24 tests
1189329080
19:54:41.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #272
19:54:41.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:750 which is executed by 24 tests
1189329080
19:54:41.429 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:41.687 [pool-1518-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (246 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:42.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #273
19:54:42.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:749 which is executed by 24 tests
1189329080
19:54:42.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:42.952 [pool-1524-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (243 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:43.676 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #274
19:54:43.676 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:747 which is executed by 24 tests
1189329080
19:54:43.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #275
19:54:43.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.SingleInputNode:254 which is executed by 25 tests
1770269029
19:54:44.277 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:44.528 [pool-1530-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (240 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:45.163 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #276
19:54:45.163 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:139 which is executed by 25 tests
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:139
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #277
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.tuple.Tuple3:82 which is executed by 25 tests
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.tuple.Tuple3:82
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #278
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.tuple.Tuple3:81 which is executed by 25 tests
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.tuple.Tuple3:81
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #279
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.tuple.Tuple3:80 which is executed by 25 tests
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.tuple.Tuple3:80
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #280
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.tuple.Tuple3:79 which is executed by 25 tests
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.tuple.Tuple3:79
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #281
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.tuple.Tuple3:74 which is executed by 25 tests
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.tuple.Tuple3:74
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #282
19:54:45.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedLocalProperties:155 which is executed by 26 tests
-1126041135
19:54:45.423 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:45.677 [pool-1536-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (243 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:46.255 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:46.509 [pool-1542-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (243 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:47.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #283
19:54:47.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:159 which is executed by 27 tests
1625508872
19:54:47.341 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #284
19:54:47.341 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:154 which is executed by 27 tests
1625508872
19:54:47.602 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #285
19:54:47.602 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:153 which is executed by 27 tests
1625508872
19:54:47.863 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:48.121 [pool-1548-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (247 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:48.763 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #286
19:54:48.763 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:148 which is executed by 27 tests
1625508872
19:54:49.029 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:49.286 [pool-1554-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (246 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:49.868 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:50.120 [pool-1560-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (241 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.NullPointerException
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.computeGlobalProperties(GroupReduceWithCombineProperties.java:100)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:445)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.NullPointerException
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.computeGlobalProperties(GroupReduceWithCombineProperties.java:100)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:445)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:50.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #287
19:54:50.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:143 which is executed by 27 tests
1625508872
19:54:50.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #288
19:54:50.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:138 which is executed by 27 tests
1625508872
19:54:51.226 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:51.492 [pool-1566-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (254 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.RuntimeException: Bug: Inconsistent sort for group strategy.
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:47)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:52.070 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:52.328 [pool-1572-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (247 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.RuntimeException: Bug: Inconsistent sort for group strategy.
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:47)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:52.908 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #289
19:54:52.908 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:137 which is executed by 27 tests
1625508872
19:54:53.240 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #290
19:54:53.240 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:132 which is executed by 27 tests
1625508872
19:54:53.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #291
19:54:53.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:127 which is executed by 27 tests
1625508872
19:54:53.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:54.039 [pool-1578-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (246 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:54.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:54.895 [pool-1584-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (249 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
java.lang.NullPointerException
	at org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.setCustomPartitioned(RequestedGlobalProperties.java:119)
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.createPossibleGlobalProperties(GroupReduceWithCombineProperties.java:81)
	at org.apache.flink.compiler.operators.OperatorDescriptorSingle.getPossibleGlobalProperties(OperatorDescriptorSingle.java:58)
	at org.apache.flink.compiler.dag.SingleInputNode.computeInterestingPropertiesForInputs(SingleInputNode.java:222)
	at org.apache.flink.compiler.PactCompiler$InterestingPropertyVisitor.preVisit(PactCompiler.java:1029)
	at org.apache.flink.compiler.PactCompiler$InterestingPropertyVisitor.preVisit(PactCompiler.java:1007)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:484)
	at org.apache.flink.compiler.dag.TwoInputNode.accept(TwoInputNode.java:735)
	at org.apache.flink.compiler.dag.DataSinkNode.accept(DataSinkNode.java:246)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:549)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.NullPointerException
	at org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.setCustomPartitioned(RequestedGlobalProperties.java:119)
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.createPossibleGlobalProperties(GroupReduceWithCombineProperties.java:81)
	at org.apache.flink.compiler.operators.OperatorDescriptorSingle.getPossibleGlobalProperties(OperatorDescriptorSingle.java:58)
	at org.apache.flink.compiler.dag.SingleInputNode.computeInterestingPropertiesForInputs(SingleInputNode.java:222)
	at org.apache.flink.compiler.PactCompiler$InterestingPropertyVisitor.preVisit(PactCompiler.java:1029)
	at org.apache.flink.compiler.PactCompiler$InterestingPropertyVisitor.preVisit(PactCompiler.java:1007)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:484)
	at org.apache.flink.compiler.dag.TwoInputNode.accept(TwoInputNode.java:735)
	at org.apache.flink.compiler.dag.DataSinkNode.accept(DataSinkNode.java:246)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:549)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:55.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #292
19:54:55.470 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:126 which is executed by 27 tests
1625508872
19:54:55.732 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #293
19:54:55.732 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.GroupReduceWithCombineProperties:91 which is executed by 27 tests
1625508872
19:54:55.998 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:56.260 [pool-1590-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (250 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:56.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #294
19:54:56.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.util.FieldList:150 which is executed by 7 tests
19:54:56.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.util.FieldList:150
19:54:56.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #295
19:54:56.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.GroupReduceNode:156 which is executed by 28 tests
-1039815608
19:54:57.120 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #296
19:54:57.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.GroupReduceNode:154 which is executed by 28 tests
-1039815608
19:54:57.432 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:57.691 [pool-1596-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (247 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:58.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #297
19:54:58.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.GroupReduceNode:153 which is executed by 28 tests
-1039815608
19:54:58.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:58.776 [pool-1602-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (242 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:54:59.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #298
19:54:59.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.GroupReduceNode:150 which is executed by 28 tests
-1039815608
19:54:59.610 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:54:59.871 [pool-1608-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (250 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
java.lang.NullPointerException
	at org.apache.flink.compiler.dag.GroupReduceNode.getCombinerUtilityNode(GroupReduceNode.java:85)
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:105)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.NullPointerException
	at org.apache.flink.compiler.dag.GroupReduceNode.getCombinerUtilityNode(GroupReduceNode.java:85)
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:105)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:00.453 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #299
19:55:00.453 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.GroupReduceNode:149 which is executed by 28 tests
-1039815608
19:55:00.715 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:00.971 [pool-1614-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (246 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
java.lang.NullPointerException
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:106)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.NullPointerException
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:106)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:01.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:01.859 [pool-1620-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (247 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
java.lang.NullPointerException
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:106)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.NullPointerException
	at org.apache.flink.compiler.operators.GroupReduceWithCombineProperties.instantiate(GroupReduceWithCombineProperties.java:106)
	at org.apache.flink.compiler.dag.SingleInputNode.instantiateCandidate(SingleInputNode.java:439)
	at org.apache.flink.compiler.dag.SingleInputNode.addLocalCandidates(SingleInputNode.java:367)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:02.440 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #300
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator$CoGroupOperatorSets:400 which is executed by 17 tests
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator$CoGroupOperatorSets:400
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #301
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator$CoGroupOperatorSets$CoGroupOperatorSetsPredicate$CoGroupOperatorWithoutFunction:624 which is executed by 7 tests
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator$CoGroupOperatorSets$CoGroupOperatorSetsPredicate$CoGroupOperatorWithoutFunction:624
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #302
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator$CoGroupOperatorSets$CoGroupOperatorSetsPredicate$CoGroupOperatorWithoutFunction:622 which is executed by 7 tests
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator$CoGroupOperatorSets$CoGroupOperatorSetsPredicate$CoGroupOperatorWithoutFunction:622
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #303
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator$CoGroupOperatorSets$CoGroupOperatorSetsPredicate$CoGroupOperatorWithoutFunction:620 which is executed by 7 tests
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator$CoGroupOperatorSets$CoGroupOperatorSetsPredicate$CoGroupOperatorWithoutFunction:620
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #304
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator$CoGroupOperatorSets$CoGroupOperatorSetsPredicate$CoGroupOperatorWithoutFunction:617 which is executed by 7 tests
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator$CoGroupOperatorSets$CoGroupOperatorSetsPredicate$CoGroupOperatorWithoutFunction:617
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #305
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:107 which is executed by 7 tests
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:107
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #306
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:65 which is executed by 7 tests
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:65
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #307
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:260 which is executed by 7 tests
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:260
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #308
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:252 which is executed by 7 tests
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:252
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #309
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:245 which is executed by 7 tests
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:245
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #310
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:243 which is executed by 7 tests
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:243
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #311
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:242 which is executed by 7 tests
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:242
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #312
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:178 which is executed by 7 tests
19:55:02.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:178
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #313
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:174 which is executed by 7 tests
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:174
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #314
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:170 which is executed by 7 tests
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:170
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #315
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:168 which is executed by 7 tests
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.CoGroupOperator:168
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #316
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.base.CoGroupOperatorBase:180 which is executed by 7 tests
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.base.CoGroupOperatorBase:180
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #317
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.base.CoGroupOperatorBase:179 which is executed by 7 tests
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.base.CoGroupOperatorBase:179
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #318
19:55:02.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedGlobalProperties:313 which is executed by 29 tests
-167437147
19:55:02.704 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:02.968 [pool-1626-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (252 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: Invalid partitioning to create through a data exchange: CUSTOM_PARTITIONING
	at org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.parameterizeChannel(RequestedGlobalProperties.java:207)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:300)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: Invalid partitioning to create through a data exchange: CUSTOM_PARTITIONING
	at org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.parameterizeChannel(RequestedGlobalProperties.java:207)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:300)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:03.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #319
19:55:03.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedGlobalProperties:312 which is executed by 29 tests
-167437147
19:55:04.172 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:04.435 [pool-1632-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (250 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: Cannot produce GlobalProperties before ship strategy is set.
	at org.apache.flink.compiler.plan.Channel.getGlobalProperties(Channel.java:403)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:305)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: Cannot produce GlobalProperties before ship strategy is set.
	at org.apache.flink.compiler.plan.Channel.getGlobalProperties(Channel.java:403)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:305)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:05.043 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #320
19:55:05.043 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.plan.Channel:401 which is executed by 29 tests
-1891363612
19:55:05.314 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:05.579 [pool-1638-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (253 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: Cannot produce GlobalProperties before ship strategy is set.
	at org.apache.flink.compiler.plan.Channel.getGlobalProperties(Channel.java:282)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:313)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: Cannot produce GlobalProperties before ship strategy is set.
	at org.apache.flink.compiler.plan.Channel.getGlobalProperties(Channel.java:282)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:313)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:06.169 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #321
19:55:06.170 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.plan.Channel:400 which is executed by 29 tests
-1891363612
19:55:06.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:06.701 [pool-1644-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (252 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Partition (Partition at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:235)) (1:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:347)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Partition (Partition at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:238)) (1:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:347)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:07.289 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #322
19:55:07.289 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.plan.Channel:143 which is executed by 29 tests
-1891363612
19:55:07.558 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #323
19:55:07.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.plan.Channel:142 which is executed by 29 tests
-1891363612
19:55:07.828 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:08.123 [pool-1650-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (248 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: Cannot produce GlobalProperties before ship strategy is set.
	at org.apache.flink.compiler.plan.Channel.getGlobalProperties(Channel.java:282)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:305)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: Cannot produce GlobalProperties before ship strategy is set.
	at org.apache.flink.compiler.plan.Channel.getGlobalProperties(Channel.java:282)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:305)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:08.713 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #324
19:55:08.713 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.DataSet:520 which is executed by 29 tests
19:55:08.713 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.DataSet:520
19:55:08.713 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #325
19:55:08.713 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedGlobalProperties:261 which is executed by 30 tests
-167437147
19:55:08.976 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #326
19:55:08.976 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedGlobalProperties:260 which is executed by 30 tests
-167437147
19:55:09.237 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #327
19:55:09.238 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedGlobalProperties:259 which is executed by 30 tests
-167437147
19:55:09.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:09.761 [pool-1656-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (249 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:55:10.099 [pool-1655-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
RequestedGlobalProperties.java:174: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:10.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #328
19:55:10.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedGlobalProperties:258 which is executed by 30 tests
-167437147
19:55:10.364 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:10.627 [pool-1658-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (251 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:55:10.966 [pool-1657-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
RequestedGlobalProperties.java:172: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:10.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:11.227 [pool-1660-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (250 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: Properties matching logic leaves open cases.
	at org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.isMetBy(RequestedGlobalProperties.java:163)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:313)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: Properties matching logic leaves open cases.
	at org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.isMetBy(RequestedGlobalProperties.java:163)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:313)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:11.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #329
19:55:11.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedGlobalProperties:255 which is executed by 30 tests
-167437147
19:55:12.115 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:12.376 [pool-1666-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (249 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:55:12.713 [pool-1665-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
RequestedGlobalProperties.java:172: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:12.713 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:12.971 [pool-1668-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (247 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Partition (Partition at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:235)) (1:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:347)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Partition (Partition at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:238)) (1:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:347)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:13.557 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #330
19:55:13.558 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedGlobalProperties:251 which is executed by 30 tests
-167437147
19:55:13.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:14.077 [pool-1674-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (248 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

19:55:14.414 [pool-1673-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
RequestedGlobalProperties.java:172: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:14.415 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:14.681 [pool-1676-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (255 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Partition (Partition at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:235)) (1:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:347)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Partition (Partition at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:238)) (1:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:347)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #331
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.MapOperator:65 which is executed by 30 tests
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.MapOperator:65
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #332
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:45 which is executed by 31 tests
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:45
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #333
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:126 which is executed by 31 tests
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:126
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #334
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:123 which is executed by 31 tests
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:123
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #335
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:94 which is executed by 31 tests
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:94
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #336
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:91 which is executed by 31 tests
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:91
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #337
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:90 which is executed by 31 tests
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.GroupReduceOperator:90
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #338
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:92 which is executed by 31 tests
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:92
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #339
19:55:15.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:889 which is executed by 31 tests
1189329080
19:55:15.556 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:15.817 [pool-1682-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (249 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:16.592 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:16.850 [pool-1688-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (247 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.NullPointerException
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternativesWithCommonBranching(OptimizerNode.java:509)
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:450)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:347)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:17.593 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #340
19:55:17.593 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:888 which is executed by 31 tests
1189329080
19:55:17.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #341
19:55:17.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:865 which is executed by 31 tests
1189329080
19:55:18.155 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:18.425 [pool-1694-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (259 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:19.152 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #342
19:55:19.152 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:863 which is executed by 31 tests
1189329080
19:55:19.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:19.696 [pool-1700-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (251 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:20.477 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:20.743 [pool-1706-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (253 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:21.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #343
19:55:21.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:862 which is executed by 31 tests
1189329080
19:55:21.744 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #344
19:55:21.744 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.OptimizerNode:861 which is executed by 31 tests
1189329080
19:55:22.027 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:22.292 [pool-1712-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (253 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:23.021 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:23.286 [pool-1718-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (254 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:396)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:24.004 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #345
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.Keys$ExpressionKeys:353 which is executed by 32 tests
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.Keys$ExpressionKeys:353
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #346
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.Keys$ExpressionKeys:352 which is executed by 32 tests
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.Keys$ExpressionKeys:352
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #347
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.Keys$ExpressionKeys:351 which is executed by 32 tests
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.Keys$ExpressionKeys:351
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #348
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.Keys$ExpressionKeys:348 which is executed by 32 tests
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.Keys$ExpressionKeys:348
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #349
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.Keys$ExpressionKeys:344 which is executed by 32 tests
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.Keys$ExpressionKeys:344
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #350
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.Keys$ExpressionKeys:342 which is executed by 32 tests
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.Keys$ExpressionKeys:342
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #351
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:311 which is executed by 8 tests
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:311
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #352
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:308 which is executed by 8 tests
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:308
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #353
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:295 which is executed by 8 tests
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.typeutils.TypeExtractor:295
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #354
19:55:24.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.CoGroupDescriptor:110 which is executed by 8 tests
-929572573
19:55:24.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:24.515 [pool-1724-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (236 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 1
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:25.143 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #355
19:55:25.143 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.operators.CoGroupDescriptor:103 which is executed by 8 tests
-929572573
19:55:25.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:25.648 [pool-1728-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (231 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 1
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #356
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.MapOperator:37 which is executed by 32 tests
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.MapOperator:37
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #357
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.MapOperator:68 which is executed by 32 tests
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.MapOperator:68
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #358
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.MapOperator:60 which is executed by 32 tests
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.MapOperator:60
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #359
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.MapOperator:58 which is executed by 32 tests
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.MapOperator:58
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #360
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.MapOperator:56 which is executed by 32 tests
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.MapOperator:56
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #361
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.operators.MapOperator:54 which is executed by 32 tests
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.java.operators.MapOperator:54
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #362
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.base.GroupReduceOperatorBase:146 which is executed by 32 tests
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.base.GroupReduceOperatorBase:146
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #363
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.base.GroupReduceOperatorBase:145 which is executed by 32 tests
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.base.GroupReduceOperatorBase:145
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #364
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.operators.base.GroupReduceOperatorBase:136 which is executed by 32 tests
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.flink.api.common.operators.base.GroupReduceOperatorBase:136
19:55:26.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #365
19:55:26.228 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedGlobalProperties:126 which is executed by 33 tests
-167437147
19:55:26.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #366
19:55:26.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedGlobalProperties:125 which is executed by 33 tests
-167437147
19:55:26.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:27.022 [pool-1732-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (257 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
java.lang.NullPointerException
	at org.apache.flink.compiler.dataproperties.GlobalProperties.setCustomPartitioned(GlobalProperties.java:122)
	at org.apache.flink.compiler.plan.Channel.getGlobalProperties(Channel.java:400)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:313)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.NullPointerException
	at org.apache.flink.compiler.dataproperties.GlobalProperties.setCustomPartitioned(GlobalProperties.java:122)
	at org.apache.flink.compiler.plan.Channel.getGlobalProperties(Channel.java:400)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:313)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:27.607 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #367
19:55:27.607 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedGlobalProperties:124 which is executed by 33 tests
-167437147
19:55:27.872 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:28.142 [pool-1738-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (257 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:28.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #368
19:55:28.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedGlobalProperties:123 which is executed by 33 tests
-167437147
19:55:29.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:29.329 [pool-1744-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (256 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
java.lang.NullPointerException
	at org.apache.flink.compiler.util.Utils.createOrderedFromSet(Utils.java:40)
	at org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.parameterizeChannel(RequestedGlobalProperties.java:204)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:300)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.NullPointerException
	at org.apache.flink.compiler.util.Utils.createOrderedFromSet(Utils.java:40)
	at org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.parameterizeChannel(RequestedGlobalProperties.java:204)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:300)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(SingleInputNode.java:258)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:305)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:29.917 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #369
19:55:29.918 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedGlobalProperties:122 which is executed by 33 tests
-167437147
19:55:30.180 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:30.442 [pool-1750-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (250 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:27)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:27)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:31.409 [pool-1749-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.SortPartialReuseTest#testCustomPartitioningNotReused
19:55:31.423 [pool-1749-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.operators.JoinGlobalPropertiesCompatibilityTest#checkCompatiblePartitionings
19:55:31.433 [pool-1749-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.dataproperties.GlobalPropertiesPushdownTest#testCustomPartitioningNotPushedDown
19:55:31.435 [pool-1749-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.operators.CoGroupGlobalPropertiesCompatibilityTest#checkCompatiblePartitionings
java -cp /tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-compiler/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-compiler/target/test-classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-shaded/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-core/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-java/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-runtime/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-clients/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-test-utils/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-scala/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-examples/flink-java-examples/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-examples/flink-scala-examples/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-tests/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-avro/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-jdbc/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-spargel/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-hadoop-compatibility/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-core/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-connectors/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-examples/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-hbase/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-yarn/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-quickstart/flink-quickstart-java/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-quickstart/flink-quickstart-scala/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-java8/target/classes:/home/tdurieux/.m2/repository/io/netty/netty-all/4.0.21.Final/netty-all-4.0.21.Final.jar:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-common/0.98.6.1-hadoop2/hbase-common-0.98.6.1-hadoop2.jar:/home/tdurieux/.m2/repository/org/scalamacros/quasiquotes_2.10/2.0.1/quasiquotes_2.10-2.0.1.jar:/home/tdurieux/.m2/repository/io/netty/netty/3.6.2.Final/netty-3.6.2.Final.jar:/home/tdurieux/.m2/repository/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar:/home/tdurieux/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.2.5/httpclient-4.2.5.jar:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/home/tdurieux/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/home/tdurieux/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/home/tdurieux/.m2/repository/org/apache/mina/mina-core/2.0.4/mina-core-2.0.4.jar:/home/tdurieux/.m2/repository/com/google/code/simple-spring-memcached/spymemcached/2.8.4/spymemcached-2.8.4.jar:/home/tdurieux/.m2/repository/org/apache/avro/avro/1.7.6/avro-1.7.6.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-java/0.8-incubating-SNAPSHOT/flink-java-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.json/2.0.6/org.apache.sling.commons.json-2.0.6.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.0.0.M1/jetty-server-8.0.0.M1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-connectors/0.8-incubating-SNAPSHOT/flink-streaming-connectors-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.1.2/grizzly-rcm-2.1.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.0.0.M1/jetty-continuation-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-hdfs/2.2.0/hadoop-hdfs-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-examples/0.8-incubating-SNAPSHOT/flink-streaming-examples-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-scala-examples/0.8-incubating-SNAPSHOT/flink-scala-examples-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-json/1.9/jersey-json-1.9.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-java-examples/0.8-incubating-SNAPSHOT/flink-java-examples-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/avro/avro-ipc/1.7.6/avro-ipc-1.7.6.jar:/home/tdurieux/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/tdurieux/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.9/jersey-guice-1.9.jar:/home/tdurieux/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-module-junit4-common/1.5.5/powermock-module-junit4-common-1.5.5.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-core/0.8-incubating-SNAPSHOT/flink-core-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/tomcat/jasper-compiler/5.5.23/jasper-compiler-5.5.23.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-reflect/1.5.5/powermock-reflect-1.5.5.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-java/0.8-incubating-SNAPSHOT/flink-java-0.8-incubating-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/com/rabbitmq/amqp-client/3.3.1/amqp-client-3.3.1.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-compiler/2.10.4/scala-compiler-2.10.4.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-common/2.2.0/hadoop-common-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-yarn/0.8-incubating-SNAPSHOT/flink-yarn-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-spargel/0.8-incubating-SNAPSHOT/flink-spargel-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-api/2.2.0/hadoop-yarn-api-2.2.0.jar:/home/tdurieux/.m2/repository/com/esotericsoftware/kryo/kryo/2.24.0/kryo-2.24.0.jar:/home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-xc/1.8.3/jackson-xc-1.8.3.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-reflect/2.10.4/scala-reflect-2.10.4.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-api-mockito/1.5.5/powermock-api-mockito-1.5.5.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http/2.1.2/grizzly-http-2.1.2.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.8/jackson-core-asl-1.8.8.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-configuration/1.5.0/flume-ng-configuration-1.5.0.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.6/commons-codec-1.6.jar:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-client/0.98.6.1-hadoop2/hbase-client-0.98.6.1-hadoop2.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.7/commons-codec-1.7.jar:/home/tdurieux/.m2/repository/redis/clients/jedis/2.4.2/jedis-2.4.2.jar:/home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar:/home/tdurieux/.m2/repository/tomcat/jasper-runtime/5.5.23/jasper-runtime-5.5.23.jar:/home/tdurieux/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/home/tdurieux/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.8/jackson-mapper-asl-1.8.8.jar:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.3.4/zookeeper-3.3.4.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-api-support/1.5.5/powermock-api-support-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-tests/0.8-incubating-SNAPSHOT/flink-tests-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-protocol/0.98.6.1-hadoop2/hbase-protocol-0.98.6.1-hadoop2.jar:/home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/tdurieux/.m2/repository/com/twitter/joauth/6.0.2/joauth-6.0.2.jar:/home/tdurieux/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-common/2.2.0/hadoop-yarn-common-2.2.0.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.3/commons-codec-1.3.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.1/commons-math-2.1.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.4/commons-codec-1.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.0.0.M1/jetty-io-8.0.0.M1.jar:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.1.1/jackson-databind-2.1.1.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.2/httpclient-4.2.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/com/jcraft/jsch/0.1.42/jsch-0.1.42.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.1.2/grizzly-http-server-2.1.2.jar:/home/tdurieux/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.0.0.M1/jetty-security-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-hadoop-compatibility/0.8-incubating-SNAPSHOT/flink-hadoop-compatibility-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-module-junit4/1.5.5/powermock-module-junit4-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.2/httpcore-4.2.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-library/2.10.4/scala-library-2.10.4.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-avro/0.8-incubating-SNAPSHOT/flink-avro-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.1.1/jackson-annotations-2.1.1.jar:/home/tdurieux/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/home/tdurieux/.m2/repository/org/cloudera/htrace/htrace-core/2.04/htrace-core-2.04.jar:/home/tdurieux/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-server/1.9/jersey-server-1.9.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-shaded/0.8-incubating-SNAPSHOT/flink-shaded-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/tdurieux/.m2/repository/org/apache/kafka/kafka_2.10/0.8.0/kafka_2.10-0.8.0.jar:/home/tdurieux/.m2/repository/commons-daemon/commons-daemon/1.0.13/commons-daemon-1.0.13.jar:/home/tdurieux/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-core/1.9/jersey-core-1.9.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.1/commons-io-2.1.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.1.2/grizzly-framework-2.1.2.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/4.0/asm-4.0.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-test-framework/jersey-test-framework-core/1.9/jersey-test-framework-core-1.9.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-core/1.5.0/flume-ng-core-1.5.0.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/home/tdurieux/.m2/repository/asm/asm/3.1/asm-3.1.jar:/home/tdurieux/.m2/repository/commons-el/commons-el/1.0/commons-el-1.0.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-clients/0.8-incubating-SNAPSHOT/flink-clients-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-runtime/0.8-incubating-SNAPSHOT/flink-runtime-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/google/inject/extensions/guice-servlet/3.0/guice-servlet-3.0.jar:/home/tdurieux/.m2/repository/com/esotericsoftware/minlog/minlog/1.2/minlog-1.2.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-pool2/2.0/commons-pool2-2.0.jar:/home/tdurieux/.m2/repository/org/tukaani/xz/1.0/xz-1.0.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/../lib/tools.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-core/0.8-incubating-SNAPSHOT/flink-streaming-core-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.4.5/zookeeper-3.4.5.jar:/home/tdurieux/.m2/repository/org/xerial/snappy/snappy-java/1.0.5/snappy-java-1.0.5.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-compiler/0.8-incubating-SNAPSHOT/flink-compiler-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-grizzly2/1.9/jersey-grizzly2-1.9.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-core/1.5.5/powermock-core-1.5.5.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/servlet-api/3.0.20100224/servlet-api-3.0.20100224.jar:/home/tdurieux/.m2/repository/com/twitter/hbc-core/2.2.0/hbc-core-2.2.0.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/11.0.2/guava-11.0.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.0.0.M1/jetty-util-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.0.0.M1/jetty-http-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sdk/1.5.0/flume-ng-sdk-1.5.0.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.3/jackson-jaxrs-1.8.3.jar:/home/tdurieux/.m2/repository/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-core/0.8-incubating-SNAPSHOT/flink-core-0.8-incubating-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-hbase/0.8-incubating-SNAPSHOT/flink-hbase-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-scala/0.8-incubating-SNAPSHOT/flink-scala-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.5/joda-time-2.5.jar:/home/tdurieux/.m2/repository/io/netty/netty/3.6.6.Final/netty-3.6.6.Final.jar:/home/tdurieux/.m2/repository/org/scalatest/scalatest_2.10/2.2.0/scalatest_2.10-2.2.0.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-test-framework/jersey-test-framework-grizzly2/1.9/jersey-test-framework-grizzly2-1.9.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/12.0.1/guava-12.0.1.jar:/home/tdurieux/.m2/repository/com/github/stephenc/findbugs/findbugs-annotations/1.3.9-1/findbugs-annotations-1.3.9-1.jar:/home/tdurieux/.m2/repository/com/amazonaws/aws-java-sdk/1.8.1/aws-java-sdk-1.8.1.jar:/home/tdurieux/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-library/2.10.1/scala-library-2.10.1.jar:/home/tdurieux/.m2/repository/org/fusesource/leveldbjni/leveldbjni-all/1.8/leveldbjni-all-1.8.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.1.2/grizzly-http-servlet-2.1.2.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-compress/1.4.1/commons-compress-1.4.1.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-test-utils/0.8-incubating-SNAPSHOT/flink-test-utils-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/101tec/zkclient/0.3/zkclient-0.3.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-core/2.2.0/hadoop-mapreduce-client-core-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-auth/2.2.0/hadoop-auth-2.2.0.jar:/home/tdurieux/.m2/repository/org/glassfish/javax.servlet/3.1/javax.servlet-3.1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-client/2.2.0/hadoop-yarn-client-2.2.0.jar:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/home/tdurieux/.m2/repository/net/java/dev/jets3t/jets3t/0.6.1/jets3t-0.6.1.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.1.1/jackson-core-2.1.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.0.0.M1/jetty-servlet-8.0.0.M1.jar:/home/tdurieux/.m2/repository/io/netty/netty/3.5.12.Final/netty-3.5.12.Final.jar:/home/tdurieux/.m2/repository/commons-net/commons-net/3.1/commons-net-3.1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-annotations/2.2.0/hadoop-annotations-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.2.4/httpcore-4.2.4.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-client/1.9/jersey-client-1.9.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.10.1.1/derby-10.10.1.1.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/home/tdurieux/defects4j4repair/repair_tools/nopol.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar: fr.inria.lille.repair.MethodTestRunner org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testIncompatibleHashAndCustomPartitioning org.apache.flink.compiler.custompartition.CustomPartitioningGlobalOptimizationTest#testJoinReduceCombination org.apache.flink.compiler.custompartition.GroupingKeySelectorTranslationTest#testCustomPartitioningKeySelectorGroupReduceSorted org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionPojo org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest#testCustomPartitioningTupleGroupReduceSorted2 org.apache.flink.compiler.custompartition.GroupingPojoTranslationTest#testCustomPartitioningTupleGroupReduce org.apache.flink.compiler.custompartition.GroupingKeySelectorTranslationTest#testCustomPartitioningKeySelectorGroupReduce org.apache.flink.compiler.custompartition.GroupingKeySelectorTranslationTest#testCustomPartitioningKeySelectorGroupReduceSorted2 org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testJoinWithKeySelectors org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest#testCustomPartitioningTupleReduce org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest#testCustomPartitioningTupleGroupReduce org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionKeySelector org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testIncompatibleHashAndCustomPartitioning org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testCoGroupWithTuples org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningCoGroup org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningJoin org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testJoinWithTuples org.apache.flink.compiler.custompartition.GroupingPojoTranslationTest#testCustomPartitioningTupleGroupReduceSorted org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testCoGroupWithKeySelectors org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest#testCustomPartitioningTupleGroupReduceSorted org.apache.flink.compiler.custompartition.GroupingKeySelectorTranslationTest#testCustomPartitioningKeySelectorReduce org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionTuples org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testCoGroupWithPojos org.apache.flink.compiler.custompartition.GroupingPojoTranslationTest#testCustomPartitioningTupleReduce org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testJoinWithPojos org.apache.flink.compiler.dataproperties.GlobalPropertiesMatchingTest#testMatchingCustomPartitioning org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest#testCustomPartitioningTupleAgg org.apache.flink.compiler.java.PartitioningOperatorTest#testPartitiongOperatorPreservesFields org.apache.flink.compiler.custompartition.GroupingPojoTranslationTest#testCustomPartitioningTupleGroupReduceSorted2 
19:55:32.178 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - ClassPrepareEvent
19:55:32.184 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.api.common.operators.util.FieldSet
19:55:32.184 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.api.common.functions.Partitioner
19:55:32.185 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.lang.NullPointerException
19:55:32.186 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.compiler.dataproperties.RequestedGlobalProperties
19:55:32.186 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.compiler.dataproperties.PartitioningProperty
19:55:32.192 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.api.common.operators.Ordering
19:55:32.291 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:32.297 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testIncompatibleHashAndCustomPartitioning iteration 0
19:55:32.298 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:32.298 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=817)
19:55:32.298 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:32.298 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:32.301 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:32.301 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:32.301 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:32.301 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:32.301 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:32.337 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:32.339 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:32.341 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:32.342 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:32.345 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:32.350 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.353 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:32.355 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:32.358 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:32.360 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:32.360 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:32.439 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:32.442 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningGlobalOptimizationTest#testJoinReduceCombination iteration 0
19:55:32.443 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:32.443 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1228)
19:55:32.443 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:32.443 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:32.445 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:32.445 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:32.445 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:32.445 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:32.445 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:32.454 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:32.457 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:32.460 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:32.461 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:32.464 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:32.470 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.473 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:32.476 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:32.478 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:32.480 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:32.482 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:32.484 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:32.487 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningGlobalOptimizationTest#testJoinReduceCombination iteration 1
19:55:32.488 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:32.488 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1311)
19:55:32.488 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:32.488 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:32.489 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:32.489 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:32.489 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:32.489 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:32.489 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:32.492 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:32.494 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:32.497 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:32.498 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:32.502 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:32.505 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:32.507 [pool-1856-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:32.510 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.513 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:32.516 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.520 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:32.522 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:32.525 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:32.527 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:32.528 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:32.529 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:32.532 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningGlobalOptimizationTest#testJoinReduceCombination iteration 2
19:55:32.532 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:32.532 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1317)
19:55:32.532 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:32.533 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:32.534 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:32.534 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:32.534 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:32.534 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:32.534 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:32.536 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:32.539 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:32.541 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:32.542 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:32.544 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:32.547 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:32.548 [pool-1874-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:32.551 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.554 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:32.556 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.560 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:32.563 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:32.565 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:32.568 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:32.569 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:32.571 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:32.574 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningGlobalOptimizationTest#testJoinReduceCombination iteration 3
19:55:32.575 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:32.575 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1321)
19:55:32.575 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:32.575 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:32.576 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:32.576 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:32.576 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:32.576 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:32.576 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:32.579 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:32.582 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:32.584 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:32.585 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:32.590 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:32.593 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:32.595 [pool-1892-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:32.598 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.601 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:32.604 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.607 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:32.610 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:32.612 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:32.614 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:32.615 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:32.617 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:32.620 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningGlobalOptimizationTest#testJoinReduceCombination iteration 4
19:55:32.620 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:32.620 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1324)
19:55:32.621 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:32.621 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:32.622 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:32.622 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:32.622 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:32.622 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:32.622 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:32.625 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:32.627 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:32.629 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:32.630 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:32.634 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:32.636 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:32.637 [pool-1910-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:32.640 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.643 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:32.646 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.650 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:32.652 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:32.654 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:32.657 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:32.657 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:32.659 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:32.662 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningGlobalOptimizationTest#testJoinReduceCombination iteration 5
19:55:32.662 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:32.662 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1326)
19:55:32.662 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:32.663 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:32.664 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:32.664 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:32.664 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:32.664 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:32.664 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:32.666 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:32.694 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:32.697 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:32.698 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:32.700 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:32.703 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:32.704 [pool-1928-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:32.707 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.709 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:32.712 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.716 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:32.718 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:32.720 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:32.722 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:32.723 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:32.724 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:32.727 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningGlobalOptimizationTest#testJoinReduceCombination iteration 6
19:55:32.727 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:32.727 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1329)
19:55:32.727 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:32.728 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:32.729 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:32.729 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:32.729 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:32.729 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:32.729 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:32.731 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:32.733 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:32.735 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:32.736 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:32.739 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:32.741 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:32.742 [pool-1946-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:32.745 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.748 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:32.751 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.754 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:32.756 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:32.758 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:32.760 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:32.761 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:32.795 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:32.798 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.GroupingKeySelectorTranslationTest#testCustomPartitioningKeySelectorGroupReduceSorted iteration 0
19:55:32.798 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:32.798 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1352)
19:55:32.799 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:32.799 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:32.800 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:32.800 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:32.800 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:32.800 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:32.800 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:32.804 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:32.807 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:32.809 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:32.809 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:32.812 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:32.817 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.820 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:32.822 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:32.824 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:32.826 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:32.827 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:32.847 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:32.850 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionPojo iteration 0
19:55:32.850 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:32.850 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1405)
19:55:32.851 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:32.851 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:32.852 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:32.852 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:32.852 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:32.852 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:32.852 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:32.856 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:32.858 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:32.861 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:32.862 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:32.865 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:32.870 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.873 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:32.875 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:32.877 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:32.879 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:32.880 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:32.890 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:32.893 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest#testCustomPartitioningTupleGroupReduceSorted2 iteration 0
19:55:32.893 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:32.893 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1425)
19:55:32.894 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:32.894 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:32.895 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:32.895 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:32.895 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:32.895 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:32.895 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:32.898 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:32.901 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:32.903 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:32.904 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:32.907 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:32.912 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.916 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:32.918 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:32.921 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:32.923 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:32.925 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:32.934 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:32.937 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.GroupingPojoTranslationTest#testCustomPartitioningTupleGroupReduce iteration 0
19:55:32.937 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:32.937 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1439)
19:55:32.938 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:32.938 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:32.939 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:32.939 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:32.939 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:32.939 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:32.939 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:32.942 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:32.945 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:32.947 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:32.948 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:32.951 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:32.956 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.959 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:32.961 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:32.964 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:32.966 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:32.967 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:32.974 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:32.977 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.GroupingKeySelectorTranslationTest#testCustomPartitioningKeySelectorGroupReduce iteration 0
19:55:32.977 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:32.977 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1451)
19:55:32.978 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:32.978 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:32.979 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:32.979 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:32.979 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:32.979 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:32.979 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:32.982 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:32.984 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:32.986 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:32.987 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:32.991 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:32.996 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:32.999 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.001 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.003 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.006 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.006 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.013 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.017 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.GroupingKeySelectorTranslationTest#testCustomPartitioningKeySelectorGroupReduceSorted2 iteration 0
19:55:33.017 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.017 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1461)
19:55:33.018 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.018 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.019 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.019 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.019 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.019 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.019 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.022 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.024 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.027 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.028 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.032 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.037 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.040 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.042 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.045 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.047 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.048 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.076 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.080 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testJoinWithKeySelectors iteration 0
19:55:33.081 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.081 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1478)
19:55:33.081 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.082 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.083 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.083 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.083 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.083 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.083 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.089 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.092 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.094 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.095 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.099 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.101 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:33.103 [pool-2048-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:33.106 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.109 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:33.112 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.116 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.119 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.121 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.123 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.124 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.126 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.129 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testJoinWithKeySelectors iteration 1
19:55:33.129 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.129 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1491)
19:55:33.130 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.130 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.131 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.131 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.131 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.131 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.131 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.134 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.136 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.139 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.140 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.143 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.145 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:33.147 [pool-2066-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:33.150 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.153 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:33.156 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.160 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.162 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.164 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.166 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.167 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.177 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.180 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest#testCustomPartitioningTupleReduce iteration 0
19:55:33.180 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.180 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1499)
19:55:33.181 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.181 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.182 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.182 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.182 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.182 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.182 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.186 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.188 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.190 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.191 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.194 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.199 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.202 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.204 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.206 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.208 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.209 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.215 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.218 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest#testCustomPartitioningTupleGroupReduce iteration 0
19:55:33.218 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.218 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1511)
19:55:33.218 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.218 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.219 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.219 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.219 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.219 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.220 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.223 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.225 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.227 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.228 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.231 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.236 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.239 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.242 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.244 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.246 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.247 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.254 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.257 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionKeySelector iteration 0
19:55:33.258 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.258 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1523)
19:55:33.258 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.258 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.260 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.260 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.260 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.260 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.260 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.263 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.266 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.268 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.269 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.272 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.277 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.280 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.282 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.284 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.287 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.288 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.297 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.301 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testIncompatibleHashAndCustomPartitioning iteration 0
19:55:33.302 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.302 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1537)
19:55:33.302 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.302 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.303 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.303 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.303 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.303 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.303 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.307 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.309 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.312 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.313 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.317 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.322 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.326 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.328 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.331 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.333 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.334 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.345 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.348 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testCoGroupWithTuples iteration 0
19:55:33.348 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.348 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1552)
19:55:33.349 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.349 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.350 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.350 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.350 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.350 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.350 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.353 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.355 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.358 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.359 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.363 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.367 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:33.368 [pool-2140-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:33.372 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.375 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:33.378 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.382 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.384 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.387 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.389 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.390 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.392 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.395 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testCoGroupWithTuples iteration 1
19:55:33.396 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.396 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1562)
19:55:33.396 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.396 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.397 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.397 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.397 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.397 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.397 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.401 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.403 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.406 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.407 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.410 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.413 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:33.414 [pool-2158-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:33.417 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.420 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:33.423 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.427 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.429 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.431 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.434 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.435 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.442 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.446 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningCoGroup iteration 0
19:55:33.447 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.447 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1568)
19:55:33.447 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.447 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.448 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.448 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.448 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.449 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.449 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.452 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.455 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.457 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.458 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.462 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.467 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.470 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.473 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.475 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.477 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.478 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.480 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.484 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningCoGroup iteration 1
19:55:33.484 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.484 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1578)
19:55:33.484 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.484 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.486 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.486 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.486 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.486 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.486 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.489 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.491 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.494 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.494 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.498 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.503 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.506 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.508 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.511 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.513 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.514 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.594 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.599 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningJoin iteration 0
19:55:33.599 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.599 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1660)
19:55:33.600 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.600 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.602 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.603 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.603 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.603 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.603 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.610 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.613 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.616 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.617 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.622 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.628 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.632 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.635 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.638 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.640 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.642 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.644 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.648 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.BinaryCustomPartitioningCompatibilityTest#testCompatiblePartitioningJoin iteration 1
19:55:33.649 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.649 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1689)
19:55:33.649 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.649 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.650 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.650 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.650 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.651 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.651 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.654 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.657 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.660 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.661 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.666 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.672 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.675 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.678 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.681 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.684 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.685 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.711 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.716 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testJoinWithTuples iteration 0
19:55:33.716 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.716 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1698)
19:55:33.716 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.717 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.718 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.718 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.718 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.718 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.718 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.722 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.725 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.727 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.728 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.732 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.734 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:33.736 [pool-2232-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:33.739 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.742 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:33.745 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.749 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.752 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.754 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.756 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.757 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.759 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.762 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testJoinWithTuples iteration 1
19:55:33.762 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.762 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1708)
19:55:33.762 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.762 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.763 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.763 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.763 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.763 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.764 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.766 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.769 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.771 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.772 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.775 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.778 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:33.779 [pool-2250-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:33.782 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.785 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:33.788 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.792 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.795 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.797 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.799 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.800 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.807 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.810 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.GroupingPojoTranslationTest#testCustomPartitioningTupleGroupReduceSorted iteration 0
19:55:33.810 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.810 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1713)
19:55:33.810 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.810 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.811 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.811 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.811 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.811 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.811 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.815 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.817 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.820 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.821 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.824 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.829 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.832 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.835 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.837 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.840 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.841 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.849 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.852 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testCoGroupWithKeySelectors iteration 0
19:55:33.853 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.853 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1730)
19:55:33.853 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.853 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.854 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.854 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.854 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.854 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.854 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.858 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.860 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.863 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.864 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.867 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.870 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:33.871 [pool-2282-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:33.874 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.877 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:33.881 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.884 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.887 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.889 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.892 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.893 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.895 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.898 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testCoGroupWithKeySelectors iteration 1
19:55:33.898 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.898 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1742)
19:55:33.898 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.898 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.900 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.900 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.900 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.900 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.900 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.904 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.906 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.908 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.909 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.913 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.915 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:33.917 [pool-2300-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:33.920 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.923 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:33.926 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.930 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.933 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.935 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.937 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.938 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.944 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.947 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest#testCustomPartitioningTupleGroupReduceSorted iteration 0
19:55:33.947 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.948 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1746)
19:55:33.948 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.948 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.949 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.949 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.949 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.949 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.949 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.952 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.955 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:33.958 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:33.959 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:33.963 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:33.968 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:33.972 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:33.975 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:33.977 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:33.980 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:33.981 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:33.987 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:33.991 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.GroupingKeySelectorTranslationTest#testCustomPartitioningKeySelectorReduce iteration 0
19:55:33.991 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:33.991 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1757)
19:55:33.992 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:33.992 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:33.993 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:33.993 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:33.993 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:33.993 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:33.993 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:33.996 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:33.999 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:34.002 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:34.003 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:34.008 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:34.014 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:34.017 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:34.020 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:34.022 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:34.025 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:34.048 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:34.057 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:34.061 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CustomPartitioningTest#testPartitionTuples iteration 0
19:55:34.061 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:34.061 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1768)
19:55:34.061 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:34.062 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:34.063 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:34.063 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:34.063 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:34.063 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:34.063 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:34.067 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:34.070 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:34.073 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:34.074 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:34.078 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:34.083 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:34.087 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:34.089 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:34.092 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:34.094 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:34.095 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:34.101 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:34.106 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testCoGroupWithPojos iteration 0
19:55:34.106 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:34.106 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1779)
19:55:34.106 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:34.107 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:34.108 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:34.108 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:34.108 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:34.108 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:34.108 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:34.112 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:34.115 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:34.118 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:34.119 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:34.124 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:34.127 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:34.129 [pool-2360-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:34.133 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:34.136 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:34.140 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:34.145 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:34.147 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:34.150 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:34.153 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:34.154 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:34.157 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:34.160 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testCoGroupWithPojos iteration 1
19:55:34.161 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:34.161 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1789)
19:55:34.161 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:34.161 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:34.162 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:34.162 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:34.163 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:34.163 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:34.163 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:34.166 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:34.168 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:34.171 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:34.172 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:34.176 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:34.180 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:34.181 [pool-2378-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:34.185 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:34.188 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:34.192 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:34.196 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:34.199 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:34.202 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:34.204 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:34.205 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:34.211 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:34.214 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.GroupingPojoTranslationTest#testCustomPartitioningTupleReduce iteration 0
19:55:34.215 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:34.215 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1793)
19:55:34.215 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:34.215 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:34.216 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:34.216 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:34.216 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:34.216 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:34.216 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:34.219 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:34.222 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:34.225 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:34.226 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:34.230 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:34.235 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:34.239 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:34.241 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:34.244 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:34.246 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:34.247 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:34.252 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:34.256 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testJoinWithPojos iteration 0
19:55:34.256 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:34.256 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1803)
19:55:34.256 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:34.257 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:34.258 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:34.258 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:34.258 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:34.258 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:34.258 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:34.261 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:34.264 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:34.266 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:34.267 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:34.271 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:34.274 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:34.276 [pool-2410-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:34.279 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:34.282 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:34.286 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:34.290 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:34.292 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:34.295 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:34.298 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:34.299 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:34.301 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:34.304 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testJoinWithPojos iteration 1
19:55:34.304 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:34.304 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1813)
19:55:34.304 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:34.305 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:34.306 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:34.306 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:34.306 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:34.306 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:34.306 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:34.310 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:34.312 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:34.315 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:34.316 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:34.319 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:34.322 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.get((int) 0)
19:55:34.323 [pool-2428-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.api.common.operators.util.FieldList.get(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:34.327 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:34.330 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldList) partitionedFields)
19:55:34.334 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidUnorderedPrefix((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:34.338 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:34.341 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:34.343 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:34.346 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:34.347 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:34.358 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:34.360 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.dataproperties.GlobalPropertiesMatchingTest#testMatchingCustomPartitioning iteration 0
19:55:34.360 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:34.360 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1819)
19:55:34.360 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:34.360 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:34.362 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:34.362 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:34.362 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:34.362 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:34.362 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:34.365 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:34.368 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:34.370 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:34.371 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:34.375 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:34.380 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:34.383 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:34.386 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:34.388 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:34.390 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:34.391 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:34.403 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:34.406 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.GroupingTupleTranslationTest#testCustomPartitioningTupleAgg iteration 0
19:55:34.406 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:34.406 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1834)
19:55:34.407 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:34.407 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:34.408 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:34.408 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:34.408 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:34.409 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:34.409 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:34.414 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:34.416 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:34.419 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:34.420 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:34.424 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:34.430 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:34.434 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:34.437 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:34.439 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:34.442 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:34.443 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:34.449 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:34.452 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.java.PartitioningOperatorTest#testPartitiongOperatorPreservesFields iteration 0
19:55:34.453 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:34.453 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1856)
19:55:34.453 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:34.453 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:34.454 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:34.454 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:34.454 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:34.454 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:34.454 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:34.458 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:34.460 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:34.462 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:34.463 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:34.467 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:34.473 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:34.476 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:34.478 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:34.481 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:34.483 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:34.484 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:34.490 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:34.495 [pool-1749-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.GroupingPojoTranslationTest#testCustomPartitioningTupleGroupReduceSorted2 iteration 0
19:55:34.495 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:34.495 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1868)
19:55:34.495 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields
19:55:34.496 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitioner
19:55:34.497 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioning
19:55:34.497 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.partitioningFields
19:55:34.497 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ordering
19:55:34.497 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.dataDistribution
19:55:34.497 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.customPartitioner
19:55:34.501 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) this)
19:55:34.503 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitionedFields)
19:55:34.506 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.equals((java.lang.Object) partitioner)
19:55:34.507 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPartitioning()
19:55:34.511 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isTrivial()
19:55:34.517 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.isValidSubset((org.apache.flink.api.common.operators.util.FieldSet) partitionedFields)
19:55:34.520 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this)
19:55:34.523 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitionedFields)
19:55:34.525 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) partitioner)
19:55:34.528 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.equals((java.lang.Object) this.partitioning)
19:55:34.529 [pool-1749-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] partitionedFields.size()
19:55:34.533 [pool-1749-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - Exit


========= Info ==========
Nb constants             18
Nb method invocations    1
Nb field access          0
Nb variables             4
Total                    23
Nb evaluated expressions 1
Init Execution time      832 ms
Collect Execution time   2246 ms
Combine Execution time   8.0 ms
Nb Combination par sec   125 combinations/sec
Total Execution time     3086 ms
Nb line execution        43
Nb results               1

Results:
1. !(hasDeadlock(sinks))


========================
         Stat
========================
Operators: 
EQ 2
OR 1
Methods: 
Variable: 
org.apache.flink.compiler.dataproperties.PartitioningProperty.CUSTOM_PARTITIONING 2
partitionedFields 2
ordering 2
partitioner 2
partitioning 2
partitioningFields 2
customPartitioner 2

 & 18 & 1 & 0 & 4 & 23 & 1 & 3087 ms & 43 &
19:55:34.542 [pool-1749-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: org.apache.flink.compiler.dataproperties.RequestedGlobalProperties:122: PRECONDITION !(hasDeadlock(sinks))
19:55:34.906 [pool-1749-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
RequestedGlobalProperties.java:71: error: cannot find symbol
        if (!(hasDeadlock(sinks)))
                          ^
  symbol:   variable sinks
  location: class org.apache.flink.compiler.dataproperties.RequestedGlobalProperties
19:55:34.906 [pool-1749-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Patch malformed !(hasDeadlock(sinks))
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99) ~[nopol.jar:na]
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135) ~[nopol.jar:na]
	at fr.inria.lille.repair.nopol.patch.TestPatch.passesAllTests(TestPatch.java:60) ~[nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.isOk(NoPol.java:317) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:302) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:34.906 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: invalid patch
19:55:34.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #370
19:55:34.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedGlobalProperties:118 which is executed by 33 tests
-167437147
19:55:35.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:35.438 [pool-2494-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (259 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:36.034 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:36.301 [pool-2500-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (256 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.NullPointerException
	at org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.setCustomPartitioned(RequestedGlobalProperties.java:75)
	at org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor.createPossibleGlobalProperties(PartitionNode.java:118)
	at org.apache.flink.compiler.operators.OperatorDescriptorSingle.getPossibleGlobalProperties(OperatorDescriptorSingle.java:58)
	at org.apache.flink.compiler.dag.SingleInputNode.computeInterestingPropertiesForInputs(SingleInputNode.java:222)
	at org.apache.flink.compiler.PactCompiler$InterestingPropertyVisitor.preVisit(PactCompiler.java:1029)
	at org.apache.flink.compiler.PactCompiler$InterestingPropertyVisitor.preVisit(PactCompiler.java:1007)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:484)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:486)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:486)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:486)
	at org.apache.flink.compiler.dag.TwoInputNode.accept(TwoInputNode.java:735)
	at org.apache.flink.compiler.dag.DataSinkNode.accept(DataSinkNode.java:246)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:549)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.NullPointerException
	at org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.setCustomPartitioned(RequestedGlobalProperties.java:75)
	at org.apache.flink.compiler.dag.PartitionNode$PartitionDescriptor.createPossibleGlobalProperties(PartitionNode.java:118)
	at org.apache.flink.compiler.operators.OperatorDescriptorSingle.getPossibleGlobalProperties(OperatorDescriptorSingle.java:58)
	at org.apache.flink.compiler.dag.SingleInputNode.computeInterestingPropertiesForInputs(SingleInputNode.java:222)
	at org.apache.flink.compiler.PactCompiler$InterestingPropertyVisitor.preVisit(PactCompiler.java:1029)
	at org.apache.flink.compiler.PactCompiler$InterestingPropertyVisitor.preVisit(PactCompiler.java:1007)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:484)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:486)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:486)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:486)
	at org.apache.flink.compiler.dag.TwoInputNode.accept(TwoInputNode.java:735)
	at org.apache.flink.compiler.dag.DataSinkNode.accept(DataSinkNode.java:246)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:549)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:36.890 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #371
19:55:36.890 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedLocalProperties:151 which is executed by 33 tests
-1126041135
19:55:37.147 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:37.416 [pool-2506-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (257 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:38.007 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:38.279 [pool-2512-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (260 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:38.866 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #372
19:55:38.866 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedLocalProperties:150 which is executed by 33 tests
-1126041135
19:55:39.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:39.444 [pool-2518-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (258 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:40.031 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #373
19:55:40.031 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dataproperties.RequestedLocalProperties:149 which is executed by 33 tests
-1126041135
19:55:40.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #374
19:55:40.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.SingleInputNode:230 which is executed by 33 tests
1770269029
19:55:40.558 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:40.831 [pool-2524-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (261 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
java.util.ConcurrentModificationException
	at java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)
	at java.util.HashMap$KeyIterator.next(HashMap.java:1466)
	at org.apache.flink.compiler.dag.SingleInputNode.computeInterestingPropertiesForInputs(SingleInputNode.java:120)
	at org.apache.flink.compiler.PactCompiler$InterestingPropertyVisitor.preVisit(PactCompiler.java:1029)
	at org.apache.flink.compiler.PactCompiler$InterestingPropertyVisitor.preVisit(PactCompiler.java:1007)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:317)
	at org.apache.flink.compiler.dag.TwoInputNode.accept(TwoInputNode.java:735)
	at org.apache.flink.compiler.dag.DataSinkNode.accept(DataSinkNode.java:246)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:549)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.util.ConcurrentModificationException
	at java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)
	at java.util.HashMap$KeyIterator.next(HashMap.java:1466)
	at org.apache.flink.compiler.dag.SingleInputNode.computeInterestingPropertiesForInputs(SingleInputNode.java:120)
	at org.apache.flink.compiler.PactCompiler$InterestingPropertyVisitor.preVisit(PactCompiler.java:1029)
	at org.apache.flink.compiler.PactCompiler$InterestingPropertyVisitor.preVisit(PactCompiler.java:1007)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:315)
	at org.apache.flink.compiler.dag.SingleInputNode.accept(SingleInputNode.java:317)
	at org.apache.flink.compiler.dag.TwoInputNode.accept(TwoInputNode.java:735)
	at org.apache.flink.compiler.dag.DataSinkNode.accept(DataSinkNode.java:246)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:549)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:41.468 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #375
19:55:41.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.compiler.dag.SingleInputNode:229 which is executed by 33 tests
1770269029
19:55:41.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
19:55:42.013 [pool-2530-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (260 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 2
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest)
[No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:268)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
~ testIncompatibleHashAndCustomPartitioning(org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest)
[No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.]
java.lang.AssertionError: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:265)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ CoGroup (CoGroup at testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:253)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(CoGroupCustomPartitioningTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:27)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
org.apache.flink.compiler.CompilerException: No plan meeting the requirements could be created @ Join (Join at testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:250)) (1:null)(2:null). Most likely reason: Too restrictive plan hints.
	at org.apache.flink.compiler.dag.OptimizerNode.prunePlanAlternatives(OptimizerNode.java:721)
	at org.apache.flink.compiler.dag.TwoInputNode.getAlternativePlans(TwoInputNode.java:465)
	at org.apache.flink.compiler.dag.DataSinkNode.getAlternativePlans(DataSinkNode.java:194)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:561)
	at org.apache.flink.compiler.PactCompiler.compile(PactCompiler.java:466)
	at org.apache.flink.compiler.CompilerTestBase.compileNoStats(CompilerTestBase.java:91)
	at org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest.testIncompatibleHashAndCustomPartitioning(JoinCustomPartitioningTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:27)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
19:55:43.305 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.CoGroupSolutionSetFirstTest#testCoGroupSolutionSet
19:55:43.306 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.DOPChangeTest#checkPropertyHandlingWithIncreasingLocalParallelism
19:55:43.314 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.java.WorksetIterationsJavaApiCompilerTest#testJavaApiWithDeferredSoltionSetUpdateWithNonPreservingJoin
19:55:43.317 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.SortPartialReuseTest#testPartialPartitioningReuse
19:55:43.321 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.SortPartialReuseTest#testCustomPartitioningNotReused
19:55:43.332 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.BranchingPlansCompilerTest#testBranchEachContractType
19:55:43.335 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.UnionPropertyPropagationTest#testUnionPropertyOldApiPropagation
19:55:43.343 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.WorksetIterationsRecordApiCompilerTest#testRecordApiWithDeferredSoltionSetUpdateWithMapper
19:55:43.351 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.java.WorksetIterationsJavaApiCompilerTest#testJavaApiWithDeferredSoltionSetUpdateWithMapper
19:55:43.404 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.NestedIterationsTest#testDeltaIterationInClosure
19:55:43.412 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.WorksetIterationsRecordApiCompilerTest#testRecordApiWithDirectSoltionSetUpdate
19:55:43.415 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.DOPChangeTest#checkPropertyHandlingWithIncreasingGlobalParallelism1
19:55:43.416 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.DOPChangeTest#checkPropertyHandlingWithIncreasingGlobalParallelism2
19:55:43.417 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.DOPChangeTest#checkPropertyHandlingWithDecreasingDegreeOfParallelism
19:55:43.427 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.java.WorksetIterationsJavaApiCompilerTest#testJavaApiWithDirectSoltionSetUpdate
19:55:43.457 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.IterationsCompilerTest#testTwoWorksetIterationsDirectlyChained
19:55:43.461 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.IterationsCompilerTest#testWorksetIterationPipelineBreakerPlacement
19:55:43.466 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.IterationsCompilerTest#testSolutionSetDeltaDependsOnBroadcastVariable
19:55:43.480 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.BranchingPlansCompilerTest#testDeltaIterationWithStaticInput
19:55:43.485 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.WorksetIterationCornerCasesTest#testWorksetIterationNotDependingOnSolutionSet
19:55:43.488 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.DOPChangeTest#checkPropertyHandlingWithTwoInputs
19:55:43.496 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.WorksetIterationsRecordApiCompilerTest#testRecordApiWithDeferredSoltionSetUpdateWithNonPreservingJoin
19:55:43.498 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.java.IterationCompilerTest#testEmptyWorksetIteration
19:55:43.502 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.BranchingPlansCompilerTest#testBranchingUnion
19:55:43.522 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.IterationsCompilerTest#testTwoIterationsWithMapperInbetween
19:55:43.535 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.IterationsCompilerTest#testTwoIterationsDirectlyChained
19:55:43.541 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.java.IterationCompilerTest#testWorksetIterationWithUnionRoot
19:55:43.543 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.BranchingPlansCompilerTest#testClosureDeltaIteration
19:55:43.563 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.IterationsCompilerTest#testIterationPushingWorkOut
19:55:43.565 [pool-2529-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.flink.compiler.java.DistinctAndGroupingOptimizerTest#testDistinctPreservesPartitioningOfDistinctFields
java -cp /tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-compiler/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-compiler/target/test-classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-shaded/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-core/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-java/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-runtime/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-clients/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-test-utils/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-scala/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-examples/flink-java-examples/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-examples/flink-scala-examples/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-tests/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-avro/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-jdbc/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-spargel/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-hadoop-compatibility/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-core/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-connectors/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-streaming/flink-streaming-examples/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-hbase/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-addons/flink-yarn/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-quickstart/flink-quickstart-java/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-quickstart/flink-quickstart-scala/target/classes:/tmp/DynaMoth_Bug_dot_jar_Flink_45fb6d82/flink-java8/target/classes:/home/tdurieux/.m2/repository/io/netty/netty-all/4.0.21.Final/netty-all-4.0.21.Final.jar:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-common/0.98.6.1-hadoop2/hbase-common-0.98.6.1-hadoop2.jar:/home/tdurieux/.m2/repository/org/scalamacros/quasiquotes_2.10/2.0.1/quasiquotes_2.10-2.0.1.jar:/home/tdurieux/.m2/repository/io/netty/netty/3.6.2.Final/netty-3.6.2.Final.jar:/home/tdurieux/.m2/repository/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar:/home/tdurieux/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.2.5/httpclient-4.2.5.jar:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/home/tdurieux/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar:/home/tdurieux/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/home/tdurieux/.m2/repository/org/apache/mina/mina-core/2.0.4/mina-core-2.0.4.jar:/home/tdurieux/.m2/repository/com/google/code/simple-spring-memcached/spymemcached/2.8.4/spymemcached-2.8.4.jar:/home/tdurieux/.m2/repository/org/apache/avro/avro/1.7.6/avro-1.7.6.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-java/0.8-incubating-SNAPSHOT/flink-java-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/sling/org.apache.sling.commons.json/2.0.6/org.apache.sling.commons.json-2.0.6.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-server/8.0.0.M1/jetty-server-8.0.0.M1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-connectors/0.8-incubating-SNAPSHOT/flink-streaming-connectors-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-rcm/2.1.2/grizzly-rcm-2.1.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-continuation/8.0.0.M1/jetty-continuation-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-hdfs/2.2.0/hadoop-hdfs-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-examples/0.8-incubating-SNAPSHOT/flink-streaming-examples-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-scala-examples/0.8-incubating-SNAPSHOT/flink-scala-examples-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-json/1.9/jersey-json-1.9.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-java-examples/0.8-incubating-SNAPSHOT/flink-java-examples-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/avro/avro-ipc/1.7.6/avro-ipc-1.7.6.jar:/home/tdurieux/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/tdurieux/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.9/jersey-guice-1.9.jar:/home/tdurieux/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-module-junit4-common/1.5.5/powermock-module-junit4-common-1.5.5.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-core/0.8-incubating-SNAPSHOT/flink-core-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/tomcat/jasper-compiler/5.5.23/jasper-compiler-5.5.23.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-reflect/1.5.5/powermock-reflect-1.5.5.jar:/home/tdurieux/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-java/0.8-incubating-SNAPSHOT/flink-java-0.8-incubating-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/com/rabbitmq/amqp-client/3.3.1/amqp-client-3.3.1.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-compiler/2.10.4/scala-compiler-2.10.4.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-common/2.2.0/hadoop-common-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-yarn/0.8-incubating-SNAPSHOT/flink-yarn-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-spargel/0.8-incubating-SNAPSHOT/flink-spargel-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-api/2.2.0/hadoop-yarn-api-2.2.0.jar:/home/tdurieux/.m2/repository/com/esotericsoftware/kryo/kryo/2.24.0/kryo-2.24.0.jar:/home/tdurieux/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-xc/1.8.3/jackson-xc-1.8.3.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-reflect/2.10.4/scala-reflect-2.10.4.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-api-mockito/1.5.5/powermock-api-mockito-1.5.5.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http/2.1.2/grizzly-http-2.1.2.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.8/jackson-core-asl-1.8.8.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-configuration/1.5.0/flume-ng-configuration-1.5.0.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.6/commons-codec-1.6.jar:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-client/0.98.6.1-hadoop2/hbase-client-0.98.6.1-hadoop2.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.7/commons-codec-1.7.jar:/home/tdurieux/.m2/repository/redis/clients/jedis/2.4.2/jedis-2.4.2.jar:/home/tdurieux/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar:/home/tdurieux/.m2/repository/tomcat/jasper-runtime/5.5.23/jasper-runtime-5.5.23.jar:/home/tdurieux/.m2/repository/org/glassfish/external/management-api/3.0.0-b012/management-api-3.0.0-b012.jar:/home/tdurieux/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.8/jackson-mapper-asl-1.8.8.jar:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.3.4/zookeeper-3.3.4.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-api-support/1.5.5/powermock-api-support-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-tests/0.8-incubating-SNAPSHOT/flink-tests-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/hbase/hbase-protocol/0.98.6.1-hadoop2/hbase-protocol-0.98.6.1-hadoop2.jar:/home/tdurieux/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/tdurieux/.m2/repository/com/twitter/joauth/6.0.2/joauth-6.0.2.jar:/home/tdurieux/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-common/2.2.0/hadoop-yarn-common-2.2.0.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.3/commons-codec-1.3.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.1/commons-math-2.1.jar:/home/tdurieux/.m2/repository/commons-codec/commons-codec/1.4/commons-codec-1.4.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-io/8.0.0.M1/jetty-io-8.0.0.M1.jar:/home/tdurieux/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/home/tdurieux/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.1.1/jackson-databind-2.1.1.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpclient/4.2/httpclient-4.2.jar:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/com/jcraft/jsch/0.1.42/jsch-0.1.42.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http-server/2.1.2/grizzly-http-server-2.1.2.jar:/home/tdurieux/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-security/8.0.0.M1/jetty-security-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-hadoop-compatibility/0.8-incubating-SNAPSHOT/flink-hadoop-compatibility-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-module-junit4/1.5.5/powermock-module-junit4-1.5.5.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.2/httpcore-4.2.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-library/2.10.4/scala-library-2.10.4.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-avro/0.8-incubating-SNAPSHOT/flink-avro-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.1.1/jackson-annotations-2.1.1.jar:/home/tdurieux/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/home/tdurieux/.m2/repository/org/cloudera/htrace/htrace-core/2.04/htrace-core-2.04.jar:/home/tdurieux/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-server/1.9/jersey-server-1.9.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-shaded/0.8-incubating-SNAPSHOT/flink-shaded-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/tdurieux/.m2/repository/org/apache/kafka/kafka_2.10/0.8.0/kafka_2.10-0.8.0.jar:/home/tdurieux/.m2/repository/commons-daemon/commons-daemon/1.0.13/commons-daemon-1.0.13.jar:/home/tdurieux/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-core/1.9/jersey-core-1.9.jar:/home/tdurieux/.m2/repository/commons-io/commons-io/2.1/commons-io-2.1.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-framework/2.1.2/grizzly-framework-2.1.2.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:/home/tdurieux/.m2/repository/org/ow2/asm/asm/4.0/asm-4.0.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-test-framework/jersey-test-framework-core/1.9/jersey-test-framework-core-1.9.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-core/1.5.0/flume-ng-core-1.5.0.jar:/home/tdurieux/.m2/repository/commons-fileupload/commons-fileupload/1.3.1/commons-fileupload-1.3.1.jar:/home/tdurieux/.m2/repository/asm/asm/3.1/asm-3.1.jar:/home/tdurieux/.m2/repository/commons-el/commons-el/1.0/commons-el-1.0.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-clients/0.8-incubating-SNAPSHOT/flink-clients-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-runtime/0.8-incubating-SNAPSHOT/flink-runtime-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/google/inject/extensions/guice-servlet/3.0/guice-servlet-3.0.jar:/home/tdurieux/.m2/repository/com/esotericsoftware/minlog/minlog/1.2/minlog-1.2.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-pool2/2.0/commons-pool2-2.0.jar:/home/tdurieux/.m2/repository/org/tukaani/xz/1.0/xz-1.0.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/../lib/tools.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-streaming-core/0.8-incubating-SNAPSHOT/flink-streaming-core-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/org/apache/zookeeper/zookeeper/3.4.5/zookeeper-3.4.5.jar:/home/tdurieux/.m2/repository/org/xerial/snappy/snappy-java/1.0.5/snappy-java-1.0.5.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-compiler/0.8-incubating-SNAPSHOT/flink-compiler-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-grizzly2/1.9/jersey-grizzly2-1.9.jar:/home/tdurieux/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-core/1.5.5/powermock-core-1.5.5.jar:/home/tdurieux/.m2/repository/org/mortbay/jetty/servlet-api/3.0.20100224/servlet-api-3.0.20100224.jar:/home/tdurieux/.m2/repository/com/twitter/hbc-core/2.2.0/hbc-core-2.2.0.jar:/home/tdurieux/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/11.0.2/guava-11.0.2.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-util/8.0.0.M1/jetty-util-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/glassfish/gmbal/gmbal-api-only/3.0.0-b023/gmbal-api-only-3.0.0-b023.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-http/8.0.0.M1/jetty-http-8.0.0.M1.jar:/home/tdurieux/.m2/repository/org/apache/flume/flume-ng-sdk/1.5.0/flume-ng-sdk-1.5.0.jar:/home/tdurieux/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.3/jackson-jaxrs-1.8.3.jar:/home/tdurieux/.m2/repository/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-core/0.8-incubating-SNAPSHOT/flink-core-0.8-incubating-SNAPSHOT-tests.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-hbase/0.8-incubating-SNAPSHOT/flink-hbase-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-scala/0.8-incubating-SNAPSHOT/flink-scala-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/joda-time/joda-time/2.5/joda-time-2.5.jar:/home/tdurieux/.m2/repository/io/netty/netty/3.6.6.Final/netty-3.6.6.Final.jar:/home/tdurieux/.m2/repository/org/scalatest/scalatest_2.10/2.2.0/scalatest_2.10-2.2.0.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-test-framework/jersey-test-framework-grizzly2/1.9/jersey-test-framework-grizzly2-1.9.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/12.0.1/guava-12.0.1.jar:/home/tdurieux/.m2/repository/com/github/stephenc/findbugs/findbugs-annotations/1.3.9-1/findbugs-annotations-1.3.9-1.jar:/home/tdurieux/.m2/repository/com/amazonaws/aws-java-sdk/1.8.1/aws-java-sdk-1.8.1.jar:/home/tdurieux/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/home/tdurieux/.m2/repository/org/scala-lang/scala-library/2.10.1/scala-library-2.10.1.jar:/home/tdurieux/.m2/repository/org/fusesource/leveldbjni/leveldbjni-all/1.8/leveldbjni-all-1.8.jar:/home/tdurieux/.m2/repository/org/glassfish/grizzly/grizzly-http-servlet/2.1.2/grizzly-http-servlet-2.1.2.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-compress/1.4.1/commons-compress-1.4.1.jar:/home/tdurieux/.m2/repository/org/apache/flink/flink-test-utils/0.8-incubating-SNAPSHOT/flink-test-utils-0.8-incubating-SNAPSHOT.jar:/home/tdurieux/.m2/repository/com/101tec/zkclient/0.3/zkclient-0.3.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-core/2.2.0/hadoop-mapreduce-client-core-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-auth/2.2.0/hadoop-auth-2.2.0.jar:/home/tdurieux/.m2/repository/org/glassfish/javax.servlet/3.1/javax.servlet-3.1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-yarn-client/2.2.0/hadoop-yarn-client-2.2.0.jar:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/home/tdurieux/.m2/repository/net/java/dev/jets3t/jets3t/0.6.1/jets3t-0.6.1.jar:/home/tdurieux/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.1.1/jackson-core-2.1.1.jar:/home/tdurieux/.m2/repository/org/eclipse/jetty/jetty-servlet/8.0.0.M1/jetty-servlet-8.0.0.M1.jar:/home/tdurieux/.m2/repository/io/netty/netty/3.5.12.Final/netty-3.5.12.Final.jar:/home/tdurieux/.m2/repository/commons-net/commons-net/3.1/commons-net-3.1.jar:/home/tdurieux/.m2/repository/org/apache/hadoop/hadoop-annotations/2.2.0/hadoop-annotations-2.2.0.jar:/home/tdurieux/.m2/repository/org/apache/httpcomponents/httpcore/4.2.4/httpcore-4.2.4.jar:/home/tdurieux/.m2/repository/com/sun/jersey/jersey-client/1.9/jersey-client-1.9.jar:/home/tdurieux/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/tdurieux/.m2/repository/org/apache/derby/derby/10.10.1.1/derby-10.10.1.1.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/home/tdurieux/defects4j4repair/repair_tools/nopol.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar: fr.inria.lille.repair.MethodTestRunner org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testIncompatibleHashAndCustomPartitioning org.apache.flink.compiler.PartitionPushdownTest#testPartitioningNotPushedDown org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testIncompatibleHashAndCustomPartitioning 
19:55:44.268 [pool-2529-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - ClassPrepareEvent
19:55:44.273 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.compiler.costs.CostEstimator
19:55:44.274 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.compiler.dag.SingleInputNode
19:55:44.274 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.compiler.dag.OptimizerNode
19:55:44.274 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.compiler.dataproperties.InterestingProperties
19:55:44.275 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.compiler.operators.OperatorDescriptorSingle
19:55:44.275 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.compiler.dataproperties.RequestedGlobalProperties
19:55:44.276 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.compiler.dataproperties.PartitioningProperty
19:55:44.279 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.api.common.operators.util.FieldSet
19:55:44.281 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.Set
19:55:44.282 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.compiler.dataproperties.RequestedLocalProperties
19:55:44.283 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.flink.compiler.dag.PactConnection
19:55:44.391 [pool-2529-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:44.394 [pool-2529-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.CoGroupCustomPartitioningTest#testIncompatibleHashAndCustomPartitioning iteration 0
19:55:44.395 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] props=instance of org.apache.flink.compiler.dataproperties.InterestingProperties(id=821)
19:55:44.395 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] contained=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=822)
19:55:44.395 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:44.395 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.GroupReduceNode(id=814)
19:55:44.396 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] estimator
19:55:44.396 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props
19:55:44.396 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] dps
19:55:44.396 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp
19:55:44.397 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained
19:55:44.417 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.closedBranchingNodes
19:55:44.418 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.estimatedOutputSize
19:55:44.418 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.costWeight
19:55:44.424 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.remappedKeys
19:55:44.424 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:55:44.424 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hereJoinedBranches
19:55:44.424 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.onDynamicPath
19:55:44.424 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.inConn
19:55:44.424 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.estimatedNumRecords
19:55:44.424 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.uniqueFields
19:55:44.424 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_DYNAMIC_PATH_COST_WEIGHT
19:55:44.424 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.openBranches
19:55:44.424 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.id
19:55:44.424 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cachedPlans
19:55:44.465 [pool-2599-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(org.apache.flink.compiler.costs.CostEstimator) [instance of org.apache.flink.compiler.costs.DefaultCostEstimator(id=823)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.469 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPactContract()
19:55:44.473 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isCombineable()
19:55:44.474 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getName()
19:55:44.475 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleProperties()
19:55:44.476 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCombinerUtilityNode()
19:55:44.477 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPactContract()
19:55:44.477 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPactContract()
19:55:44.478 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIncomingConnection()
19:55:44.479 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPredecessorNode()
19:55:44.480 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIncomingConnections()
19:55:44.481 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getId()
19:55:44.482 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBroadcastConnectionNames()
19:55:44.483 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBroadcastConnections()
19:55:44.483 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getOutgoingConnections()
19:55:44.484 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getDegreeOfParallelism()
19:55:44.485 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getMinimalMemoryAcrossAllSubTasks()
19:55:44.486 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnDynamicPath()
19:55:44.487 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCostWeight()
19:55:44.488 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getMaxDepth()
19:55:44.488 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getInterestingProperties()
19:55:44.489 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getEstimatedOutputSize()
19:55:44.490 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getEstimatedNumRecords()
19:55:44.491 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getEstimatedAvgWidthPerOutputRecord()
19:55:44.492 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isBranching()
19:55:44.493 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.haveAllOutputConnectionInterestingProperties()
19:55:44.494 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getUniqueFields()
19:55:44.495 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasUnclosedBranches()
19:55:44.502 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.filterByCodeAnnotations((org.apache.flink.compiler.dag.OptimizerNode) this, (int) 0)
19:55:44.504 [pool-2629-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.InterestingProperties.filterByCodeAnnotations(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=814), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.505 [pool-2630-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.InterestingProperties.filterByCodeAnnotations(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=814), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.507 [pool-2631-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.InterestingProperties.filterByCodeAnnotations(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=814), 100]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.509 [pool-2632-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.InterestingProperties.filterByCodeAnnotations(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=814), 4]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.512 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) this)
19:55:44.514 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) estimator)
19:55:44.516 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) props)
19:55:44.518 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) dps)
19:55:44.520 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) gp)
19:55:44.522 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) contained)
19:55:44.524 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) this.remappedKeys)
19:55:44.526 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) this.keys)
19:55:44.528 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) this.inConn)
19:55:44.528 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.getLocalProperties()
19:55:44.530 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.getGlobalProperties()
19:55:44.542 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] dps.getStrategy()
19:55:44.543 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] dps.getPossibleGlobalProperties()
19:55:44.544 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] dps.getPossibleLocalProperties()
19:55:44.548 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.filterByNodesConstantSet((org.apache.flink.compiler.dag.OptimizerNode) this, (int) 0)
19:55:44.550 [pool-2648-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=814), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.552 [pool-2649-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=814), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.554 [pool-2650-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=814), 100]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.555 [pool-2651-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=814), 4]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.559 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) this)
19:55:44.561 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) estimator)
19:55:44.562 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) props)
19:55:44.564 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) dps)
19:55:44.566 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) gp)
19:55:44.568 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) contained)
19:55:44.570 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) this.remappedKeys)
19:55:44.572 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) this.keys)
19:55:44.574 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) this.inConn)
19:55:44.574 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.getPartitioning()
19:55:44.575 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.getPartitionedFields()
19:55:44.577 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.isTrivial()
19:55:44.581 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.filterByNodesConstantSet((org.apache.flink.compiler.dag.OptimizerNode) this, (int) 0)
19:55:44.583 [pool-2667-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=814), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.585 [pool-2668-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=814), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.586 [pool-2669-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=814), 100]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.588 [pool-2670-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=814), 4]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.591 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) this)
19:55:44.593 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) estimator)
19:55:44.595 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) props)
19:55:44.597 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) dps)
19:55:44.599 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) gp)
19:55:44.600 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) contained)
19:55:44.602 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) this.remappedKeys)
19:55:44.604 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) this.keys)
19:55:44.606 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) this.inConn)
19:55:44.607 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.getPartitioning()
19:55:44.607 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.getPartitionedFields()
19:55:44.609 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.isTrivial()
19:55:44.669 [pool-2529-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:44.671 [pool-2529-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.PartitionPushdownTest#testPartitioningNotPushedDown iteration 0
19:55:44.672 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] props=instance of org.apache.flink.compiler.dataproperties.InterestingProperties(id=1290)
19:55:44.672 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] contained=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1291)
19:55:44.672 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:44.672 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1284)
19:55:44.672 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] estimator
19:55:44.672 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props
19:55:44.673 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] dps
19:55:44.673 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp
19:55:44.673 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained
19:55:44.687 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.closedBranchingNodes
19:55:44.687 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.estimatedOutputSize
19:55:44.687 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.costWeight
19:55:44.687 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.remappedKeys
19:55:44.687 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:55:44.687 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hereJoinedBranches
19:55:44.687 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.onDynamicPath
19:55:44.687 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.inConn
19:55:44.687 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.estimatedNumRecords
19:55:44.688 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.uniqueFields
19:55:44.688 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_DYNAMIC_PATH_COST_WEIGHT
19:55:44.688 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.openBranches
19:55:44.688 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.id
19:55:44.688 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cachedPlans
19:55:44.696 [pool-2685-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(org.apache.flink.compiler.costs.CostEstimator) [instance of org.apache.flink.compiler.costs.DefaultCostEstimator(id=1292)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.699 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPactContract()
19:55:44.699 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isCombineable()
19:55:44.700 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getName()
19:55:44.701 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleProperties()
19:55:44.702 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCombinerUtilityNode()
19:55:44.703 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPactContract()
19:55:44.703 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPactContract()
19:55:44.704 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIncomingConnection()
19:55:44.705 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPredecessorNode()
19:55:44.706 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIncomingConnections()
19:55:44.707 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getId()
19:55:44.707 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBroadcastConnectionNames()
19:55:44.708 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBroadcastConnections()
19:55:44.709 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getOutgoingConnections()
19:55:44.710 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getDegreeOfParallelism()
19:55:44.711 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getMinimalMemoryAcrossAllSubTasks()
19:55:44.711 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnDynamicPath()
19:55:44.712 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCostWeight()
19:55:44.713 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getMaxDepth()
19:55:44.714 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getInterestingProperties()
19:55:44.715 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getEstimatedOutputSize()
19:55:44.715 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getEstimatedNumRecords()
19:55:44.716 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getEstimatedAvgWidthPerOutputRecord()
19:55:44.717 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isBranching()
19:55:44.718 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.haveAllOutputConnectionInterestingProperties()
19:55:44.719 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getUniqueFields()
19:55:44.719 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasUnclosedBranches()
19:55:44.725 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.filterByCodeAnnotations((org.apache.flink.compiler.dag.OptimizerNode) this, (int) 0)
19:55:44.727 [pool-2715-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.InterestingProperties.filterByCodeAnnotations(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1284), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.729 [pool-2716-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.InterestingProperties.filterByCodeAnnotations(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1284), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.731 [pool-2717-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.InterestingProperties.filterByCodeAnnotations(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1284), 100]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.732 [pool-2718-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.InterestingProperties.filterByCodeAnnotations(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1284), 2]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.735 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) this)
19:55:44.737 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) estimator)
19:55:44.739 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) props)
19:55:44.741 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) dps)
19:55:44.743 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) gp)
19:55:44.745 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) contained)
19:55:44.747 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) this.remappedKeys)
19:55:44.749 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) this.keys)
19:55:44.751 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) this.inConn)
19:55:44.752 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.getLocalProperties()
19:55:44.752 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.getGlobalProperties()
19:55:44.758 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] dps.getStrategy()
19:55:44.759 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] dps.getPossibleGlobalProperties()
19:55:44.759 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] dps.getPossibleLocalProperties()
19:55:44.763 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.filterByNodesConstantSet((org.apache.flink.compiler.dag.OptimizerNode) this, (int) 0)
19:55:44.765 [pool-2734-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1284), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.767 [pool-2735-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1284), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.769 [pool-2736-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1284), 100]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.770 [pool-2737-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1284), 2]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.774 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) this)
19:55:44.776 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) estimator)
19:55:44.778 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) props)
19:55:44.780 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) dps)
19:55:44.782 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) gp)
19:55:44.784 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) contained)
19:55:44.786 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) this.remappedKeys)
19:55:44.788 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) this.keys)
19:55:44.790 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) this.inConn)
19:55:44.790 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.getPartitioning()
19:55:44.791 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.getPartitionedFields()
19:55:44.793 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.isTrivial()
19:55:44.797 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.filterByNodesConstantSet((org.apache.flink.compiler.dag.OptimizerNode) this, (int) 0)
19:55:44.799 [pool-2753-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1284), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.801 [pool-2754-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1284), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.802 [pool-2755-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1284), 100]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.804 [pool-2756-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1284), 2]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.807 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) this)
19:55:44.809 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) estimator)
19:55:44.811 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) props)
19:55:44.813 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) dps)
19:55:44.815 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) gp)
19:55:44.817 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) contained)
19:55:44.819 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) this.remappedKeys)
19:55:44.821 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) this.keys)
19:55:44.823 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) this.inConn)
19:55:44.824 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.getPartitioning()
19:55:44.825 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.getPartitionedFields()
19:55:44.827 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.isTrivial()
19:55:44.860 [pool-2529-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
19:55:44.863 [pool-2529-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.flink.compiler.custompartition.JoinCustomPartitioningTest#testIncompatibleHashAndCustomPartitioning iteration 0
19:55:44.863 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] props=instance of org.apache.flink.compiler.dataproperties.InterestingProperties(id=1423)
19:55:44.863 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] contained=instance of org.apache.flink.compiler.dataproperties.RequestedGlobalProperties(id=1424)
19:55:44.864 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
19:55:44.864 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1416)
19:55:44.864 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] estimator
19:55:44.864 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props
19:55:44.864 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] dps
19:55:44.864 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp
19:55:44.864 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained
19:55:44.879 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.closedBranchingNodes
19:55:44.879 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.estimatedOutputSize
19:55:44.879 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.costWeight
19:55:44.879 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.remappedKeys
19:55:44.879 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.keys
19:55:44.879 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hereJoinedBranches
19:55:44.879 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.onDynamicPath
19:55:44.879 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.inConn
19:55:44.879 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.estimatedNumRecords
19:55:44.879 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.uniqueFields
19:55:44.879 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_DYNAMIC_PATH_COST_WEIGHT
19:55:44.879 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.openBranches
19:55:44.879 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.id
19:55:44.879 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cachedPlans
19:55:44.886 [pool-2771-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dag.SingleInputNode.getAlternativePlans(org.apache.flink.compiler.costs.CostEstimator) [instance of org.apache.flink.compiler.costs.DefaultCostEstimator(id=1425)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.889 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPactContract()
19:55:44.890 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isCombineable()
19:55:44.890 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getName()
19:55:44.891 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPossibleProperties()
19:55:44.892 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCombinerUtilityNode()
19:55:44.893 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPactContract()
19:55:44.894 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPactContract()
19:55:44.894 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIncomingConnection()
19:55:44.895 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getPredecessorNode()
19:55:44.896 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIncomingConnections()
19:55:44.897 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getId()
19:55:44.898 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBroadcastConnectionNames()
19:55:44.898 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBroadcastConnections()
19:55:44.899 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getOutgoingConnections()
19:55:44.900 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getDegreeOfParallelism()
19:55:44.901 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getMinimalMemoryAcrossAllSubTasks()
19:55:44.902 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnDynamicPath()
19:55:44.902 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCostWeight()
19:55:44.903 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getMaxDepth()
19:55:44.904 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getInterestingProperties()
19:55:44.905 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getEstimatedOutputSize()
19:55:44.906 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getEstimatedNumRecords()
19:55:44.906 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getEstimatedAvgWidthPerOutputRecord()
19:55:44.907 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isBranching()
19:55:44.908 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.haveAllOutputConnectionInterestingProperties()
19:55:44.909 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getUniqueFields()
19:55:44.910 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasUnclosedBranches()
19:55:44.916 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.filterByCodeAnnotations((org.apache.flink.compiler.dag.OptimizerNode) this, (int) 0)
19:55:44.917 [pool-2801-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.InterestingProperties.filterByCodeAnnotations(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1416), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.919 [pool-2802-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.InterestingProperties.filterByCodeAnnotations(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1416), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.921 [pool-2803-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.InterestingProperties.filterByCodeAnnotations(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1416), 100]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.923 [pool-2804-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.InterestingProperties.filterByCodeAnnotations(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1416), 4]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.926 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) this)
19:55:44.928 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) estimator)
19:55:44.930 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) props)
19:55:44.932 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) dps)
19:55:44.934 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) gp)
19:55:44.936 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) contained)
19:55:44.938 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) this.remappedKeys)
19:55:44.940 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) this.keys)
19:55:44.942 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.equals((java.lang.Object) this.inConn)
19:55:44.943 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.getLocalProperties()
19:55:44.943 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] props.getGlobalProperties()
19:55:44.948 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] dps.getStrategy()
19:55:44.949 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] dps.getPossibleGlobalProperties()
19:55:44.950 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] dps.getPossibleLocalProperties()
19:55:44.954 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.filterByNodesConstantSet((org.apache.flink.compiler.dag.OptimizerNode) this, (int) 0)
19:55:44.956 [pool-2820-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1416), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.958 [pool-2821-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1416), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.959 [pool-2822-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1416), 100]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.961 [pool-2823-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1416), 4]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.965 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) this)
19:55:44.967 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) estimator)
19:55:44.969 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) props)
19:55:44.971 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) dps)
19:55:44.973 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) gp)
19:55:44.975 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) contained)
19:55:44.977 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) this.remappedKeys)
19:55:44.979 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) this.keys)
19:55:44.981 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.equals((java.lang.Object) this.inConn)
19:55:44.982 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.getPartitioning()
19:55:44.983 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.getPartitionedFields()
19:55:44.985 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] gp.isTrivial()
19:55:44.989 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.filterByNodesConstantSet((org.apache.flink.compiler.dag.OptimizerNode) this, (int) 0)
19:55:44.991 [pool-2839-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1416), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.993 [pool-2840-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1416), 1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.995 [pool-2841-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1416), 100]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:44.996 [pool-2842-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.flink.compiler.dataproperties.RequestedGlobalProperties.filterByNodesConstantSet(org.apache.flink.compiler.dag.OptimizerNode, int) [instance of org.apache.flink.compiler.dag.GroupReduceNode(id=1416), 4]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
19:55:45.000 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) this)
19:55:45.002 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) estimator)
19:55:45.004 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) props)
19:55:45.006 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) dps)
19:55:45.008 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) gp)
19:55:45.010 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) contained)
19:55:45.012 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) this.remappedKeys)
19:55:45.015 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) this.keys)
19:55:45.017 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.equals((java.lang.Object) this.inConn)
19:55:45.017 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.getPartitioning()
19:55:45.018 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.getPartitionedFields()
19:55:45.020 [pool-2529-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] contained.isTrivial()
19:55:45.028 [pool-2529-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - Exit
19:55:45.032 [pool-2529-thread-1] DEBUG f.i.l.r.s.collect.DataCombiner - [combine] start on 89 elements
19:55:45.058 [pool-2529-thread-1] DEBUG f.i.l.r.s.collect.DataCombiner - [combine] end 130 evaluated elements


========= Info ==========
Nb constants             58
Nb method invocations    21
Nb field access          4
Nb variables             6
Total                    89
Nb evaluated expressions 36
Init Execution time      810 ms
Collect Execution time   649 ms
Combine Execution time   30.0 ms
Nb Combination par sec   1200 combinations/sec
Total Execution time     1489 ms
Nb line execution        3
Nb results               1

Results:
1. this.getMaxDepth() == 1


========================
         Stat
========================
Operators: 
EQ 1
AND 1
Methods: 
getPartitioning() 3
getPartitionedFields() 2
setInterestingProperties(org.apache.flink.compiler.dataproperties.InterestingProperties) 2
getGlobalProperties() 2
getBroadcastConnections() 1
getPossibleProperties() 1
isValidSubset(org.apache.flink.api.common.operators.util.FieldSet) 1
getPossibleGlobalProperties() 1
remove(java.lang.Object) 1
addGlobalProperties(org.apache.flink.compiler.dataproperties.RequestedGlobalProperties) 1
filterByCodeAnnotations(org.apache.flink.compiler.dag.OptimizerNode,int) 1
isPartitionedOnKey() 1
getPossibleLocalProperties() 1
getInterestingProperties() 1
addLocalProperties(org.apache.flink.compiler.dataproperties.RequestedLocalProperties) 1
Variable: 
props 5
gp 4
contained 3
dps 2
inConn 2
conn 1
lp 1

 & 58 & 21 & 4 & 6 & 89 & 36 & 1489 ms & 3 &
19:55:45.058 [pool-2529-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: org.apache.flink.compiler.dag.SingleInputNode:229: PRECONDITION this.getMaxDepth() == 1
19:55:45.468 [pool-2529-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "this.getMaxDepth() == 1" is working
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/tdurieux/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
19:55:46.212 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
19:55:46.253 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 119
19:55:46.253 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 940
19:55:46.253 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 116
19:55:46.253 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 4
19:55:46.253 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 174546ms
19:55:46.253 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
19:55:46.253 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----PATCH FOUND----
19:55:46.253 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - this.getMaxDepth() == 1
19:55:46.302 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb test that executes the patch: 33
19:55:46.302 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - org.apache.flink.compiler.dag.SingleInputNode:229: PRECONDITION
19:55:46.327 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - --- a/flink-compiler/src/main/java/org/apache/flink/compiler/dag/SingleInputNode.java
+++ b/flink-compiler/src/main/java/org/apache/flink/compiler/dag/SingleInputNode.java
@@ -228,3 +228,5 @@
 						if (contained.getPartitioning() == gp.getPartitioning() && gp.getPartitionedFields().isValidSubset(contained.getPartitionedFields())) {
-							props.getGlobalProperties().remove(contained);
+							if (this.getMaxDepth() == 1) {
+								props.getGlobalProperties().remove(contained);
+							}
 							break;

PATCH
311.79user 37.37system 2:57.39elapsed 196%CPU (0avgtext+0avgdata 3158432maxresident)k
52448inputs+13904outputs (24major+1156613minor)pagefaults 0swaps


Node: petitprince-4.luxembourg.grid5000.fr



Date: Sun Dec 30 19:55:46 EST 2018

