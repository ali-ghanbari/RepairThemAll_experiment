{"general":{"NR_RIGHT_COMPILATIONS":211,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"rkonovalov-jsonignore-442009574-442015798","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":56,"NR_GENERATIONS":267,"TOTAL_TIME":123.481,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"534","VALIDATION":"|true|0|9|[]|","patchhunks":[{"LOCATION":"com.json.ignore.JsonIgnoreFields","PATH":"\\\/tmp\\\/jGenProg_Bears_rkonovalov-jsonignore_442009574-442015798\\\/output_astor\\\/AstorMain-rkonovalov-jsonignore-442009574-442015798\\\/src\\\/default\\\/com\\\/json\\\/ignore\\\/JsonIgnoreFields.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"0.632","INGREDIENT_PARENT":"return false","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"return ((field.getType().isPrimitive()) || (field.getType().isArray())) || (com.json.ignore.JsonIgnoreFields.ignoredNames.contains(field.getName()))","BUGGY_CODE_TYPE":"CtReturnImpl|CtBlockImpl","OPERATOR":"ReplaceOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_Bears_rkonovalov-jsonignore_442009574-442015798\\\/.\\\/output_astor\\\/AstorMain-rkonovalov-jsonignore-442009574-442015798\\\/\\\/src\\\/\\\/variant-534_f\\\/com\\\/json\\\/ignore\\\/JsonIgnoreFields.java","LINE":"133","MP_RANKING":"15","PATCH_HUNK_CODE":"return false"}],"TIME":"123","GENERATION":"267","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_Bears_rkonovalov-jsonignore_442009574-442015798\\\/.\\\/output_astor\\\/AstorMain-rkonovalov-jsonignore-442009574-442015798\\\/\\\/bin\\\/\\\/variant-534","PATCH_DIFF_ORIG":"\\\/var\\\/lib\\\/oar\\\/.batch_job_bashrc: line 5: \\\/home\\\/tdurieux\\\/.bashrc: No such file or directory\\n--- com\\\/json\\\/ignore\\\/JsonIgnoreFields.java\\n+++ com\\\/json\\\/ignore\\\/JsonIgnoreFields.java\\n@@ -129,8 +129,8 @@\\n \\n \\t}\\n \\n-\\tprivate boolean fieldAcceptable(java.lang.reflect.Field field) {\\n-\\t\\treturn ((field.getType().isPrimitive()) || (field.getType().isArray())) || (com.json.ignore.JsonIgnoreFields.ignoredNames.contains(field.getName()));\\n+\\tprivate boolean fieldAcceptable(java.lang.reflect.Field field) { \\t\\treturn false;\\n+\\n \\t}\\n \\n \\tpublic void ignoreFields(java.lang.Object object) throws java.lang.IllegalAccessException {\\n\\n"}]}