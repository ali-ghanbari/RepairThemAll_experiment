{"executions":[{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871986174,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,218 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                            }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871986056},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871986296,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,216 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                      = year;\n+                                                            }\n+                                                             }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871986239},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871986366,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,218 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                            }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871986312},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871986431,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,216 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                      = new Integer(0);\n+                                                            }\n+                                                             }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871986380},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at edu.harvard.h2ms.service.utils.H2msRestUtils.formatMonth(H2msRestUtils.java:213)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871986493,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,215 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      != null) {\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                            }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871986445},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:101)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871986558,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,216 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                return null;\n+                                                            }\n+                                                             }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871986507},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871986620,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,216 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                return new String();\n+                                                            }\n+                                                             }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871986571},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871986741,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,209 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                      = year;\n+                                                            }\n+                                                             }\n+                                            }\n+                                        }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871986694},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871986802,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,218 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                            }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871986754},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871986861,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,216 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                      = year;\n+                                                            }\n+                                                             }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871986814},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871986919,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,218 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                            }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871986873},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871986976,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,216 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                      = new Integer(0);\n+                                                            }\n+                                                             }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871986931},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at edu.harvard.h2ms.service.utils.H2msRestUtils.formatMonth(H2msRestUtils.java:213)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871987033,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,215 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      != null) {\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                            }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871986988},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:101)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871987092,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,216 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                return null;\n+                                                            }\n+                                                             }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871987045},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871987156,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,216 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                return new String();\n+                                                            }\n+                                                             }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871987104},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871987269,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,209 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                      = new Integer(0);\n+                                                            }\n+                                                             }\n+                                            }\n+                                        }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871987224},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at edu.harvard.h2ms.service.utils.H2msRestUtils.formatMonth(H2msRestUtils.java:217)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871987324,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,208 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      != null) {\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                                            }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871987280},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:101)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871987383,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,209 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                return null;\n+                                                            }\n+                                                             }\n+                                            }\n+                                        }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871987336},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871987440,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,209 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                return new String();\n+                                                            }\n+                                                             }\n+                                            }\n+                                        }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871987395},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871987555,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,200 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                      = year;\n+                                                            }\n+                                                                           }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871987509},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871987612,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,218 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                            }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871987566},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871987667,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,216 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                      = year;\n+                                                            }\n+                                                             }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871987623},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871987724,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,218 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                            }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871987678},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871987780,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,216 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                      = new Integer(0);\n+                                                            }\n+                                                             }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871987735},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at edu.harvard.h2ms.service.utils.H2msRestUtils.formatMonth(H2msRestUtils.java:213)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871987834,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,215 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      != null) {\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                            }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871987791},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:101)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871987890,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,216 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                return null;\n+                                                            }\n+                                                             }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871987845},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871987946,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,216 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                return new String();\n+                                                            }\n+                                                             }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871987902},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871988057,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,209 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                      = year;\n+                                                            }\n+                                                             }\n+                                            }\n+                                        }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871988012},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871988119,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,218 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                            }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871988070},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871988173,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,216 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                      = year;\n+                                                            }\n+                                                             }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871988130},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871988233,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,218 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                            }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871988185},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): [Assertion failed] - this expression must be true\nclass java.lang.IllegalArgumentException: [Assertion failed] - this expression must be true\n    at org.springframework.util.Assert.isTrue(Assert.java:92)\n    at org.springframework.util.Assert.isTrue(Assert.java:101)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871988296,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,216 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                      = new Integer(0);\n+                                                            }\n+                                                             }\n+                                                            }\n+                                                        }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871988247},{"result":{"success":false,"error":"test_format_month_invalid_values_result_in_null(edu.harvard.h2ms.web.init.H2msRestUtilsTest): null\nclass fr.inria.spirals.npefix.resi.exception.AbnormalExecutionError: null\n    at edu.harvard.h2ms.service.utils.H2msRestUtils.formatMonth(H2msRestUtils.java:213)\n    at edu.harvard.h2ms.web.init.H2msRestUtilsTest.test_format_month_invalid_values_result_in_null(H2msRestUtilsTest.java:100)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"test_format_month_invalid_values_result_in_null","class":"edu.harvard.h2ms.web.init.H2msRestUtilsTest"},"endDate":1543871988362,"decisions":[{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":14,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":5,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -51,29 +51,215 @@\n     public static String formatMonth(Integer month, Integer year){\n-        if(month.equals(0)){\n-            return \"January \" + \"(\" + year + \")\";\n-        } else if(month.equals(1)){\n-            return \"February \" + \"(\" + year + \")\";\n-        } else if(month.equals(2)){\n-            return \"March \" + \"(\" + year + \")\";\n-        } else if(month.equals(3)){\n-            return \"April \" + \"(\" + year + \")\";\n-        } else if(month.equals(4)){\n-            return \"May \" + \"(\" + year + \")\";\n-        } else if(month.equals(5)){\n-            return \"June \" + \"(\" + year + \")\";\n-        } else if(month.equals(6)){\n-            return \"July \" + \"(\" + year + \")\";\n-        } else if(month.equals(7)){\n-            return \"August \" + \"(\" + year + \")\";\n-        } else if(month.equals(8)){\n-            return \"September \" + \"(\" + year + \")\";\n-        } else if(month.equals(9)){\n-            return \"October \" + \"(\" + year + \")\";\n-        } else if(month.equals(10)){\n-            return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n-            return \"December \" + \"(\" + year + \")\";\n+        if (month == null) {\n+            if( year.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                return \"February \" + \"(\" + year + \")\";\n+            } else if(month.equals(2)){\n+                return \"March \" + \"(\" + year + \")\";\n+            } else if(month.equals(3)){\n+                return \"April \" + \"(\" + year + \")\";\n+            } else if(month.equals(4)){\n+                return \"May \" + \"(\" + year + \")\";\n+            } else if(month.equals(5)){\n+                return \"June \" + \"(\" + year + \")\";\n+            } else if(month.equals(6)){\n+                return \"July \" + \"(\" + year + \")\";\n+            } else if(month.equals(7)){\n+                return \"August \" + \"(\" + year + \")\";\n+            } else if(month.equals(8)){\n+                return \"September \" + \"(\" + year + \")\";\n+            } else if(month.equals(9)){\n+                return \"October \" + \"(\" + year + \")\";\n+            } else if(month.equals(10)){\n+                return \"November \" + \"(\" + year + \")\";\n+            } else if(month.equals(11)){\n+                return \"December \" + \"(\" + year + \")\";\n+            } else {\n+                return \"\";\n+            }\n         } else {\n-            return \"\";\n-        }\n+            if(month.equals(0)){\n+                return \"January \" + \"(\" + year + \")\";\n+            } else if(month.equals(1)){\n+                } else {\n+                    if (s(2)) == null) {\n+                        ual year{\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            return \"April \" + \"(\" + year + \")\";\n+                        } else if(month.equals(4)){\n+                            return \"May \" + \"(\" + year + \")\";\n+                        } else if(month.equals(5)){\n+                            return \"June \" + \"(\" + year + \")\";\n+                        } else if(month.equals(6)){\n+                            return \"July \" + \"(\" + year + \")\";\n+                        } else if(month.equals(7)){\n+                            return \"August \" + \"(\" + year + \")\";\n+                        } else if(month.equals(8)){\n+                            return \"September \" + \"(\" + year + \")\";\n+                        } else if(month.equals(9)){\n+                            return \"October \" + \"(\" + year + \")\";\n+                        } else if(month.equals(10)){\n+                            return \"November \" + \"(\" + year + \")\";\n+                        } else if(month.equals(11)){\n+                            return \"December \" + \"(\" + year + \")\";\n+                        } else {\n+                            return \"\";\n+                        }\n+                    }\n+                    } else {\n+                        uals(2)){\n+                            return \"March \" + \"(\" + year + \")\";\n+                        } else if(month.equals(3)){\n+                            } else {\n+                                if ( year == null) {\n+                                    \" + year+ \")\";\n+                                } else if(month.equals(6)){\n+                                    return \"July \" + \"(\" + year + \")\";\n+                                } else if(month.equals(7)){\n+                                    return \"August \" + \"(\" + year + \")\";\n+                                } else if(month.equals(8)){\n+                                    return \"September \" + \"(\" + year + \")\";\n+                                } else if(month.equals(9)){\n+                                    return \"October \" + \"(\" + year + \")\";\n+                                } else if(month.equals(10)){\n+                                    return \"November \" + \"(\" + year + \")\";\n+                                } else if(month.equals(11)){\n+                                    return \"December \" + \"(\" + year + \")\";\n+                                } else {\n+                                    return \"\";\n+                                }\n+                            }\n+                        }\n+                    }\n+                                } else {\n+                                    } else {\n+                                        if (      == null) {\n+                                            } e yearf(month.equals(8)){\n+                                                return \"September \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(9)){\n+                                                return \"October \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(10)){\n+                                                return \"November \" + \"(\" + year + \")\";\n+                                            } else if(month.equals(11)){\n+                                                return \"December \" + \"(\" + year + \")\";\n+                                            } else {\n+                                                return \"\";\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                                        } else {\n+                                            if (      == null) {\n+                                                } e yearf(month.equals(10)){\n+                                                    return \"November \" + \"(\" + year + \")\";\n+                                                } else if(month.equals(11)){\n+                                                    return \"December \" + \"(\" + year + \")\";\n+                                                } else {\n+                                                    return \"\";\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                                            } else {\n+                                                if (      == null) {\n+                                                    } e yearf(month.equals(11)){\n+                                                        return \"December \" + \"(\" + year + \")\";\n+                                                    } else {\n+                                                        return \"\";\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                } else {\n+                                                    } else if(month.equals(11)){\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } e yearreturn \"\";\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+                                                            } else {\n+                                                                } else {\n+                                                                    return \"\";\n+                                                                }\n+                                                            } else {\n+                                                                if (   }\n+ == null) {\n+                                                                    } year}\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                                                                } else {\n+                                                                    }\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } year}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                }\n+                                            }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      == null) {\n+                                                                } new Integer(0)}\n+                                                            }\n+                                                        }\n+                                                    }\n+                                                            } else {\n+                                                                }\n+                                                            }\n+                                                        } else {\n+                                                            if (      != null) {\n+                                                                }\n+                                                            }\n+                                                        }\n+                                                            }\n+                                                        }\n \n","locations":[{"sourceEnd":2714,"line":68,"executionCount":0,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2040,"line":52,"executionCount":0,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2629,"line":66,"executionCount":0,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2546,"line":64,"executionCount":0,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2463,"line":62,"executionCount":0,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2381,"line":60,"executionCount":0,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2297,"line":58,"executionCount":0,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2976,"line":74,"executionCount":0,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2213,"line":56,"executionCount":0,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2888,"line":72,"executionCount":0,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2802,"line":70,"executionCount":0,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},{"sourceEnd":2126,"line":54,"executionCount":0,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"}],"startDate":1543871988310}],"endInit":1543871985695,"start":1543871986053,"end":1543871988375,"searchSpace":[{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2714,"line":68,"sourceStart":2710,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":21,"decisionType":"NEW","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2126,"line":54,"sourceStart":2122,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":7,"decisionType":"NEW","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2976,"line":74,"sourceStart":2972,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2546,"line":64,"sourceStart":2542,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2213,"line":56,"sourceStart":2209,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2297,"line":58,"sourceStart":2293,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2629,"line":66,"sourceStart":2625,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat1B","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":37,"decisionType":"NEW","location":{"sourceEnd":2463,"line":62,"sourceStart":2459,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":true,"strategy":"Strat1A","value":{"variableName":"year","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2802,"line":70,"sourceStart":2798,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2888,"line":72,"sourceStart":2884,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2A","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2040,"line":52,"sourceStart":2036,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat2B","value":{"parameterTypes":["int"],"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","class":"class java.lang.Integer","value":0}]}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2381,"line":60,"sourceStart":2377,"class":"edu.harvard.h2ms.service.utils.H2msRestUtils"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}]}