{"general":{"NR_RIGHT_COMPILATIONS":10,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"traccar-traccar-198464113-198488474","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":null,"NR_GENERATIONS":null,"TOTAL_TIME":14.881,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"11","VALIDATION":"|true|0|228|[]|","patchhunks":[{"LOCATION":"org.traccar.protocol.Gl200ProtocolDecoder","PATH":"\\\/tmp\\\/jKali_Bears_traccar-traccar_198464113-198488474\\\/output_astor\\\/AstorMain-traccar-traccar-198464113-198488474\\\/src\\\/default\\\/org\\\/traccar\\\/protocol\\\/Gl200ProtocolDecoder.java","ORIGINAL_CODE":"for (int i = 0; i < count; i++) {\\n\\tjava.lang.String mac = parser.next().replaceAll(\\\"(..)\\\", \\\"$1:\\\");\\n\\tnetwork.addWifiAccessPoint(org.traccar.model.WifiAccessPoint.from(mac.substring(0, ((mac.length()) - 1)), parser.nextInt()));\\n}","BUGGY_CODE_TYPE":"CtForImpl|CtBlockImpl","OPERATOR":"RemoveOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jKali_Bears_traccar-traccar_198464113-198488474\\\/.\\\/output_astor\\\/AstorMain-traccar-traccar-198464113-198488474\\\/\\\/src\\\/\\\/variant-11_f\\\/org\\\/traccar\\\/protocol\\\/Gl200ProtocolDecoder.java","LINE":"624","SUSPICIOUNESS":"1","MP_RANKING":"10"}],"TIME":"11","GENERATION":"1","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jKali_Bears_traccar-traccar_198464113-198488474\\\/.\\\/output_astor\\\/AstorMain-traccar-traccar-198464113-198488474\\\/\\\/bin\\\/\\\/variant-11","PATCH_DIFF_ORIG":"\\\/var\\\/lib\\\/oar\\\/.batch_job_bashrc: line 5: \\\/home\\\/tdurieux\\\/.bashrc: No such file or directory\\n--- org\\\/traccar\\\/protocol\\\/Gl200ProtocolDecoder.java\\n+++ org\\\/traccar\\\/protocol\\\/Gl200ProtocolDecoder.java\\n@@ -621,10 +621,10 @@\\n \\t\\torg.traccar.model.Network network = new org.traccar.model.Network();\\n \\n \\t\\tint count = parser.nextInt();\\n-\\t\\tfor (int i = 0; i < count; i++) {\\n-\\t\\t\\tjava.lang.String mac = parser.next().replaceAll(\\\"(..)\\\", \\\"$1:\\\");\\n-\\t\\t\\tnetwork.addWifiAccessPoint(org.traccar.model.WifiAccessPoint.from(mac.substring(0, ((mac.length()) - 1)), parser.nextInt()));\\n-\\t\\t}\\n+\\n+\\n+\\n+\\n \\n \\t\\treturn position;\\n \\t}\\n\\n"}]}