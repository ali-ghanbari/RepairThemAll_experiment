{
  "repair_end": "2018-12-26 19:50:06.287490", 
  "repair_begin": "2018-12-26 19:03:47.114214", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_484/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:12:57.836848926 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1433/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:00.965565331 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1433/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:28:00.965565331 -0500\n@@ -41,7 +41,9 @@\n \n     public PatternBuilder text(String s) {\n         fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n-        return this;\n+        s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\")\n+\t\t\t\t.replace(\"dd\", \"d{2}\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder number(String s) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 44, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"dddd\",\"d{4}\").replace(\"ddd\",\"d{3}\").replace(\"dd\",\"d{2}\");"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_325/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:23.140066592 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_951/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:23.527269416 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_409/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:37.580439528 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1655/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:27.406625069 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_624/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:13.249729930 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1525/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:26.466000188 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1525/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:29:26.466000188 -0500\n@@ -40,7 +40,9 @@\n     }\n \n     public PatternBuilder text(String s) {\n-        fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n+        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\")\n+\t\t\t\t.replace(\"xx\", \"x{2}\");\n+\t\tfragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n         return this;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 43, 
          "faulty": "fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\",\"\\\\\\\\$1\"));", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_501/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:13:14.892936713 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2233/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:46.537742135 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1387/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:16.805343813 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2273/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:20.733929949 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_364/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:57.524237907 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_812/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:06.566639553 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_134/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:06:55.953603705 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_337/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:33.120116135 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1765/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:15.535204743 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_571/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:24.905411885 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2154/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:39:35.473349822 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2007/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:05.952511875 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2337/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:42:20.702258088 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2337/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:42:20.702258088 -0500\n@@ -41,7 +41,9 @@\n \n     public PatternBuilder text(String s) {\n         fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n-        return this;\n+        s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\")\n+\t\t\t\t.replace(\"dd\", \"d{2}\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder number(String s) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 44, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"dddd\",\"d{4}\").replace(\"ddd\",\"d{3}\").replace(\"dd\",\"d{2}\");"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1287/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:40.100867863 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2725/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:55.336395488 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_450/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:12:21.936664994 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1553/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:53.530139173 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_159/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:07:25.190262573 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_159/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:07:25.190262573 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_380/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:11.828309669 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1065/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:08.287782830 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_330/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:27.440087919 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2022/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:20.248592946 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2022/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:37:20.248592946 -0500\n@@ -46,8 +46,6 @@\n \n     public PatternBuilder number(String s) {\n         s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\").replace(\"dd\", \"d{2}\");\n-        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\").replace(\"xx\", \"x{2}\");\n-\n         s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 49, 
          "faulty": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");", 
          "type": "Delete", 
          "seed": "s=s.replace(\"d\",\"\\\\d\").replace(\"x\",\"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\",\"\\\\\\\\$1\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_659/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:44.409929898 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1789/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:39.583337472 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1381/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:11.121315482 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1381/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:27:11.125315502 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1070/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:12.539804082 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_322/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:20.272052384 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_840/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:32.106752353 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2295/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:42.082046928 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1707/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:18.698892550 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1440/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:06.633593932 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2192/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:12.409554099 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2192/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:40:12.409554099 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2769/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:35.248610537 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1263/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:17.328749185 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2084/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:22.856945397 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1072/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:13.955811166 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_524/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:13:37.845091525 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_524/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:13:37.849091552 -0500\n@@ -52,7 +52,9 @@\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n         fragments.add(s);\n-        return this;\n+        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\")\n+\t\t\t\t.replace(\"xx\", \"x{2}\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder any() {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 55, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2614/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:09.931826930 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1678/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:47.274728534 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1786/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:36.715321662 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2198/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:16.717577870 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2198/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:40:16.717577870 -0500\n@@ -41,7 +41,9 @@\n \n     public PatternBuilder text(String s) {\n         fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n-        return this;\n+        s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\")\n+\t\t\t\t.replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder number(String s) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 44, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"d\",\"\\\\d\").replace(\"x\",\"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\",\"\\\\\\\\$1\");"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1522/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:23.609985555 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_962/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:34.763323416 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1597/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:34.670351446 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1002/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:08.867489008 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_370/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:11:03.220266451 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_370/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:03.224266471 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2512/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:45:22.939248491 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1770/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:21.211236104 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2177/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:39:56.781467772 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2246/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:57.921804721 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_343/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:38.904144917 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_258/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:16.507740169 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_604/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:56.253619268 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1394/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:22.465372069 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_750/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:11.258404640 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1775/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:25.483259695 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1052/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:55.507719122 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2620/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:14.187849909 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 95, 
          "faulty": "return builder.toString();", 
          "type": "Replace", 
          "seed": "return builder.toString();"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2625/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:47:18.463872993 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2625/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:18.467873014 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2424/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:50.186745446 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2424/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:43:50.190745468 -0500\n@@ -46,8 +46,6 @@\n \n     public PatternBuilder number(String s) {\n         s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\").replace(\"dd\", \"d{2}\");\n-        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\").replace(\"xx\", \"x{2}\");\n-\n         s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 49, 
          "faulty": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");", 
          "type": "Delete", 
          "seed": "fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\",\"\\\\\\\\$1\"));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_281/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:38.955849233 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1222/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:37.608543126 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2264/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:12.201883140 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1348/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:26:42.685174434 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1348/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:42.689174454 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1348/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:26:42.689174454 -0500\n@@ -40,7 +40,9 @@\n     }\n \n     public PatternBuilder text(String s) {\n-        fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n+        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\")\n+\t\t\t\t.replace(\"xx\", \"x{2}\");\n+\t\tfragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n         return this;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 43, 
          "faulty": "fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\",\"\\\\\\\\$1\"));", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1580/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:19.058270759 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1031/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:38.487634698 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1162/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:40.716250432 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2766/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:32.420595303 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_466/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:12:39.100752784 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_466/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:12:39.100752784 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1653/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:31:25.954617515 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1653/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:25.958617535 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2279/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:26.433961201 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1044/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:48.407683845 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2384/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:11.758536444 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2226/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:40.809710619 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1952/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:10.512195012 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_17/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:04:26.904523842 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_309/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:07.311988344 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1421/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:50.929514780 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1848/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:32.235626862 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1722/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:31.390960037 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_114/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:06:31.232528883 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_114/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:06:31.236528905 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1337/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:31.253118072 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1074/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:15.367818232 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1531/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:32.198029577 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1212/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:27.720492034 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1745/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:32:54.175086519 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1745/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:54.179086540 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1613/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:50.318432473 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1896/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:20.683906296 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_959/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:31.899309624 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2160/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:39:41.161381337 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1266/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:20.152763882 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2240/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:52.261773612 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1956/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:14.772219511 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2749/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:18.120518264 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2517/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:45:27.187271490 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_548/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:03.689268892 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1906/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:30.663964459 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_626/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:15:14.673739149 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_626/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:14.673739149 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1638/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:10.314536218 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2589/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:46:44.259688280 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1520/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:22.189978281 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_359/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:51.828209408 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_975/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:44.767371734 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2010/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:08.840528272 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_713/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:32.826233986 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2060/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:58.704809899 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2754/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:22.376541194 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1712/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:22.954914795 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2791/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:55.152717742 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1431/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:59.533558111 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1797/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:33:48.127384541 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1797/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:48.127384541 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_528/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:13:42.141121265 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1806/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:56.675431587 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1806/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:33:56.679431609 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2798/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:50:00.912748761 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n@@ -211,7 +210,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2798/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:50:00.916748783 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_429/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:59.072548508 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1875/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:59.299781049 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1602/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:38.962373656 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_307/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:10:05.867981226 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_307/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:05.871981245 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2157/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:39:38.297365471 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1121/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:02.344054964 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_763/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:21.082445341 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2112/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:38:51.229103903 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2112/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:51.229103903 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_787/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:43.838541370 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_787/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:17:43.838541370 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1850/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:33.667634711 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1608/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:44.622402961 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1747/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:55.607094455 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2253/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:03.613835990 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1534/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:35.038044147 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1534/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:29:35.042044168 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1201/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:17.724440474 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_145/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:07:08.581945386 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2442/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:44:10.334854877 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2442/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:44:10.338854899 -0500\n@@ -52,7 +52,9 @@\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n         fragments.add(s);\n-        return this;\n+        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\")\n+\t\t\t\t.replace(\"xx\", \"x{2}\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder any() {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 55, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_394/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:24.672374334 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_394/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:11:24.672374334 -0500\n@@ -40,7 +40,9 @@\n     }\n \n     public PatternBuilder text(String s) {\n-        fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n+        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\")\n+\t\t\t\t.replace(\"xx\", \"x{2}\");\n+\t\tfragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n         return this;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 43, 
          "faulty": "fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\",\"\\\\\\\\$1\"));", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2026/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:24.568617398 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2052/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:37:48.724753745 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2052/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:48.724753745 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2052/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:37:48.728753768 -0500\n@@ -46,7 +46,8 @@\n \n     public PatternBuilder number(String s) {\n         s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\").replace(\"dd\", \"d{2}\");\n-        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\").replace(\"xx\", \"x{2}\");\n+        s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\")\n+\t\t\t\t.replace(\"dd\", \"d{2}\");\n \n         s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 49, 
          "faulty": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");", 
          "type": "Replace", 
          "seed": "s=s.replace(\"dddd\",\"d{4}\").replace(\"ddd\",\"d{3}\").replace(\"dd\",\"d{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1488/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:50.885818382 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2672/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:06.936134542 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_374/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:06.052280659 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_302/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:00.171953183 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1460/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:23.705680286 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_779/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:36.750511206 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2414/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:41.558698554 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2490/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:45:01.603132928 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1259/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:13.088727129 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1917/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:40.604022215 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2508/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:45:18.723225662 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_709/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:28.450206801 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_709/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:16:28.450206801 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_519/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:13:32.153051957 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_350/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:44.648173549 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_838/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:30.694746052 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_722/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:41.354283792 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_352/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:46.092180756 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_689/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:09.882090813 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_980/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:48.927391891 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_217/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:08:34.183470066 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2181/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:01.029491250 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2181/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:40:01.033491273 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_403/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:31.788410250 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2664/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:58.356088262 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2630/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:47:22.719895967 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2630/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:22.719895967 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1479/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:42.409775240 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2412/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:40.138690836 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1962/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:20.476252272 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1763/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:14.119196915 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_504/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:13:17.760951497 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2686/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:19.780203809 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_211/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:08:27.187393295 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_531/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:13:44.997140978 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_384/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:14.696324090 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_628/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:16.089748308 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1973/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:31.860317520 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2746/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:15.276502941 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2393/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:18.878575199 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2460/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:44:30.282963130 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1078/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:18.283832836 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1205/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:20.568455134 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1205/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:24:20.568455134 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_378/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:10.388302434 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_858/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:49.106828765 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_910/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:40.579065864 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_804/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:17:56.646596434 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_804/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:56.646596434 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_573/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:26.337421455 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2592/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:46:47.099703621 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2268/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:15.069898879 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_482/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:12:56.412841608 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1456/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:20.861665879 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1224/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:39.020550428 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_543/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:13:59.421239854 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2196/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:15.301570058 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2378/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:06.054505387 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2777/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:42.416649148 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1739/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:49.891062766 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_332/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:28.864094988 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_387/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:17.556338481 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1355/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:48.349202434 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2718/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:49.752365392 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2208/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:23.821617047 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1037/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:42.743655763 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_148/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:07:11.462009522 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_640/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:27.525821996 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1510/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:12.221927273 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1238/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:51.852616873 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_585/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:37.673496886 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2711/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:42.580326733 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1950/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:09.076186748 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1086/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:26.771875416 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1827/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:13.755525466 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_435/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:12:06.184584683 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_435/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:12:06.184584683 -0500\n@@ -36,7 +36,9 @@\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\"); // special case for delimiter\n \n         fragments.add(s);\n-        return this;\n+        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\")\n+\t\t\t\t.replace(\"xx\", \"x{2}\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder text(String s) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 39, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1491/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:53.749832975 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_987/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:54.615419511 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1277/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:30.120815806 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_945/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:17.755241791 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1737/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:48.471054891 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2692/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:24.076226974 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2305/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:50.674093956 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_356/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:48.928194917 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2557/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:46:14.015524829 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_511/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:13:23.568991924 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2468/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:44:38.851009600 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2468/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:44:38.851009600 -0500\n@@ -46,8 +46,6 @@\n \n     public PatternBuilder number(String s) {\n         s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\").replace(\"dd\", \"d{2}\");\n-        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\").replace(\"xx\", \"x{2}\");\n-\n         s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 49, 
          "faulty": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");", 
          "type": "Delete", 
          "seed": "fragments.add(\"|\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1033/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:39.915641762 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1505/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:07.977905581 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1505/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:29:07.977905581 -0500\n@@ -36,7 +36,9 @@\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\"); // special case for delimiter\n \n         fragments.add(s);\n-        return this;\n+        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\")\n+\t\t\t\t.replace(\"xx\", \"x{2}\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder text(String s) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 39, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2708/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:39.756311510 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2063/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:38:01.448825322 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2063/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:01.452825344 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_418/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:46.188483114 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2407/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:35.882667696 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_998/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:05.955474775 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_921/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:52.163120296 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1573/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:11.958234117 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2562/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:46:18.295547968 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2562/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:46:18.299547988 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1131/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:12.312105573 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2418/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:45.874722014 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1304/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:57.128951119 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1271/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:24.444786230 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1937/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:57.688121094 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1318/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:11.301020213 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1935/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:56.268112893 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1659/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:30.254639888 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2505/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:45:15.871210218 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1415/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:46.677493398 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2736/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:05.296449164 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2796/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:59.424740749 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_249/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:06.667692681 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2651/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:44.136011545 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1940/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:00.516137416 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1545/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:46.438102697 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1373/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:03.985279976 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1373/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:27:03.985279976 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_590/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:43.393534724 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_366/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:58.972245159 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1496/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:58.005854675 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1929/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:51.952087948 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_423/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:51.872511941 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1666/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:35.918669373 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1666/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:31:35.922669394 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1067/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:22:09.703789904 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1067/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:09.707789923 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2618/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:12.775842285 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_534/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:13:47.833160508 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_405/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:11:33.208417424 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_405/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:33.212417444 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1378/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:08.237301124 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_886/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:17.810959984 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1235/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:49.008602134 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_314/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:10:11.696009976 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_314/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:11.696009976 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1332/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:27.001097162 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_294/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:09:53.015918031 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_294/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:53.015918031 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2738/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:06.780457161 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1341/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:35.565139307 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2317/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:42:00.642148478 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2471/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:44:41.687024979 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1477/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:40.989768019 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_49/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:05:06.768524751 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1026/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:32.911607149 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1473/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:36.709746267 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2322/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:42:06.330179573 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2116/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:54.105119934 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2116/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:38:54.105119934 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_971/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:41.851357627 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1997/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:55.912454793 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2089/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:38:28.520977094 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2089/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:28.520977094 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1661/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:31.678647300 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2145/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:39:25.457294274 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_382/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:13.256316848 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_610/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:00.497647012 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1268/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:21.564771233 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1631/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:31:04.634506726 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1631/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:04.638506747 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1782/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:32.463298213 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1921/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:35:44.856046870 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1921/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:44.856046870 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_557/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:12.153326208 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2635/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:27.027919221 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1651/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:24.538610149 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1280/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:32.948830550 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1285/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:38.688860493 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2458/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:44:28.862955428 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_740/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:01.266363737 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2251/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:02.197828213 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1215/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:30.544506617 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1215/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:24:30.544506617 -0500\n@@ -41,7 +41,9 @@\n \n     public PatternBuilder text(String s) {\n         fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n-        return this;\n+        s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\")\n+\t\t\t\t.replace(\"dd\", \"d{2}\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder number(String s) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 44, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"dddd\",\"d{4}\").replace(\"ddd\",\"d{3}\").replace(\"dd\",\"d{2}\");"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1164/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:42.136257698 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2262/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:10.785875368 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1402/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:31.009414800 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_317/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:14.520023927 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2515/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:45:25.775263846 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1910/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:33.495980932 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_969/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:40.435350784 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1855/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:37.923658034 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2034/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:31.692657675 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2690/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:22.644219252 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2104/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:38:42.761056666 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2104/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:42.761056666 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_237/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:08:55.383638479 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_758/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:16.922428049 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1591/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:29.006322156 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2487/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:44:58.755117496 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1989/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:47.404406321 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2352/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:42:37.762351193 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_592/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:44.809544069 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1606/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:43.206395629 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1606/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:30:43.206395629 -0500\n@@ -36,7 +36,9 @@\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\"); // special case for delimiter\n \n         fragments.add(s);\n-        return this;\n+        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\")\n+\t\t\t\t.replace(\"xx\", \"x{2}\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder text(String s) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 39, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2077/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:14.336897660 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2585/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:46:40.011665328 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_327/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:24.580073731 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_553/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:09.213306340 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2102/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:41.305048538 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_735/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:55.586340715 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_871/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:03.506894263 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_691/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:16:11.310099771 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_691/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:11.310099771 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2235/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:47.989750120 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2771/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:36.664618165 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_797/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:50.938571808 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2002/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:00.224479324 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_782/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:39.578523215 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2202/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:19.557593536 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2128/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:39:06.937191379 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2476/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:44:45.935048011 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2701/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:32.648273191 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_242/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:00.859664748 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2601/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:46:57.075757507 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1864/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:34:46.451705367 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1864/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:46.451705367 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_985/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:53.199412628 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2231/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:45.109734280 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_926/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:19:56.415140366 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_926/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:56.415140366 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2143/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:39:24.041286416 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_576/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:29.169440357 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1462/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:25.125687482 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1297/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:49.996916487 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1467/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:30.837716452 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1942/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:01.928145561 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_991/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:58.863440182 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2327/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:42:12.066210918 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2432/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:58.742791930 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_561/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:14.981345278 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2222/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:37.969694986 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_863/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:53.422848324 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1882/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:06.443822989 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_277/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:36.095835284 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1198/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:14.904425946 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1777/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:26.899267512 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2494/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:45:04.439148294 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1633/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:06.050514076 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_851/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:18:42.018796782 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_851/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:42.022796800 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_851/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:18:42.022796800 -0500\n@@ -46,8 +46,6 @@\n \n     public PatternBuilder number(String s) {\n         s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\").replace(\"dd\", \"d{2}\");\n-        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\").replace(\"xx\", \"x{2}\");\n-\n         s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 49, 
          "faulty": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");", 
          "type": "Delete", 
          "seed": "fragments.add(\"|\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1758/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:08.419165393 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2578/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:46:32.863626705 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_463/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:12:36.208737973 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2698/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:29.752257577 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1686/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:57.250780556 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1686/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:31:57.250780556 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1148/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:26.548178060 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2744/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:49:13.856495289 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2744/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:13.860495311 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2727/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:56.756403141 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2727/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:48:56.756403141 -0500\n@@ -46,8 +46,6 @@\n \n     public PatternBuilder number(String s) {\n         s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\").replace(\"dd\", \"d{2}\");\n-        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\").replace(\"xx\", \"x{2}\");\n-\n         s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 49, 
          "faulty": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");", 
          "type": "Delete", 
          "seed": "fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\",\"\\\\\\\\$1\"));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1811/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:00.919454930 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_297/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:55.887932128 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_297/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:09:55.887932128 -0500\n@@ -46,8 +46,6 @@\n \n     public PatternBuilder number(String s) {\n         s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\").replace(\"dd\", \"d{2}\");\n-        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\").replace(\"xx\", \"x{2}\");\n-\n         s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 49, 
          "faulty": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");", 
          "type": "Delete", 
          "seed": "fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\",\"\\\\\\\\$1\"));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_247/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:05.247685845 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_668/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:51.521975046 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_702/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:21.250161950 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1825/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:12.339517690 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1804/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:55.255423774 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1804/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:33:55.255423774 -0500\n@@ -40,7 +40,9 @@\n     }\n \n     public PatternBuilder text(String s) {\n-        fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n+        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\")\n+\t\t\t\t.replace(\"xx\", \"x{2}\");\n+\t\tfragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n         return this;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 43, 
          "faulty": "fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\",\"\\\\\\\\$1\"));", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_929/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:59.263153836 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_831/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:23.554714307 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2375/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:03.218489941 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1292/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:45.836896329 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_747/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:17:08.434393029 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_747/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:08.434393029 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_845/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:36.358771369 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1167/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:45.032272523 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_821/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:15.054676763 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_905/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:36.315045921 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_905/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:19:36.319045940 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2576/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:46:31.439619009 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2576/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:46:31.439619009 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_855/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:46.278815984 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_772/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:29.582480931 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1621/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:56.066462272 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_678/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:01.390037404 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1741/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:51.303070596 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1093/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:33.843910973 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2616/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:11.355834618 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2390/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:43:16.042559764 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2390/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:16.042559764 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1376/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:06.825294099 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2211/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:26.705632944 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1695/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:04.470818234 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1451/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:16.605644333 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2194/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:13.849562046 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1449/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:15.177637109 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1944/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:03.352153772 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1944/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:36:03.356153795 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1571/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:30:10.538226792 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1571/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:10.538226792 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1691/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:01.550802993 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2171/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:39:51.073436204 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2429/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:55.858776263 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_446/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:12:17.692643332 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_795/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:49.510565669 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_334/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:30.320102219 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1006/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:13.043509449 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1623/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:57.478469594 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2015/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:13.092552395 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1725/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:34.214975736 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1719/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:28.654944821 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1753/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:02.727133891 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 95, 
          "faulty": "return builder.toString();", 
          "type": "Replace", 
          "seed": "return builder.toString();"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_268/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:24.775780225 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_799/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:17:52.358577921 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_799/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:52.362577938 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_580/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:32.017459327 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2281/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:27.849968964 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2260/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:09.333867398 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2260/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:41:09.333867398 -0500\n@@ -41,7 +41,9 @@\n \n     public PatternBuilder text(String s) {\n         fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n-        return this;\n+        s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\")\n+\t\t\t\t.replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder number(String s) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 44, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"d\",\"\\\\d\").replace(\"x\",\"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\",\"\\\\\\\\$1\");"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1714/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:24.370922199 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2360/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:42:47.674405243 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_487/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:13:00.672863506 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2204/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:20.981601389 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_793/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:48.086559555 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1615/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:51.798440143 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2395/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:21.662590348 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2096/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:35.633016856 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_671/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:54.345992925 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2762/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:29.572579961 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_266/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:09:23.351773316 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_266/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:23.355773335 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_266/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:09:23.355773335 -0500\n@@ -46,8 +46,6 @@\n \n     public PatternBuilder number(String s) {\n         s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\").replace(\"dd\", \"d{2}\");\n-        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\").replace(\"xx\", \"x{2}\");\n-\n         s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 49, 
          "faulty": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");", 
          "type": "Delete", 
          "seed": "fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\",\"\\\\\\\\$1\"));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2364/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:42:50.506420679 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2473/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:44:43.099032635 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2473/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:44:43.103032656 -0500\n@@ -51,7 +51,9 @@\n         s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n-        fragments.add(s);\n+        s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\")\n+\t\t\t\t.replace(\"dd\", \"d{2}\");\n+\t\tfragments.add(s);\n         return this;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 54, 
          "faulty": "fragments.add(s);", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"dddd\",\"d{4}\").replace(\"ddd\",\"d{3}\").replace(\"dd\",\"d{2}\");"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2200/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:18.133585682 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1183/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:00.652352634 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1350/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:44.109181469 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1194/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:12.068411342 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2732/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:01.004426035 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2228/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:42.229718433 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1933/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:54.812104481 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1808/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:58.095439399 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1556/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:56.394153914 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1494/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:56.581847413 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_873/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:04.946900850 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1250/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:01.804668499 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1242/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:54.688631576 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1670/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:40.190691621 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_836/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:29.182739314 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1801/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:52.375407926 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1899/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:23.527922889 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2310/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:54.918117174 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2030/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:28.812641399 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2030/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:37:28.816641421 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1172/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:49.284294305 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1357/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:49.761209422 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1699/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:08.718840413 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_635/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:21.721784661 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2779/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:43.832656775 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2530/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:45:42.751355730 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_494/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:13:07.756899955 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2037/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:34.496673512 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2206/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:22.401609219 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_491/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:13:04.928885399 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_784/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:40.994529240 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1207/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:22.000462519 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1852/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:35.087642494 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1048/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:51.251697965 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2480/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:44:50.203071147 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1345/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:39.841160393 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1345/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:26:39.841160393 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_372/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:04.640273573 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_399/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:28.936395847 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1438/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:05.213586762 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_880/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:12.178934030 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1693/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:03.022810676 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1076/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:22:16.791825362 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1076/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:16.795825382 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1383/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:12.541322556 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1041/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:45.571669778 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2164/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:39:43.993397019 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2164/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:39:43.993397019 -0500\n@@ -52,7 +52,9 @@\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n         fragments.add(s);\n-        return this;\n+        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\")\n+\t\t\t\t.replace(\"xx\", \"x{2}\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder any() {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 55, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_390/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:20.396352783 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_687/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:08.466081923 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2622/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:15.611857596 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2713/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:44.004334409 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_978/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:20:47.511385027 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_978/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:47.511385027 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1503/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:06.561898347 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_606/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:57.669628532 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1188/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:06.404382198 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_754/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:17:14.094416342 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_754/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:14.098416358 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_754/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:17:14.098416358 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_700/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:19.834153111 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1352/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:45.521188448 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1135/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:15.160120055 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2249/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:00.773820391 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_414/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:43.320468582 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2186/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:05.309514896 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_680/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:02.806046326 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_889/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:20.654973126 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1829/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:15.179533286 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1419/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:27:49.513507657 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1419/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:49.513507657 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2013/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:11.672544342 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2574/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:46:30.023611357 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2574/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:46:30.023611357 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2729/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:58.176410794 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1840/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:23.711580115 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2050/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:47.304745748 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2435/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:44:01.578807333 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1657/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:28.830632478 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_654/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:40.165902873 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1931/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:53.388096251 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1543/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:29:45.018095398 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1543/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:45.018095398 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_620/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:10.413711546 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2121/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:58.377143732 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_919/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:19:50.647113152 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_919/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:50.647113152 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_454/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:12:26.188686716 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_440/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:12:11.908613838 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 95, 
          "faulty": "return builder.toString();", 
          "type": "Replace", 
          "seed": "return builder.toString();"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_169/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:07:36.266418927 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_169/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:07:36.270418981 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2114/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:52.645111797 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_964/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:36.183330260 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_675/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:58.658020173 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_953/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:24.939276186 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1058/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:01.195747443 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2074/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:11.504881778 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_506/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:13:19.184961092 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1675/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:44.438713754 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_245/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:03.795678859 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2571/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:46:27.163595900 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1879/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:03.591806258 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1879/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:35:03.591806258 -0500\n@@ -40,7 +40,9 @@\n     }\n \n     public PatternBuilder text(String s) {\n-        fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n+        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\")\n+\t\t\t\t.replace(\"xx\", \"x{2}\");\n+\t\tfragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n         return this;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 43, 
          "faulty": "fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\",\"\\\\\\\\$1\"));", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_476/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:12:50.612811820 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2752/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:20.964533587 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1664/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:34.502662000 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2607/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:04.179795871 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_264/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:21.927766411 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1230/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:43.272572430 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2527/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:45:39.919340405 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2174/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:39:53.965452199 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2674/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:08.352142179 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1088/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:28.187882530 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_647/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:33.185858284 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_761/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:17:19.666439446 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_761/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:19.666439446 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_761/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:17:19.670439462 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1792/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:42.459353320 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1792/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:33:42.459353320 -0500\n@@ -36,7 +36,9 @@\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\"); // special case for delimiter\n \n         fragments.add(s);\n-        return this;\n+        s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\")\n+\t\t\t\t.replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder text(String s) {\n@@ -46,8 +48,6 @@\n \n     public PatternBuilder number(String s) {\n         s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\").replace(\"dd\", \"d{2}\");\n-        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\").replace(\"xx\", \"x{2}\");\n-\n         s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 39, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"d\",\"\\\\d\").replace(\"x\",\"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\",\"\\\\\\\\$1\");"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 49, 
          "faulty": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");", 
          "type": "Delete", 
          "seed": "fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\",\"\\\\\\\\$1\"));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_683/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:05.638064151 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_715/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:34.266242919 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2339/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:42:22.126265863 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2386/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:13.174544153 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1129/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:10.884098315 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2559/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:46:15.435532506 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2284/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:30.705984616 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_496/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:13:09.200907390 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2067/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:04.324841478 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1405/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:33.841428984 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2452/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:44:21.658916341 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_829/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:22.138708033 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_517/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:13:30.713041917 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_254/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:09:12.235719526 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_254/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:12.239719546 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1549/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:49.278117300 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1274/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:27.280801005 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2786/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:50.904694864 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1176/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:52.128308885 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1619/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:54.646454908 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2800/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:50:02.340756452 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1312/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:26:05.616992458 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1312/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:05.616992458 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_949/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:22.111262633 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1322/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:15.581041148 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_461/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:12:34.788730703 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2045/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:43.044721741 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1425/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:55.201536284 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1717/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:27.234937174 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1228/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:41.852565080 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1362/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:54.025230541 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_140/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:07:03.069809959 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_140/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:07:03.073810060 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2314/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:57.790132882 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2644/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:36.975972909 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1981/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:38.964358145 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1977/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:34.692333723 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1143/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:22.336156588 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2676/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:09.772149837 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1442/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:08.045601060 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2297/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:43.530054856 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1294/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:25:47.280903323 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1294/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:47.280903323 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1294/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:25:47.284903342 -0500\n@@ -46,8 +46,6 @@\n \n     public PatternBuilder number(String s) {\n         s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\").replace(\"dd\", \"d{2}\");\n-        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\").replace(\"xx\", \"x{2}\");\n-\n         s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 49, 
          "faulty": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");", 
          "type": "Delete", 
          "seed": "s=s.replace(\"dddd\",\"d{4}\").replace(\"ddd\",\"d{3}\").replace(\"dd\",\"d{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1894/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:19.267898029 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_897/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:29.235012921 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_228/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:08:45.511578179 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_228/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:08:45.515578213 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2291/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:37.830023644 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2237/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:49.417757975 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2119/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:56.957135824 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2567/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:46:22.627571384 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2041/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:38.748697512 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2565/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:46:21.195563643 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1642/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:14.650558743 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2162/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:39:42.581389201 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_300/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:58.719946043 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_860/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:50.554835320 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_631/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:18.897766449 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_777/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:35.334505206 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1112/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:52.344004318 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_41/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:04:57.116524531 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_41/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:04:57.120524531 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2503/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:45:14.447202505 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2503/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:45:14.447202505 -0500\n@@ -46,8 +46,6 @@\n \n     public PatternBuilder number(String s) {\n         s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\").replace(\"dd\", \"d{2}\");\n-        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\").replace(\"xx\", \"x{2}\");\n-\n         s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 49, 
          "faulty": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");", 
          "type": "Delete", 
          "seed": "s=s.replace(\"d\",\"\\\\d\").replace(\"x\",\"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\",\"\\\\\\\\$1\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1217/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:31.956513911 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_289/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:47.543891213 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_289/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:09:47.543891213 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1902/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:26.371939467 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2760/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:28.152572311 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1063/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:06.867775737 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1831/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:16.591541038 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1307/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:26:00.032965247 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1307/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:00.032965247 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1010/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:17.291530276 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1815/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:03.791470720 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2688/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:21.196211444 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2723/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:53.916387835 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2611/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:07.011811163 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2611/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:47:07.011811163 -0500\n@@ -46,8 +46,6 @@\n \n     public PatternBuilder number(String s) {\n         s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\").replace(\"dd\", \"d{2}\");\n-        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\").replace(\"xx\", \"x{2}\");\n-\n         s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 49, 
          "faulty": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");", 
          "type": "Delete", 
          "seed": "fragments.add(\"|\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1626/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:00.318484327 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2017/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:14.512560447 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1035/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:41.331648771 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1054/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:56.931726207 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_801/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:53.774584026 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1396/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:23.885379164 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2422/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:43:48.738737578 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2422/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:48.742737600 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_973/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:20:43.351364882 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_973/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:43.355364901 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1482/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:45.297789932 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1819/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:06.663486506 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1772/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:33:22.643244014 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1453/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:18.029651541 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1547/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:47.858109998 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1174/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:23:50.712301624 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1174/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:50.712301624 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_594/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:46.233553457 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1709/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:20.114899950 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_901/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:33.479032686 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1100/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:22:39.531939623 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1100/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:39.535939643 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_695/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:15.562126406 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2609/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:05.599803539 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2789/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:53.736710116 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2243/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:40:55.089789158 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2243/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:55.089789158 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2289/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:36.410015866 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2540/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:45:54.127417276 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2540/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:45:54.127417276 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_818/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:12.226664334 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1817/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:05.223478591 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_823/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:16.466682981 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2345/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:42:29.206304510 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2345/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:42:29.210304532 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1992/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:50.244422512 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1110/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:50.935997197 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2312/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:56.374125138 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_339/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:34.580123395 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1617/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:53.226447546 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_744/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:05.598381409 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2366/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:42:51.922428397 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1599/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:36.126358980 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_219/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:08:35.595484202 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2362/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:42:49.094412984 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1541/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:43.602088123 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_442/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:12:13.336621116 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2100/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:39.889040631 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1948/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:07.640178480 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_666/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:50.105966070 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1021/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:28.631586040 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1846/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:30.787618923 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_705/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:24.158180084 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_903/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:34.891039272 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1558/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:57.806161183 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_480/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:12:54.988834292 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_622/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:11.837720781 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1246/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:58.964653758 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1246/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:24:58.968653779 -0500\n@@ -36,7 +36,9 @@\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\"); // special case for delimiter\n \n         fragments.add(s);\n-        return this;\n+        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\")\n+\t\t\t\t.replace(\"xx\", \"x{2}\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder text(String s) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 39, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1515/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:16.529949308 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_982/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:50.343398761 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_578/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:14:30.601449899 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_578/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:30.605449926 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_685/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:07.054073053 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2334/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:42:17.794242207 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2215/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:30.949656328 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2543/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:45:56.935432465 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2266/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:41:13.637891021 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2266/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:13.637891021 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1968/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:36:27.588293056 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1968/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:27.588293056 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1985/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:43.200382336 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1000/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:07.451482085 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2653/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:45.568019272 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2653/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:47:45.572019293 -0500\n@@ -41,7 +41,9 @@\n \n     public PatternBuilder text(String s) {\n         fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n-        return this;\n+        s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\")\n+\t\t\t\t.replace(\"dd\", \"d{2}\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder number(String s) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 44, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"dddd\",\"d{4}\").replace(\"ddd\",\"d{3}\").replace(\"dd\",\"d{2}\");"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1169/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:46.448279775 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2276/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:23.601945675 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_766/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:23.930457227 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2703/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:34.068280847 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_401/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:30.356403017 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1486/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:49.465811150 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1486/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:28:49.469811171 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1647/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:20.282588017 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1673/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:43.022706375 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2409/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:37.306675438 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_614/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:04.749674734 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1108/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:49.515990019 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1858/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:40.787673725 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2683/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:16.932188451 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_564/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:17.809364308 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_617/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:07.585693183 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_617/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:15:07.585693183 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1528/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:29.370015074 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1970/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:29.016301237 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1970/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:36:29.016301237 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2659/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:52.624057340 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2659/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:47:52.624057340 -0500\n@@ -36,7 +36,9 @@\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\"); // special case for delimiter\n \n         fragments.add(s);\n-        return this;\n+        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\")\n+\t\t\t\t.replace(\"xx\", \"x{2}\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder text(String s) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 39, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2258/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:07.913859603 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1371/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:27:02.557272880 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1371/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:02.561272900 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2130/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:39:08.357199277 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1125/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:06.616076638 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_94/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:06:06.980526125 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1512/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:13.681934739 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2757/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:25.296556925 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_193/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:08:06.323098449 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_882/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:13.598940566 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_768/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:25.342463135 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2332/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:42:16.370234430 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1958/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:16.220227832 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_602/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:54.833609968 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2764/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:30.996587633 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_875/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:06.390907462 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_791/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:46.666553468 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1039/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:44.159662778 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2783/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:49:48.072679612 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2783/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:48.072679612 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2774/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:39.520633549 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1837/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:20.843564377 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1151/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:29.392192569 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2255/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:05.041843832 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1507/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:29:09.397912837 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2303/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:49.238086098 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_917/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:49.207106372 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2032/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:30.232649425 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_260/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:17.919746999 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_642/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:28.933831034 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1146/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:25.124170798 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1887/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:12.143856381 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_633/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:20.305775532 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1154/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:32.232207067 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2492/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:45:03.023140622 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1628/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:31:01.786491945 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1628/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:01.786491945 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2388/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:14.606551948 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_559/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:13.565335734 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1582/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:20.478278092 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1137/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:16.584127300 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_184/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:07:55.474885053 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_789/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:45.250547407 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1567/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:07.650211901 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_545/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:00.853249606 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_223/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:08:39.807525909 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_555/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:10.645316023 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_663/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:47.261948024 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2301/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:47.814078305 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1133/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:13.736112813 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1133/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:23:13.740112833 -0500\n@@ -36,7 +36,9 @@\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\"); // special case for delimiter\n \n         fragments.add(s);\n-        return this;\n+        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\")\n+\t\t\t\t.replace(\"xx\", \"x{2}\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder text(String s) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 39, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1999/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:57.344462942 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_649/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:34.609867395 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2532/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:45:44.179363457 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2224/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:40:39.389702804 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2224/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:39.393702825 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2627/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:19.883880658 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1096/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:36.699925353 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2048/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:37:45.888737770 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_354/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:47.512187844 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1392/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:21.057365036 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2649/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:42.716003883 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2649/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:47:42.716003883 -0500\n@@ -41,7 +41,9 @@\n \n     public PatternBuilder text(String s) {\n         fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n-        return this;\n+        s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\")\n+\t\t\t\t.replace(\"dd\", \"d{2}\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder number(String s) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 44, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"dddd\",\"d{4}\").replace(\"ddd\",\"d{3}\").replace(\"dd\",\"d{2}\");"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1140/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:19.444141858 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1458/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:22.289673111 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1015/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:22.959558118 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1390/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:19.645357985 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2447/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:44:15.986885558 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1813/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:02.339462737 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1926/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:35:49.140071679 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1926/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:49.140071679 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1330/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:25.581090185 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2669/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:04.096119224 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_661/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:45.833938952 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2151/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:39:32.613333967 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_645/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:31.761849166 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2069/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:05.744849452 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1429/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:58.085550812 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1203/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:19.144447793 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_966/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:37.599337091 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2694/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:25.500234652 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2330/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:42:14.938226607 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1835/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:19.427556606 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_816/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:10.814658139 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1565/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:06.214204498 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1436/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:28:03.793579596 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1436/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:03.793579596 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_656/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:15:41.577911871 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_279/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:37.511842188 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2501/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:45:13.003194685 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1833/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:18.015548856 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_608/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:14:59.085637789 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_608/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:59.085637789 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_923/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:53.579126975 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_848/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:39.186784052 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1861/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:43.619689236 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_98/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:06:11.324526224 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_826/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:19.298695473 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2582/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:46:37.183650048 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1688/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:58.718788215 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1417/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:48.097500537 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2596/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:46:51.367726676 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_287/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:09:46.111884204 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1098/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:38.115932486 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2463/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:44:33.126978557 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_234/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:08:52.543624882 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_234/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:08:52.543624882 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2381/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:43:08.922521003 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2381/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:08.926521025 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_346/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:41.780159247 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_508/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:13:20.660971485 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2679/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:12.600165089 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_756/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:15.510422198 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_719/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:38.530269336 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_719/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:16:38.534269361 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2549/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:46:04.031470843 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2094/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:34.217008943 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_569/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:23.485402383 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1923/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:46.304055259 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2640/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:32.707949876 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1589/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:27.594314857 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1575/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:13.378241443 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_698/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:18.394144116 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1732/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:42.767023239 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1915/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:39.192014021 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1315/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:08.473006396 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1975/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:36:33.276325623 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1359/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:51.177216432 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_893/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:24.962993080 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_166/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:07:33.426381793 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_731/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:51.302323464 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_731/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocol.java\t2018-12-26 13:16:51.306323481 -0500\n@@ -44,7 +44,6 @@\n     }\n \n     public void setSupportedDataCommands(String... commands) {\n-        supportedDataCommands.addAll(Arrays.asList(commands));\n     }\n \n     public void setSupportedTextCommands(String... commands) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocol.java", 
          "line": 47, 
          "faulty": "supportedDataCommands.addAll(Arrays.asList(commands));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_936/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:07.747194083 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1226/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:40.436557753 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1908/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:32.079972697 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_416/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:44.752475837 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1018/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:25.799572091 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2308/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:41:53.502109428 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1427/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:27:56.621543437 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1240/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:53.268624214 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_24/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:04:35.048524028 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_724/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:16:42.774289421 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_724/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:16:42.774289421 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2219/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:35.097679173 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1302/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:25:55.700944177 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1302/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:55.700944177 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_940/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:20:11.983214245 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1335/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:29.833111085 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1335/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:26:29.833111085 -0500\n@@ -36,7 +36,9 @@\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\"); // special case for delimiter\n \n         fragments.add(s);\n-        return this;\n+        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\")\n+\t\t\t\t.replace(\"xx\", \"x{2}\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder text(String s) {\n@@ -48,10 +50,11 @@\n         s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\").replace(\"dd\", \"d{2}\");\n         s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\").replace(\"xx\", \"x{2}\");\n \n-        s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n-        fragments.add(s);\n+        s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\")\n+\t\t\t\t.replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n+\t\tfragments.add(s);\n         return this;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 54, 
          "faulty": "fragments.add(s);", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"d\",\"\\\\d\").replace(\"x\",\"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\",\"\\\\\\\\$1\");"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 51, 
          "faulty": "s=s.replace(\"d\",\"\\\\d\").replace(\"x\",\"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\",\"\\\\\\\\$1\");", 
          "type": "Delete", 
          "seed": "s=s.replaceAll(\"\\\\|$\",\"\\\\\\\\|\");"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 39, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2420/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:47.294729732 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_471/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:12:44.860782308 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1635/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:31:07.470521450 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1635/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:31:07.470521450 -0500\n@@ -41,7 +41,9 @@\n \n     public PatternBuilder text(String s) {\n         fragments.add(s.replaceAll(\"([\\\\\\\\\\\\.\\\\[\\\\{\\\\(\\\\)\\\\*\\\\+\\\\?\\\\^\\\\$\\\\|])\", \"\\\\\\\\$1\"));\n-        return this;\n+        s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\")\n+\t\t\t\t.replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder number(String s) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 44, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"d\",\"\\\\d\").replace(\"x\",\"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\",\"\\\\\\\\$1\");"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1889/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:35:13.559864666 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_994/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:01.703454023 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_197/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:08:10.467167065 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_752/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:17:12.670410461 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_348/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:43.212166386 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1196/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:13.488418652 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1024/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:21:31.495600162 -0500\n@@ -211,7 +211,6 @@\n     }\n \n     public void setValid(boolean valid) {\n-        this.valid = valid;\n     }\n \n     private double latitude;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1024/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:31.499600181 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 214, 
          "faulty": "this.valid=valid;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1116/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:56.608025898 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2397/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:43:23.082598075 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_842/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:18:33.522758679 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2183/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:40:02.449499098 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2065/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:02.864833277 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2065/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:38:02.864833277 -0500\n@@ -46,8 +46,6 @@\n \n     public PatternBuilder number(String s) {\n         s = s.replace(\"dddd\", \"d{4}\").replace(\"ddd\", \"d{3}\").replace(\"dd\", \"d{2}\");\n-        s = s.replace(\"xxxx\", \"x{4}\").replace(\"xxx\", \"x{3}\").replace(\"xx\", \"x{2}\");\n-\n         s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\").replaceAll(\"^\\\\|\", \"\\\\\\\\|\"); // special case for delimiter\n \n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 49, 
          "faulty": "s=s.replace(\"xxxx\",\"x{4}\").replace(\"xxx\",\"x{3}\").replace(\"xx\",\"x{2}\");", 
          "type": "Delete", 
          "seed": "fragments.add(\"|\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_207/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:08:23.067344274 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_311/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:10:08.755995465 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1444/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:09.465608234 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:03:03.516521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1444/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/helper/PatternBuilder.java\t2018-12-26 13:28:09.465608234 -0500\n@@ -36,7 +36,9 @@\n         s = s.replaceAll(\"\\\\|$\", \"\\\\\\\\|\"); // special case for delimiter\n \n         fragments.add(s);\n-        return this;\n+        s = s.replace(\"d\", \"\\\\d\").replace(\"x\", \"[0-9a-fA-F]\")\n+\t\t\t\t.replaceAll(\"([\\\\.])\", \"\\\\\\\\$1\");\n+\t\treturn this;\n     }\n \n     public PatternBuilder text(String s) {\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 39, 
          "faulty": "return this;", 
          "type": "InsertBefore", 
          "seed": "s=s.replace(\"d\",\"\\\\d\").replace(\"x\",\"[0-9a-fA-F]\").replaceAll(\"([\\\\.])\",\"\\\\\\\\$1\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_908/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:19:39.143059142 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2109/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:38:48.425088268 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2632/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:47:24.195903935 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1823/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:10.907509824 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2168/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:39:48.245420555 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1365/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:56.865244623 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1471/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:28:35.289739054 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/helper/PatternBuilder.java", 
          "line": 95, 
          "faulty": "return builder.toString();", 
          "type": "Replace", 
          "seed": "return builder.toString();"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2721/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:48:52.496380181 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1867/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:34:49.287722102 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2794/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:49:58.000733080 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1159/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:23:37.888235968 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1569/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:30:09.070219222 -0500\n@@ -165,7 +165,6 @@\n \n     public void setDeviceTime(Date deviceTime) {\n         if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n         } else {\n             this.deviceTime = null;\n         }\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1569/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:09.070219222 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 168, 
          "faulty": "this.deviceTime=new Date(deviceTime.getTime());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_396/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:11:26.092381496 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1081/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:22:21.115847031 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1368/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:26:59.725258815 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_2138/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:39:18.385255012 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:03:03.528521939 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_122/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/model/Position.java\t2018-12-26 13:06:40.925017046 -0500\n@@ -164,11 +164,6 @@\n     }\n \n     public void setDeviceTime(Date deviceTime) {\n-        if (deviceTime != null) {\n-            this.deviceTime = new Date(deviceTime.getTime());\n-        } else {\n-            this.deviceTime = null;\n-        }\n     }\n \n     private Date fixTime;\n\n\n--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_122/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:06:40.925017046 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/model/Position.java", 
          "line": 167, 
          "faulty": "if (deviceTime != null) {\n  this.deviceTime=new Date(deviceTime.getTime());\n}\n else {\n  this.deviceTime=null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1046/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:21:49.823690874 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1248/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:25:00.392661169 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1743/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:32:52.751078624 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1587/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:26.178307539 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1595/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:30:33.238344040 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_599/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:14:51.965591157 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:03:03.464521938 -0500\n+++ /tmp/Arja_Bears_traccar-traccar_255051210-255052458/patches_gske/Patch_1192/patched/tmp/Arja_Bears_traccar-traccar_255051210-255052458/src/org/traccar/BaseProtocolDecoder.java\t2018-12-26 13:24:10.652404053 -0500\n@@ -106,18 +106,6 @@\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n-                || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n-            long deviceId = findDeviceId(remoteAddress, uniqueIds);\n-            if (deviceId != 0) {\n-                if (Context.getConnectionManager() != null) {\n-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);\n-                }\n-                return new DeviceSession(deviceId);\n-            } else {\n-                return null;\n-            }\n-        }\n         if (channel instanceof DatagramChannel) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);\n\n\n", 
      "edits": [
        {
          "path": "src/org/traccar/BaseProtocolDecoder.java", 
          "line": 109, 
          "faulty": "if (channel.getPipeline().get(HttpRequestDecoder.class) != null || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n  long deviceId=findDeviceId(remoteAddress,uniqueIds);\n  if (deviceId != 0) {\n    if (Context.getConnectionManager() != null) {\n      Context.getConnectionManager().addActiveDevice(deviceId,protocol,channel,remoteAddress);\n    }\n    return new DeviceSession(deviceId);\n  }\n else {\n    return null;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }
  ]
}