{
  "repair_end": "2018-12-27 02:13:54.501249", 
  "repair_begin": "2018-12-27 02:07:07.129455", 
  "patches": [
    {
      "PATCH_DIFF_ORIG": "\\/var\\/lib\\/oar\\/.batch_job_bashrc: line 5: \\/home\\/tdurieux\\/.bashrc: No such file or directory\\n--- org\\/traccar\\/protocol\\/Gt06ProtocolDecoder.java\\n+++ org\\/traccar\\/protocol\\/Gt06ProtocolDecoder.java\\n@@ -182,364 +182,364 @@\\n \\t\\t}\\n \\n \\t\\tif (length > 0) {\\n-\\t\\t\\tbuf.skipBytes((length - 12));\\n-\\t\\t}\\n \\n-\\t\\treturn true;\\n-\\t}\\n \\n-\\tprivate boolean decodeLbs(org.traccar.model.Position position, org.jboss.netty.buffer.ChannelBuffer buf, boolean hasLength) {\\n \\n-\\t\\tint length = 0;\\n-\\t\\tif (hasLength) {\\n-\\t\\t\\tlength = buf.readUnsignedByte();\\n-\\t\\t\\tif (length == 0) {\\n-\\t\\t\\t\\treturn false;\\n-\\t\\t\\t}\\n-\\t\\t}\\n \\n-\\t\\tposition.setNetwork(new org.traccar.model.Network(org.traccar.model.CellTower.from(\\n-\\t\\tbuf.readUnsignedShort(), buf.readUnsignedByte(), buf.readUnsignedShort(), buf.readUnsignedMedium())));\\n \\n-\\t\\tif (length > 0) {\\n-\\t\\t\\tbuf.skipBytes((length - 8));\\n-\\t\\t}\\n \\n-\\t\\treturn true;\\n-\\t}\\n \\n-\\tprivate boolean decodeStatus(org.traccar.model.Position position, org.jboss.netty.buffer.ChannelBuffer buf) {\\n \\n-\\t\\tint status = buf.readUnsignedByte();\\n \\n-\\t\\tposition.set(org.traccar.model.Position.KEY_STATUS, status);\\n-\\t\\tposition.set(org.traccar.model.Position.KEY_IGNITION, org.traccar.helper.BitUtil.check(status, 1));\\n-\\t\\tposition.set(org.traccar.model.Position.KEY_CHARGE, org.traccar.helper.BitUtil.check(status, 2));\\n-\\t\\tposition.set(org.traccar.model.Position.KEY_BLOCKED, org.traccar.helper.BitUtil.check(status, 7));\\n-\\n-\\t\\tswitch (org.traccar.helper.BitUtil.between(status, 3, 6)) {\\n-\\t\\t\\tcase 1 :\\n-\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_ALARM, org.traccar.model.Position.ALARM_SHOCK);\\n-\\t\\t\\t\\tbreak;\\n-\\t\\t\\tcase 2 :\\n-\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_ALARM, org.traccar.model.Position.ALARM_POWER_CUT);\\n-\\t\\t\\t\\tbreak;\\n-\\t\\t\\tcase 3 :\\n-\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_ALARM, org.traccar.model.Position.ALARM_LOW_BATTERY);\\n-\\t\\t\\t\\tbreak;\\n-\\t\\t\\tcase 4 :\\n-\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_ALARM, org.traccar.model.Position.ALARM_SOS);\\n-\\t\\t\\t\\tbreak;\\n-\\t\\t\\tdefault :\\n-\\t\\t\\t\\tbreak;}\\n-\\n-\\n-\\t\\tposition.set(org.traccar.model.Position.KEY_BATTERY, buf.readUnsignedByte());\\n-\\t\\tposition.set(org.traccar.model.Position.KEY_RSSI, buf.readUnsignedByte());\\n-\\t\\tposition.set(org.traccar.model.Position.KEY_ALARM, decodeAlarm(buf.readUnsignedByte()));\\n \\n-\\t\\treturn true;\\n-\\t}\\n \\n-\\tprivate java.lang.String decodeAlarm(short value) {\\n-\\t\\tswitch (value) {\\n-\\t\\t\\tcase 1 :\\n-\\t\\t\\t\\treturn org.traccar.model.Position.ALARM_SOS;\\n-\\t\\t\\tcase 2 :\\n-\\t\\t\\t\\treturn org.traccar.model.Position.ALARM_POWER_CUT;\\n-\\t\\t\\tcase 3 :\\n-\\t\\t\\tcase 9 :\\n-\\t\\t\\t\\treturn org.traccar.model.Position.ALARM_VIBRATION;\\n-\\t\\t\\tcase 4 :\\n-\\t\\t\\t\\treturn org.traccar.model.Position.ALARM_GEOFENCE_ENTER;\\n-\\t\\t\\tcase 5 :\\n-\\t\\t\\t\\treturn org.traccar.model.Position.ALARM_GEOFENCE_EXIT;\\n-\\t\\t\\tcase 6 :\\n-\\t\\t\\t\\treturn org.traccar.model.Position.ALARM_OVERSPEED;\\n-\\t\\t\\tcase 14 :\\n-\\t\\t\\tcase 15 :\\n-\\t\\t\\t\\treturn org.traccar.model.Position.ALARM_LOW_BATTERY;\\n-\\t\\t\\tcase 17 :\\n-\\t\\t\\t\\treturn org.traccar.model.Position.ALARM_POWER_OFF;\\n-\\t\\t\\tdefault :\\n-\\t\\t\\t\\treturn null;}\\n \\n-\\t}\\n \\n-\\tprivate static final java.util.regex.Pattern PATTERN_FUEL = new org.traccar.helper.PatternBuilder().text(\\n-\\t\\\"!AIOIL,\\\").number(\\n-\\t\\\"d+,\\\").number(\\n-\\t\\\"d+.d+,\\\").number(\\n-\\t\\\"(d+.d+),\\\").expression(\\n-\\t\\\"[^,]+,\\\").number(\\n-\\t\\\"dd\\\").number(\\n-\\t\\\"d\\\").number(\\n-\\t\\\"d,\\\").number(\\n-\\t\\\"(d+.d+),\\\").expression(\\n-\\t\\\"[01],\\\").number(\\n-\\t\\\"d+,\\\").number(\\n-\\t\\\"xx\\\").compile();\\n-\\n-\\n-\\tprivate org.traccar.model.Position decodeFuelData(org.traccar.model.Position position, java.lang.String sentence) {\\n-\\t\\torg.traccar.helper.Parser parser = new org.traccar.helper.Parser(org.traccar.protocol.Gt06ProtocolDecoder.PATTERN_FUEL, sentence);\\n-\\t\\tif (!(parser.matches())) {\\n-\\t\\t\\treturn null;\\n-\\t\\t}\\n \\n-\\t\\tposition.set(((org.traccar.model.Position.PREFIX_TEMP) + 1), parser.nextDouble(0));\\n-\\t\\tposition.set(org.traccar.model.Position.KEY_FUEL_LEVEL, parser.nextDouble(0));\\n \\n-\\t\\treturn position;\\n-\\t}\\n \\n-\\tprivate static final java.util.regex.Pattern PATTERN_LOCATION = new org.traccar.helper.PatternBuilder().text(\\n-\\t\\\"Current position!\\\").number(\\n-\\t\\\"Lat:([NS])(d+.d+),\\\").number(\\n-\\t\\\"Lon:([EW])(d+.d+),\\\").text(\\n-\\t\\\"Course:\\\").number(\\\"(d+.d+),\\\").text(\\n-\\t\\\"Speed:\\\").number(\\\"(d+.d+),\\\").text(\\n-\\t\\\"DateTime:\\\").number(\\n-\\t\\\"(dddd)-(dd)-(dd)  \\\").number(\\n-\\t\\\"(dd):(dd):(dd)\\\").compile();\\n \\n \\n-\\tprivate org.traccar.model.Position decodeLocationString(org.traccar.model.Position position, java.lang.String sentence) {\\n-\\t\\torg.traccar.helper.Parser parser = new org.traccar.helper.Parser(org.traccar.protocol.Gt06ProtocolDecoder.PATTERN_LOCATION, sentence);\\n-\\t\\tif (!(parser.matches())) {\\n-\\t\\t\\treturn null;\\n-\\t\\t}\\n \\n-\\t\\tposition.setValid(true);\\n-\\t\\tposition.setLatitude(parser.nextCoordinate(org.traccar.helper.Parser.CoordinateFormat.HEM_DEG));\\n-\\t\\tposition.setLongitude(parser.nextCoordinate(org.traccar.helper.Parser.CoordinateFormat.HEM_DEG));\\n-\\t\\tposition.setCourse(parser.nextDouble());\\n-\\t\\tposition.setSpeed(parser.nextDouble());\\n-\\t\\tposition.setTime(parser.nextDateTime(org.traccar.helper.Parser.DateTimeFormat.YMD_HMS));\\n \\n-\\t\\treturn position;\\n-\\t}\\n \\n-\\tprivate java.lang.Object decodeBasic(org.jboss.netty.channel.Channel channel, java.net.SocketAddress remoteAddress, org.jboss.netty.buffer.ChannelBuffer buf) throws java.lang.Exception {\\n \\n-\\t\\tint length = buf.readUnsignedByte();\\n-\\t\\tint dataLength = length - 5;\\n-\\t\\tint type = buf.readUnsignedByte();\\n-\\n-\\t\\torg.traccar.DeviceSession deviceSession = null;\\n-\\t\\tif (type != (org.traccar.protocol.Gt06ProtocolDecoder.MSG_LOGIN)) {\\n-\\t\\t\\tdeviceSession = getDeviceSession(channel, remoteAddress);\\n-\\t\\t\\tif (deviceSession == null) {\\n-\\t\\t\\t\\treturn null;\\n-\\t\\t\\t}\\n-\\t\\t}\\n \\n-\\t\\tif (type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_LOGIN)) {\\n \\n-\\t\\t\\tjava.lang.String imei = org.jboss.netty.buffer.ChannelBuffers.hexDump(buf.readBytes(8)).substring(1);\\n-\\t\\t\\tbuf.readUnsignedShort();\\n \\n-\\t\\t\\tif (dataLength > 10) {\\n-\\t\\t\\t\\tint extensionBits = buf.readUnsignedShort();\\n-\\t\\t\\t\\tint hours = (extensionBits >> 4) \\/ 100;\\n-\\t\\t\\t\\tint minutes = (extensionBits >> 4) % 100;\\n-\\t\\t\\t\\tint offset = ((hours * 60) + minutes) * 60;\\n-\\t\\t\\t\\tif ((extensionBits & 8) != 0) {\\n-\\t\\t\\t\\t\\toffset = -offset;\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t\\tif (!(forceTimeZone)) {\\n-\\t\\t\\t\\t\\ttimeZone.setRawOffset((offset * 1000));\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n \\n-\\t\\t\\tif ((getDeviceSession(channel, remoteAddress, imei)) != null) {\\n-\\t\\t\\t\\tsendResponse(channel, false, type);\\n-\\t\\t\\t}\\n \\n-\\t\\t}else \\t\\t\\tif (type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_X1_GPS)) {\\n \\n-\\t\\t\\t\\torg.traccar.model.Position position = new org.traccar.model.Position();\\n-\\t\\t\\t\\tposition.setDeviceId(deviceSession.getDeviceId());\\n-\\t\\t\\t\\tposition.setProtocol(getProtocolName());\\n \\n-\\t\\t\\t\\tbuf.readUnsignedInt();\\n \\n-\\t\\t\\t\\tdecodeGps(position, buf, false);\\n \\n-\\t\\t\\t\\tbuf.readUnsignedShort();\\n \\n-\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_ODOMETER, buf.readUnsignedInt());\\n \\n-\\t\\t\\t\\tposition.setNetwork(new org.traccar.model.Network(org.traccar.model.CellTower.from(\\n-\\t\\t\\t\\tbuf.readUnsignedShort(), buf.readUnsignedByte(), \\n-\\t\\t\\t\\tbuf.readUnsignedShort(), buf.readUnsignedInt())));\\n \\n-\\t\\t\\t\\treturn position;\\n \\n-\\t\\t\\t}else \\t\\t\\t\\tif (type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_X1_PHOTO_INFO)) {\\n \\n-\\t\\t\\t\\t\\tbuf.skipBytes(6);\\n-\\t\\t\\t\\t\\tbuf.readUnsignedByte();\\n-\\t\\t\\t\\t\\tbuf.readUnsignedInt();\\n-\\t\\t\\t\\t\\tbuf.readUnsignedInt();\\n-\\t\\t\\t\\t\\tbuf.readUnsignedByte();\\n-\\t\\t\\t\\t\\tbuf.readUnsignedByte();\\n-\\t\\t\\t\\t\\tbuf.readUnsignedByte();\\n-\\n-\\t\\t\\t\\t\\torg.jboss.netty.buffer.ChannelBuffer photo = org.jboss.netty.buffer.ChannelBuffers.buffer(buf.readInt());\\n-\\t\\t\\t\\t\\tint pictureId = buf.readInt();\\n-\\t\\t\\t\\t\\tphotos.put(pictureId, photo);\\n-\\t\\t\\t\\t\\tsendPhotoRequest(channel, pictureId);\\n \\n-\\t\\t\\t\\t}else {\\n \\n-\\t\\t\\t\\t\\treturn decodeBasicOther(channel, buf, deviceSession, type, dataLength);\\n \\n-\\t\\t\\t\\t}\\n \\n-\\t\\treturn null;\\n-\\t}\\n \\n-\\tprivate java.lang.Object decodeBasicOther(org.jboss.netty.channel.Channel channel, org.jboss.netty.buffer.ChannelBuffer buf, \\n-\\torg.traccar.DeviceSession deviceSession, int type, int dataLength) throws java.lang.Exception {\\n \\n-\\t\\torg.traccar.model.Position position = new org.traccar.model.Position();\\n-\\t\\tposition.setDeviceId(deviceSession.getDeviceId());\\n-\\t\\tposition.setProtocol(getProtocolName());\\n-\\n-\\t\\tif (((type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_LBS_MULTIPLE)) || (type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_LBS_EXTEND))) || (type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_LBS_WIFI))) {\\n-\\n-\\t\\t\\torg.traccar.helper.DateBuilder dateBuilder = new org.traccar.helper.DateBuilder(timeZone).setDate(\\n-\\t\\t\\tbuf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte()).setTime(\\n-\\t\\t\\tbuf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte());\\n-\\n-\\t\\t\\tgetLastLocation(position, dateBuilder.getDate());\\n-\\n-\\t\\t\\tint mcc = buf.readUnsignedShort();\\n-\\t\\t\\tint mnc = buf.readUnsignedByte();\\n-\\t\\t\\torg.traccar.model.Network network = new org.traccar.model.Network();\\n-\\t\\t\\tfor (int i = 0; i < 7; i++) {\\n-\\t\\t\\t\\tint lac = buf.readUnsignedShort();\\n-\\t\\t\\t\\tint cid = buf.readUnsignedMedium();\\n-\\t\\t\\t\\tint rssi = -(buf.readUnsignedByte());\\n-\\t\\t\\t\\tif (lac > 0) {\\n-\\t\\t\\t\\t\\tnetwork.addCellTower(org.traccar.model.CellTower.from(mcc, mnc, lac, cid, rssi));\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n \\n-\\t\\t\\tbuf.readUnsignedByte();\\n \\n-\\t\\t\\tif (type != (org.traccar.protocol.Gt06ProtocolDecoder.MSG_LBS_MULTIPLE)) {\\n-\\t\\t\\t\\tint wifiCount = buf.readUnsignedByte();\\n-\\t\\t\\t\\tfor (int i = 0; i < wifiCount; i++) {\\n-\\t\\t\\t\\t\\tjava.lang.String mac = org.jboss.netty.buffer.ChannelBuffers.hexDump(buf.readBytes(6)).replaceAll(\\\"(..)\\\", \\\"$1:\\\");\\n-\\t\\t\\t\\t\\tnetwork.addWifiAccessPoint(org.traccar.model.WifiAccessPoint.from(\\n-\\t\\t\\t\\t\\tmac.substring(0, ((mac.length()) - 1)), buf.readUnsignedByte()));\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n \\n-\\t\\t\\tposition.setNetwork(network);\\n \\n-\\t\\t}else \\t\\t\\tif (type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_STRING)) {\\n \\n-\\t\\t\\t\\tgetLastLocation(position, null);\\n \\n-\\t\\t\\t\\tint commandLength = buf.readUnsignedByte();\\n \\n-\\t\\t\\t\\tif (commandLength > 0) {\\n-\\t\\t\\t\\t\\tbuf.readUnsignedByte();\\n-\\t\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_RESULT, \\n-\\t\\t\\t\\t\\tbuf.readBytes((commandLength - 1)).toString(java.nio.charset.StandardCharsets.US_ASCII));\\n-\\t\\t\\t\\t}\\n \\n-\\t\\t\\t}else \\t\\t\\t\\tif (org.traccar.protocol.Gt06ProtocolDecoder.isSupported(type)) {\\n \\n-\\t\\t\\t\\t\\tif (org.traccar.protocol.Gt06ProtocolDecoder.hasGps(type)) {\\n-\\t\\t\\t\\t\\t\\tdecodeGps(position, buf, false);\\n-\\t\\t\\t\\t\\t}else {\\n-\\t\\t\\t\\t\\t\\tgetLastLocation(position, null);\\n-\\t\\t\\t\\t\\t}\\n \\n-\\t\\t\\t\\t\\tif (org.traccar.protocol.Gt06ProtocolDecoder.hasLbs(type)) {\\n-\\t\\t\\t\\t\\t\\tdecodeLbs(position, buf, org.traccar.protocol.Gt06ProtocolDecoder.hasStatus(type));\\n-\\t\\t\\t\\t\\t}\\n \\n-\\t\\t\\t\\t\\tif (org.traccar.protocol.Gt06ProtocolDecoder.hasStatus(type)) {\\n-\\t\\t\\t\\t\\t\\tdecodeStatus(position, buf);\\n-\\t\\t\\t\\t\\t}\\n \\n-\\t\\t\\t\\t\\tif ((type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_GPS_LBS_1)) && ((buf.readableBytes()) >= (4 + 6))) {\\n-\\t\\t\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_ODOMETER, buf.readUnsignedInt());\\n-\\t\\t\\t\\t\\t}\\n \\n-\\t\\t\\t\\t\\tif ((type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_GPS_LBS_2)) && ((buf.readableBytes()) >= (3 + 6))) {\\n-\\t\\t\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_IGNITION, ((buf.readUnsignedByte()) > 0));\\n-\\t\\t\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_EVENT, buf.readUnsignedByte());\\n-\\t\\t\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_ARCHIVE, ((buf.readUnsignedByte()) > 0));\\n-\\t\\t\\t\\t\\t}\\n \\n-\\t\\t\\t\\t}else {\\n \\n-\\t\\t\\t\\t\\tbuf.skipBytes(dataLength);\\n-\\t\\t\\t\\t\\tif (((type != (org.traccar.protocol.Gt06ProtocolDecoder.MSG_COMMAND_0)) && (type != (org.traccar.protocol.Gt06ProtocolDecoder.MSG_COMMAND_1))) && (type != (org.traccar.protocol.Gt06ProtocolDecoder.MSG_COMMAND_2))) {\\n-\\t\\t\\t\\t\\t\\tsendResponse(channel, false, type);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\treturn null;\\n \\n-\\t\\t\\t\\t}\\n \\n-\\t\\tsendResponse(channel, false, type);\\n \\n-\\t\\treturn position;\\n-\\t}\\n \\n-\\tprivate java.lang.Object decodeExtended(org.jboss.netty.channel.Channel channel, java.net.SocketAddress remoteAddress, org.jboss.netty.buffer.ChannelBuffer buf) throws java.lang.Exception {\\n \\n-\\t\\torg.traccar.DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);\\n-\\t\\tif (deviceSession == null) {\\n-\\t\\t\\treturn null;\\n-\\t\\t}\\n \\n-\\t\\torg.traccar.model.Position position = new org.traccar.model.Position();\\n-\\t\\tposition.setDeviceId(deviceSession.getDeviceId());\\n-\\t\\tposition.setProtocol(getProtocolName());\\n-\\n-\\t\\tbuf.readUnsignedShort();\\n-\\t\\tint type = buf.readUnsignedByte();\\n-\\n-\\t\\tif (type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_STRING_INFO)) {\\n-\\n-\\t\\t\\tbuf.readUnsignedInt();\\n-\\t\\t\\tjava.lang.String data;\\n-\\t\\t\\tif ((buf.readUnsignedByte()) == 1) {\\n-\\t\\t\\t\\tdata = buf.readBytes(((buf.readableBytes()) - 6)).toString(java.nio.charset.StandardCharsets.US_ASCII);\\n-\\t\\t\\t}else {\\n-\\t\\t\\t\\tdata = buf.readBytes(((buf.readableBytes()) - 6)).toString(java.nio.charset.StandardCharsets.UTF_16BE);\\n-\\t\\t\\t}\\n \\n-\\t\\t\\tif ((decodeLocationString(position, data)) == null) {\\n-\\t\\t\\t\\tgetLastLocation(position, null);\\n-\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_RESULT, data);\\n-\\t\\t\\t}\\n \\n-\\t\\t\\treturn position;\\n \\n-\\t\\t}else \\t\\t\\tif (type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_INFO)) {\\n \\n-\\t\\t\\t\\tint subType = buf.readUnsignedByte();\\n \\n-\\t\\t\\t\\tgetLastLocation(position, null);\\n \\n-\\t\\t\\t\\tif (subType == 0) {\\n \\n-\\t\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_POWER, ((buf.readUnsignedShort()) * 0.01));\\n-\\t\\t\\t\\t\\treturn position;\\n \\n-\\t\\t\\t\\t}else \\t\\t\\t\\t\\tif (subType == 5) {\\n \\n-\\t\\t\\t\\t\\t\\tint flags = buf.readUnsignedByte();\\n-\\t\\t\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_DOOR, org.traccar.helper.BitUtil.check(flags, 0));\\n-\\t\\t\\t\\t\\t\\tposition.set(((org.traccar.model.Position.PREFIX_IO) + 1), org.traccar.helper.BitUtil.check(flags, 2));\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\tposition.set(((org.traccar.model.Position.PREFIX_IO) + 1), org.traccar.helper.BitUtil.check(flags, 2));} \\t\\treturn true;} \\tprivate boolean decodeLbs(org.traccar.model.Position position, org.jboss.netty.buffer.ChannelBuffer buf, boolean hasLength) { \\t\\tint length = 0; \\t\\tif (hasLength) { \\t\\t\\tlength = buf.readUnsignedByte(); \\t\\t\\tif (length == 0) { \\t\\t\\t\\treturn false;}} \\t\\tposition.setNetwork(new org.traccar.model.Network(org.traccar.model.CellTower.from(buf.readUnsignedShort(), buf.readUnsignedByte(), buf.readUnsignedShort(), buf.readUnsignedMedium()))); \\t\\tif (length > 0) { \\t\\t\\tbuf.skipBytes((length - 8));} \\t\\treturn true;} \\tprivate boolean decodeStatus(org.traccar.model.Position position, org.jboss.netty.buffer.ChannelBuffer buf) { \\t\\tint status = buf.readUnsignedByte(); \\t\\tposition.set(org.traccar.model.Position.KEY_STATUS, status); \\t\\tposition.set(org.traccar.model.Position.KEY_IGNITION, org.traccar.helper.BitUtil.check(status, 1)); \\t\\tposition.set(org.traccar.model.Position.KEY_CHARGE, org.traccar.helper.BitUtil.check(status, 2)); \\t\\tposition.set(org.traccar.model.Position.KEY_BLOCKED, org.traccar.helper.BitUtil.check(status, 7)); \\t\\tswitch (org.traccar.helper.BitUtil.between(status, 3, 6)) { \\t\\t\\tcase 1 : \\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_ALARM, org.traccar.model.Position.ALARM_SHOCK); \\t\\t\\t\\tbreak; \\t\\t\\tcase 2 : \\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_ALARM, org.traccar.model.Position.ALARM_POWER_CUT); \\t\\t\\t\\tbreak; \\t\\t\\tcase 3 : \\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_ALARM, org.traccar.model.Position.ALARM_LOW_BATTERY); \\t\\t\\t\\tbreak; \\t\\t\\tcase 4 : \\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_ALARM, org.traccar.model.Position.ALARM_SOS); \\t\\t\\t\\tbreak; \\t\\t\\tdefault : \\t\\t\\t\\tbreak;} \\t\\tposition.set(org.traccar.model.Position.KEY_BATTERY, buf.readUnsignedByte()); \\t\\tposition.set(org.traccar.model.Position.KEY_RSSI, buf.readUnsignedByte()); \\t\\tposition.set(org.traccar.model.Position.KEY_ALARM, decodeAlarm(buf.readUnsignedByte())); \\t\\treturn true;} \\tprivate java.lang.String decodeAlarm(short value) { \\t\\tswitch (value) { \\t\\t\\tcase 1 : \\t\\t\\t\\treturn org.traccar.model.Position.ALARM_SOS; \\t\\t\\tcase 2 : \\t\\t\\t\\treturn org.traccar.model.Position.ALARM_POWER_CUT; \\t\\t\\tcase 3 : \\t\\t\\tcase 9 : \\t\\t\\t\\treturn org.traccar.model.Position.ALARM_VIBRATION; \\t\\t\\tcase 4 : \\t\\t\\t\\treturn org.traccar.model.Position.ALARM_GEOFENCE_ENTER; \\t\\t\\tcase 5 : \\t\\t\\t\\treturn org.traccar.model.Position.ALARM_GEOFENCE_EXIT; \\t\\t\\tcase 6 : \\t\\t\\t\\treturn org.traccar.model.Position.ALARM_OVERSPEED; \\t\\t\\tcase 14 : \\t\\t\\tcase 15 : \\t\\t\\t\\treturn org.traccar.model.Position.ALARM_LOW_BATTERY; \\t\\t\\tcase 17 : \\t\\t\\t\\treturn org.traccar.model.Position.ALARM_POWER_OFF; \\t\\t\\tdefault : \\t\\t\\t\\treturn null;}} \\tprivate static final java.util.regex.Pattern PATTERN_FUEL = new org.traccar.helper.PatternBuilder().text(\\\"!AIOIL,\\\").number(\\\"d+,\\\").number(\\\"d+.d+,\\\").number(\\\"(d+.d+),\\\").expression(\\\"[^,]+,\\\").number(\\\"dd\\\").number(\\\"d\\\").number(\\\"d,\\\").number(\\\"(d+.d+),\\\").expression(\\\"[01],\\\").number(\\\"d+,\\\").number(\\\"xx\\\").compile(); \\tprivate org.traccar.model.Position decodeFuelData(org.traccar.model.Position position, java.lang.String sentence) { \\t\\torg.traccar.helper.Parser parser = new org.traccar.helper.Parser(org.traccar.protocol.Gt06ProtocolDecoder.PATTERN_FUEL, sentence); \\t\\tif (!(parser.matches())) { \\t\\t\\treturn null;} \\t\\tposition.set(((org.traccar.model.Position.PREFIX_TEMP) + 1), parser.nextDouble(0)); \\t\\tposition.set(org.traccar.model.Position.KEY_FUEL_LEVEL, parser.nextDouble(0)); \\t\\treturn position;} \\tprivate static final java.util.regex.Pattern PATTERN_LOCATION = new org.traccar.helper.PatternBuilder().text(\\\"Current position!\\\").number(\\\"Lat:([NS])(d+.d+),\\\").number(\\\"Lon:([EW])(d+.d+),\\\").text(\\\"Course:\\\").number(\\\"(d+.d+),\\\").text(\\\"Speed:\\\").number(\\\"(d+.d+),\\\").text(\\\"DateTime:\\\").number(\\\"(dddd)-(dd)-(dd)  \\\").number(\\\"(dd):(dd):(dd)\\\").compile(); \\tprivate org.traccar.model.Position decodeLocationString(org.traccar.model.Position position, java.lang.String sentence) { \\t\\torg.traccar.helper.Parser parser = new org.traccar.helper.Parser(org.traccar.protocol.Gt06ProtocolDecoder.PATTERN_LOCATION, sentence); \\t\\tif (!(parser.matches())) { \\t\\t\\treturn null;} \\t\\tposition.setValid(true); \\t\\tposition.setLatitude(parser.nextCoordinate(org.traccar.helper.Parser.CoordinateFormat.HEM_DEG)); \\t\\tposition.setLongitude(parser.nextCoordinate(org.traccar.helper.Parser.CoordinateFormat.HEM_DEG)); \\t\\tposition.setCourse(parser.nextDouble()); \\t\\tposition.setSpeed(parser.nextDouble()); \\t\\tposition.setTime(parser.nextDateTime(org.traccar.helper.Parser.DateTimeFormat.YMD_HMS)); \\t\\treturn position;} \\tprivate java.lang.Object decodeBasic(org.jboss.netty.channel.Channel channel, java.net.SocketAddress remoteAddress, org.jboss.netty.buffer.ChannelBuffer buf) throws java.lang.Exception { \\t\\tint length = buf.readUnsignedByte(); \\t\\tint dataLength = length - 5; \\t\\tint type = buf.readUnsignedByte(); \\t\\torg.traccar.DeviceSession deviceSession = null; \\t\\tif (type != (org.traccar.protocol.Gt06ProtocolDecoder.MSG_LOGIN)) { \\t\\t\\tdeviceSession = getDeviceSession(channel, remoteAddress); \\t\\t\\tif (deviceSession == null) { \\t\\t\\t\\treturn null;}} \\t\\tif (type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_LOGIN)) { \\t\\t\\tjava.lang.String imei = org.jboss.netty.buffer.ChannelBuffers.hexDump(buf.readBytes(8)).substring(1); \\t\\t\\tbuf.readUnsignedShort(); \\t\\t\\tif (dataLength > 10) { \\t\\t\\t\\tint extensionBits = buf.readUnsignedShort(); \\t\\t\\t\\tint hours = (extensionBits >> 4) \\/ 100; \\t\\t\\t\\tint minutes = (extensionBits >> 4) % 100; \\t\\t\\t\\tint offset = ((hours * 60) + minutes) * 60; \\t\\t\\t\\tif ((extensionBits & 8) != 0) { \\t\\t\\t\\t\\toffset = -offset;} \\t\\t\\t\\tif (!(forceTimeZone)) { \\t\\t\\t\\t\\ttimeZone.setRawOffset((offset * 1000));}} \\t\\t\\tif ((getDeviceSession(channel, remoteAddress, imei)) != null) { \\t\\t\\t\\tsendResponse(channel, false, type);}}else \\t\\t\\tif (type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_X1_GPS)) { \\t\\t\\t\\torg.traccar.model.Position position = new org.traccar.model.Position(); \\t\\t\\t\\tposition.setDeviceId(deviceSession.getDeviceId()); \\t\\t\\t\\tposition.setProtocol(getProtocolName()); \\t\\t\\t\\tbuf.readUnsignedInt(); \\t\\t\\t\\tdecodeGps(position, buf, false); \\t\\t\\t\\tbuf.readUnsignedShort(); \\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_ODOMETER, buf.readUnsignedInt()); \\t\\t\\t\\tposition.setNetwork(new org.traccar.model.Network(org.traccar.model.CellTower.from(buf.readUnsignedShort(), buf.readUnsignedByte(), buf.readUnsignedShort(), buf.readUnsignedInt()))); \\t\\t\\t\\treturn position;}else \\t\\t\\t\\tif (type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_X1_PHOTO_INFO)) { \\t\\t\\t\\t\\tbuf.skipBytes(6); \\t\\t\\t\\t\\tbuf.readUnsignedByte(); \\t\\t\\t\\t\\tbuf.readUnsignedInt(); \\t\\t\\t\\t\\tbuf.readUnsignedInt(); \\t\\t\\t\\t\\tbuf.readUnsignedByte(); \\t\\t\\t\\t\\tbuf.readUnsignedByte(); \\t\\t\\t\\t\\tbuf.readUnsignedByte(); \\t\\t\\t\\t\\torg.jboss.netty.buffer.ChannelBuffer photo = org.jboss.netty.buffer.ChannelBuffers.buffer(buf.readInt()); \\t\\t\\t\\t\\tint pictureId = buf.readInt(); \\t\\t\\t\\t\\tphotos.put(pictureId, photo); \\t\\t\\t\\t\\tsendPhotoRequest(channel, pictureId);}else { \\t\\t\\t\\t\\treturn decodeBasicOther(channel, buf, deviceSession, type, dataLength);} \\t\\treturn null;} \\tprivate java.lang.Object decodeBasicOther(org.jboss.netty.channel.Channel channel, org.jboss.netty.buffer.ChannelBuffer buf, org.traccar.DeviceSession deviceSession, int type, int dataLength) throws java.lang.Exception { \\t\\torg.traccar.model.Position position = new org.traccar.model.Position(); \\t\\tposition.setDeviceId(deviceSession.getDeviceId()); \\t\\tposition.setProtocol(getProtocolName()); \\t\\tif (((type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_LBS_MULTIPLE)) || (type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_LBS_EXTEND))) || (type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_LBS_WIFI))) { \\t\\t\\torg.traccar.helper.DateBuilder dateBuilder = new org.traccar.helper.DateBuilder(timeZone).setDate(buf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte()).setTime(buf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte()); \\t\\t\\tgetLastLocation(position, dateBuilder.getDate()); \\t\\t\\tint mcc = buf.readUnsignedShort(); \\t\\t\\tint mnc = buf.readUnsignedByte(); \\t\\t\\torg.traccar.model.Network network = new org.traccar.model.Network(); \\t\\t\\tfor (int i = 0; i < 7; i++) { \\t\\t\\t\\tint lac = buf.readUnsignedShort(); \\t\\t\\t\\tint cid = buf.readUnsignedMedium(); \\t\\t\\t\\tint rssi = -(buf.readUnsignedByte()); \\t\\t\\t\\tif (lac > 0) { \\t\\t\\t\\t\\tnetwork.addCellTower(org.traccar.model.CellTower.from(mcc, mnc, lac, cid, rssi));}} \\t\\t\\tbuf.readUnsignedByte(); \\t\\t\\tif (type != (org.traccar.protocol.Gt06ProtocolDecoder.MSG_LBS_MULTIPLE)) { \\t\\t\\t\\tint wifiCount = buf.readUnsignedByte(); \\t\\t\\t\\tfor (int i = 0; i < wifiCount; i++) { \\t\\t\\t\\t\\tjava.lang.String mac = org.jboss.netty.buffer.ChannelBuffers.hexDump(buf.readBytes(6)).replaceAll(\\\"(..)\\\", \\\"$1:\\\"); \\t\\t\\t\\t\\tnetwork.addWifiAccessPoint(org.traccar.model.WifiAccessPoint.from(mac.substring(0, ((mac.length()) - 1)), buf.readUnsignedByte()));}} \\t\\t\\tposition.setNetwork(network);}else \\t\\t\\tif (type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_STRING)) { \\t\\t\\t\\tgetLastLocation(position, null); \\t\\t\\t\\tint commandLength = buf.readUnsignedByte(); \\t\\t\\t\\tif (commandLength > 0) { \\t\\t\\t\\t\\tbuf.readUnsignedByte(); \\t\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_RESULT, buf.readBytes((commandLength - 1)).toString(java.nio.charset.StandardCharsets.US_ASCII));}}else \\t\\t\\t\\tif (org.traccar.protocol.Gt06ProtocolDecoder.isSupported(type)) { \\t\\t\\t\\t\\tif (org.traccar.protocol.Gt06ProtocolDecoder.hasGps(type)) { \\t\\t\\t\\t\\t\\tdecodeGps(position, buf, false);}else { \\t\\t\\t\\t\\t\\tgetLastLocation(position, null);} \\t\\t\\t\\t\\tif (org.traccar.protocol.Gt06ProtocolDecoder.hasLbs(type)) { \\t\\t\\t\\t\\t\\tdecodeLbs(position, buf, org.traccar.protocol.Gt06ProtocolDecoder.hasStatus(type));} \\t\\t\\t\\t\\tif (org.traccar.protocol.Gt06ProtocolDecoder.hasStatus(type)) { \\t\\t\\t\\t\\t\\tdecodeStatus(position, buf);} \\t\\t\\t\\t\\tif ((type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_GPS_LBS_1)) && ((buf.readableBytes()) >= (4 + 6))) { \\t\\t\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_ODOMETER, buf.readUnsignedInt());} \\t\\t\\t\\t\\tif ((type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_GPS_LBS_2)) && ((buf.readableBytes()) >= (3 + 6))) { \\t\\t\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_IGNITION, ((buf.readUnsignedByte()) > 0)); \\t\\t\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_EVENT, buf.readUnsignedByte()); \\t\\t\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_ARCHIVE, ((buf.readUnsignedByte()) > 0));}}else { \\t\\t\\t\\t\\tbuf.skipBytes(dataLength); \\t\\t\\t\\t\\tif (((type != (org.traccar.protocol.Gt06ProtocolDecoder.MSG_COMMAND_0)) && (type != (org.traccar.protocol.Gt06ProtocolDecoder.MSG_COMMAND_1))) && (type != (org.traccar.protocol.Gt06ProtocolDecoder.MSG_COMMAND_2))) { \\t\\t\\t\\t\\t\\tsendResponse(channel, false, type);} \\t\\t\\t\\t\\treturn null;} \\t\\tsendResponse(channel, false, type); \\t\\treturn position;} \\tprivate java.lang.Object decodeExtended(org.jboss.netty.channel.Channel channel, java.net.SocketAddress remoteAddress, org.jboss.netty.buffer.ChannelBuffer buf) throws java.lang.Exception { \\t\\torg.traccar.DeviceSession deviceSession = getDeviceSession(channel, remoteAddress); \\t\\tif (deviceSession == null) { \\t\\t\\treturn null;} \\t\\torg.traccar.model.Position position = new org.traccar.model.Position(); \\t\\tposition.setDeviceId(deviceSession.getDeviceId()); \\t\\tposition.setProtocol(getProtocolName()); \\t\\tbuf.readUnsignedShort(); \\t\\tint type = buf.readUnsignedByte(); \\t\\tif (type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_STRING_INFO)) { \\t\\t\\tbuf.readUnsignedInt(); \\t\\t\\tjava.lang.String data; \\t\\t\\tif ((buf.readUnsignedByte()) == 1) { \\t\\t\\t\\tdata = buf.readBytes(((buf.readableBytes()) - 6)).toString(java.nio.charset.StandardCharsets.US_ASCII);}else { \\t\\t\\t\\tdata = buf.readBytes(((buf.readableBytes()) - 6)).toString(java.nio.charset.StandardCharsets.UTF_16BE);} \\t\\t\\tif ((decodeLocationString(position, data)) == null) { \\t\\t\\t\\tgetLastLocation(position, null); \\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_RESULT, data);} \\t\\t\\treturn position;}else \\t\\t\\tif (type == (org.traccar.protocol.Gt06ProtocolDecoder.MSG_INFO)) { \\t\\t\\t\\tint subType = buf.readUnsignedByte(); \\t\\t\\t\\tgetLastLocation(position, null); \\t\\t\\t\\tif (subType == 0) { \\t\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_POWER, ((buf.readUnsignedShort()) * 0.01)); \\t\\t\\t\\t\\treturn position;}else \\t\\t\\t\\t\\tif (subType == 5) { \\t\\t\\t\\t\\t\\tint flags = buf.readUnsignedByte(); \\t\\t\\t\\t\\t\\tposition.set(org.traccar.model.Position.KEY_DOOR, org.traccar.helper.BitUtil.check(flags, 0)); \\t\\t\\t\\t\\t\\tposition.set(((org.traccar.model.Position.PREFIX_IO) + 1), org.traccar.helper.BitUtil.check(flags, 2));\\n \\t\\t\\t\\t\\t\\treturn position;\\n \\n \\t\\t\\t\\t\\t}else \\t\\t\\t\\t\\t\\tif (subType == 13) {\\n\\n", 
      "patchhunks": [
        {
          "MODIFIED_FILE_PATH": "\\/tmp\\/jGenProg_Bears_traccar-traccar_269449386-269490884\\/.\\/output_astor\\/AstorMain-traccar-traccar-269449386-269490884\\/\\/src\\/\\/variant-764_f\\/org\\/traccar\\/protocol\\/Gt06ProtocolDecoder.java", 
          "ORIGINAL_CODE": "buf.skipBytes((length - 12))", 
          "INGREDIENT_SCOPE": "LOCAL", 
          "PATCH_HUNK_CODE": "position.set(((org.traccar.model.Position.PREFIX_IO) + 1), org.traccar.helper.BitUtil.check(flags, 2))", 
          "INGREDIENT_PARENT": "position.set(((org.traccar.model.Position.PREFIX_IO) + 1), org.traccar.helper.BitUtil.check(flags, 2))", 
          "LOCATION": "org.traccar.protocol.Gt06ProtocolDecoder", 
          "BUGGY_CODE_TYPE": "CtInvocationImpl|CtBlockImpl", 
          "OPERATOR": "ReplaceOp", 
          "PATH": "\\/tmp\\/jGenProg_Bears_traccar-traccar_269449386-269490884\\/output_astor\\/AstorMain-traccar-traccar-269449386-269490884\\/src\\/default\\/org\\/traccar\\/protocol\\/Gt06ProtocolDecoder.java", 
          "LINE": "185", 
          "MP_RANKING": "28", 
          "SUSPICIOUNESS": "1", 
          "PATCH_HUNK_TYPE": "CtInvocationImpl|CtBlockImpl"
        }
      ], 
      "GENERATION": "382", 
      "VARIANT_ID": "764", 
      "TIME": "374", 
      "VALIDATION": "|true|0|275|[]|", 
      "FOLDER_SOLUTION_CODE": "\\/tmp\\/jGenProg_Bears_traccar-traccar_269449386-269490884\\/.\\/output_astor\\/AstorMain-traccar-traccar-269449386-269490884\\/\\/bin\\/\\/variant-764"
    }
  ]
}