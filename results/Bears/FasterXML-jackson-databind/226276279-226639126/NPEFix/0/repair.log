cd /tmp/NPEFix_Bears_FasterXML-jackson-databind_226276279-226639126;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4g -Xms1g -cp /home/tdurieux/defects4j4repair/script/../repair_tools/npefix.jar fr.inria.spirals.npefix.main.run.Main \
    --test com.fasterxml.jackson.databind.ser.BeanSerializerModifier1612Test \
    --iteration 100 \
	--complianceLevel 8 \
	--workingdirectory . \
	--source src/main/java \
	--classpath target/classes:target/test-classes:/home/tdurieux/.m2/repository/org/powermock/powermock-module-junit4-common/1.6.5/powermock-module-junit4-common-1.6.5.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-core/1.6.5/powermock-core-1.6.5.jar:/home/tdurieux/.m2/repository/javax/measure/jsr-275/0.9.1/jsr-275-0.9.1.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0.pr3/jackson-annotations-2.9.0.pr3.jar:/home/tdurieux/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/tdurieux/.m2/repository/com/google/jimfs/jimfs/1.1/jimfs-1.1.jar:/home/tdurieux/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.0.pr3/jackson-core-2.9.0.pr3.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-reflect/1.6.5/powermock-reflect-1.6.5.jar:/home/tdurieux/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-api-support/1.6.5/powermock-api-support-1.6.5.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-api-mockito/1.6.5/powermock-api-mockito-1.6.5.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-module-junit4/1.6.5/powermock-module-junit4-1.6.5.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/.m2/repository/org/mockito/mockito-core/1.10.19/mockito-core-1.10.19.jar:/home/tdurieux/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/home/tdurieux/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/tdurieux/.m2/repository/org/powermock/powermock-api-mockito-common/1.6.5/powermock-api-mockito-common-1.6.5.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
TernarySplitter  in 304ms
boolean wrap = (ctxt == null) || (ctxt.isEnabled(DeserializationFeature.WRAP_EXCEPTIONS))
return ((_objectIdReader) == null) || ((_idValue) != null)
return ((_objectIdReader) == null) || ((_idValue) != null)
return (other.schema) == null
super((prop == null ? PropertyMetadata.STD_REQUIRED_OR_OPTIONAL : prop.getMetadata()))
return (_match) != null
boolean override = (gen.getCharacterEscapes()) == null
boolean wrap = (ctxt == null) || (ctxt.isEnabled(DeserializationFeature.WRAP_EXCEPTIONS))
return new AnnotatedConstructor(_typeContext, ctor.getConstructor(), collectAnnotations(ctor, mixin), collectAnnotations(ctor.getConstructor().getParameterAnnotations(), (mixin == null ? null : mixin.getConstructor().getParameterAnnotations())))
resolvedAnnotations = collectAnnotations(paramAnns, (mixin == null ? null : mixin.getParameterAnnotations()))
return new AnnotatedMethod(_typeContext, m, collectAnnotations(m, mixin), collectAnnotations(m.getParameterAnnotations(), (mixin == null ? null : mixin.getParameterAnnotations())))
return (_namespace) != null
return ((_namespace) == null) && (_simpleName.isEmpty())
return null == (other._namespace)
@SuppressWarnings("deprecation")
boolean trimEmptyArray = (provider != null) && (!(provider.isEnabled(SerializationFeature.WRITE_EMPTY_JSON_ARRAYS)))
@SuppressWarnings("deprecation")
boolean trimEmptyArray = (provider != null) && (!(provider.isEnabled(SerializationFeature.WRITE_EMPTY_JSON_ARRAYS)))
return _put(fieldName, (v == null ? nullNode() : numberNode(v.shortValue())))
return _put(fieldName, (v == null ? nullNode() : numberNode(v.intValue())))
return _put(fieldName, (v == null ? nullNode() : numberNode(v.longValue())))
return _put(fieldName, (v == null ? nullNode() : numberNode(v.floatValue())))
return _put(fieldName, (v == null ? nullNode() : numberNode(v.doubleValue())))
return _put(fieldName, (v == null ? nullNode() : numberNode(v)))
return _put(fieldName, (v == null ? nullNode() : numberNode(v)))
return _put(fieldName, (v == null ? nullNode() : textNode(v)))
return _put(fieldName, (v == null ? nullNode() : booleanNode(v.booleanValue())))
return _put(fieldName, (v == null ? nullNode() : binaryNode(v)))
_nonStandardCreation = (((((_unwrappedPropertyHandler) != null) || (_valueInstantiator.canCreateUsingDelegate())) || (_valueInstantiator.canCreateUsingArrayDelegate())) || (_valueInstantiator.canCreateFromObjectWith())) || (!(_valueInstantiator.canCreateUsingDefault()))
_vanillaProcessing = (((!(_nonStandardCreation)) && ((_injectables) == null)) && (!(_needViewProcesing))) && ((_objectIdReader) == null)
_vanillaProcessing = (((!(_nonStandardCreation)) && ((_injectables) == null)) && (!(_needViewProcesing))) && ((_objectIdReader) == null)
_ignoreAllUnknown = (unwrapper != null) || (src._ignoreAllUnknown)
return (_beanProperties.find(propertyName)) != null
boolean wrap = (ctxt == null) || (ctxt.isEnabled(DeserializationFeature.WRAP_EXCEPTIONS))
boolean wrap = (ctxt == null) || (ctxt.isEnabled(DeserializationFeature.WRAP_EXCEPTIONS))
final boolean isCreator = (creatorMode != null) && (creatorMode != (DISABLED))
final boolean isCreator = (creatorMode != null) && (creatorMode != (DISABLED))
return (mode != null) && (mode != (DISABLED))
return _newWriter(getSerializationConfig(), (rootType == null ? null : _typeFactory.constructType(rootType)), null)
return _newWriter(getSerializationConfig(), (rootType == null ? null : _typeFactory.constructType(rootType)), null)
return _newWriter(getSerializationConfig(), (rootType == null ? null : _typeFactory.constructType(rootType)), null)
return _newWriter(getSerializationConfig(), (rootType == null ? null : _typeFactory.constructType(rootType)), null)
boolean noType = (newType == null) || (newType.isJavaLangObject())
return ((valueSerializer) != null) || ((typeSerializer) != null)
return ((valueSerializer) != null) || ((typeSerializer) != null)
return (_name) != null
return ((("[NamedType, class " + (_class.getName())) + ", name: ") + ((_name) == null ? "null" : ("'" + (_name)) + "'")) + "]"
sb.append("[ClassStack (self-refs: ").append(((_selfRefs) == null ? "0" : String.valueOf(_selfRefs.size()))).append(')')
boolean canWrap = ((_unwrapSingle) == (Boolean.TRUE)) || (((_unwrapSingle) == null) && (ctxt.isEnabled(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY)))
return (_creators[CreatorCollector.C_DEFAULT]) != null
return (_creators[CreatorCollector.C_DELEGATE]) != null
return (_creators[CreatorCollector.C_PROPS]) != null
return (_fromStringCreator) != null
return (_fromIntCreator) != null
return (_fromLongCreator) != null
return (_fromDoubleCreator) != null
return (_fromBooleanCreator) != null
return (_defaultCreator) != null
return (_delegateType) != null
return (_arrayDelegateType) != null
return (_withArgsCreator) != null
return (get(fieldName)) != null
return (get(index)) != null
return (n != null) && (!(n.isNull()))
return (n != null) && (!(n.isNull()))
staticValueType = (valueType != null) && (valueType.isFinal())
return (findProperty(propertyName)) != null
return (pkgName != null) && (pkgName.startsWith("groovy.lang"))
return (pkgName != null) && (pkgName.startsWith("groovy.lang"))
return ((_referringProperties) != null) && (!(_referringProperties.isEmpty()))
boolean hasPrefix = (prefix != null) && ((prefix.length()) > 0)
boolean hasSuffix = (suffix != null) && ((suffix.length()) > 0)
return (((_valueDeserializer) == null) && ((_keyDeserializer) == null)) && ((_valueTypeDeserializer) == null)
return (((_valueDeserializer) == null) && ((_keyDeserializer) == null)) && ((_valueTypeDeserializer) == null)
return (((_valueDeserializer) == null) && ((_keyDeserializer) == null)) && ((_valueTypeDeserializer) == null)
return (findProperty(name)) != null
return (_valueHandler) != null
return ((_typeHandler) != null) || ((_valueHandler) != null)
return ((_typeHandler) != null) || ((_valueHandler) != null)
return ((_lenient) == null) || (_lenient.booleanValue())
return (value1 != null) && (value1.equals(value2))
return (_unwrapper) != null
return (_timeZone) != null
throw new IllegalArgumentException(("Unrecognized Type: " + (type == null ? "[null]" : type.toString())))
boolean usingIdentityInfo = ((_objectIdInfo) != null) || ((_valueDeserializer.getObjectIdReader()) != null)
boolean usingIdentityInfo = ((_objectIdInfo) != null) || ((_valueDeserializer.getObjectIdReader()) != null)
return ((_elementDeserializer) == null) && ((_elementTypeDeserializer) == null)
return ((_elementDeserializer) == null) && ((_elementTypeDeserializer) == null)
boolean canWrap = ((_unwrapSingle) == (Boolean.TRUE)) || (((_unwrapSingle) == null) && (ctxt.isEnabled(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY)))
return (_objectIdWriter) != null
b = (type.getAnnotation(JacksonAnnotationsInside.class)) != null
return (ann != null) && (ann.value())
return deser != null
return ((ct.getValueHandler()) != null) || ((ct.getTypeHandler()) != null)
return ((ct.getValueHandler()) != null) || ((ct.getTypeHandler()) != null)
boolean hasName = pn != null
boolean visible = pn != null
boolean expl = (pn != null) && (!(pn.isEmpty()))
boolean nameExplicit = pn != null
boolean nameExplicit = pn != null
return (next) != null
return (_getters) != null
return (_setters) != null
return (_fields) != null
return (_ctorParameters) != null
return (((_ctorParameters) != null) || ((_setters) != null)) || ((_fields) != null)
return (((_ctorParameters) != null) || ((_setters) != null)) || ((_fields) != null)
return (((_ctorParameters) != null) || ((_setters) != null)) || ((_fields) != null)
return ((_getters) != null) || ((_fields) != null)
return ((_getters) != null) || ((_fields) != null)
return (b != null) && (b.booleanValue())
return ser != null
boolean wrap = (provider == null) || (provider.isEnabled(SerializationFeature.WRAP_EXCEPTIONS))
boolean wrap = (provider == null) || (provider.isEnabled(SerializationFeature.WRAP_EXCEPTIONS))
return (a != null) && (b != null)
return (a != null) && (b != null)
return (c != null) && (!(c.isEmpty()))
return ((_valueDeserializer) != null) && ((_valueDeserializer) != (SettableBeanProperty.MISSING_VALUE_DESERIALIZER))
return (_valueTypeDeserializer) != null
return ((_viewMatcher) == null) || (_viewMatcher.isVisibleForView(activeView))
return (_viewMatcher) != null
return (_serializer) != null
return (_nullSerializer) != null
return ((_properties) != null) && ((_properties.size()) > 0)
return (value == null) || ((value.size()) == 0)
return value == null
_staticTyping = staticTyping || ((et != null) && (et.isFinal()))
_staticTyping = staticTyping || ((et != null) && (et.isFinal()))
return ((_valueDeserializer) == null) && ((_delegateDeserializer) == null)
return ((_valueDeserializer) == null) && ((_delegateDeserializer) == null)
boolean canWrap = ((_unwrapSingle) == (Boolean.TRUE)) || (((_unwrapSingle) == null) && (ctxt.isEnabled(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY)))
boolean canWrap = ((_unwrapSingle) == (Boolean.TRUE)) || (((_unwrapSingle) == null) && (ctxt.isEnabled(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY)))
return (getDefaultCreator()) != null
return (_nativeIds) != null
boolean canWrap = ((_unwrapSingle) == (Boolean.TRUE)) || (((_unwrapSingle) == null) && (ctxt.isEnabled(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY)))
return ((((_valueDeserializer) == null) && ((_keyDeserializer) == null)) && ((_valueTypeDeserializer) == null)) && ((_ignorableProperties) == null)
return ((((_valueDeserializer) == null) && ((_keyDeserializer) == null)) && ((_valueTypeDeserializer) == null)) && ((_ignorableProperties) == null)
return ((((_valueDeserializer) == null) && ((_keyDeserializer) == null)) && ((_valueTypeDeserializer) == null)) && ((_ignorableProperties) == null)
return ((((_valueDeserializer) == null) && ((_keyDeserializer) == null)) && ((_valueTypeDeserializer) == null)) && ((_ignorableProperties) == null)
boolean useObjectId = (valueDes.getObjectIdReader()) != null
boolean useObjectId = (valueDes.getObjectIdReader()) != null
return value == null
return (_defaultValue) != null
return ((_required) != null) && (_required.booleanValue())
return (_index) != null
return ((_value) != null) && (_value.equals(other._value))
return (value.get()) != null
return (previous == null) || (!(previous.equals(ann)))
return (getMutator()) != null
return (getAccessor()) != null
return (other._value) == null
return ((ClassUtil.canBeABeanType(type)) == null) && (!(ClassUtil.isProxyType(type)))
return (_valueDeserializer) != null
return (!(Modifier.isStatic(cls.getModifiers()))) && ((ClassUtil.getEnclosingClass(cls)) != null)
return (inst != null) && ((inst.getClass()) == raw)
return (impl == null) || (ClassUtil.isJacksonStdImpl(impl.getClass()))
return (implClass.getAnnotation(JacksonStdImpl.class)) != null
return (!(ClassUtil.isObjectOrPrimitive(cls))) && ((cls.getEnclosingMethod()) != null)
return (_typeDeserializer.getDefaultImpl()) != null
boolean canDeserialize = (bean != null) && ((_tokens[index]) != null)
boolean canDeserialize = (bean != null) && ((_tokens[index]) != null)
canDeserialize = (bean != null) && ((_tokens[index]) != null)
canDeserialize = (bean != null) && ((_tokens[index]) != null)
canDeserialize = (bean != null) && ((_typeIds[index]) != null)
canDeserialize = (bean != null) && ((_typeIds[index]) != null)
return (((_valueDeserializer) == null) && ((_valueTypeDeserializer) == null)) && ((_delegateDeserializer) == null)
return (((_valueDeserializer) == null) && ((_valueTypeDeserializer) == null)) && ((_delegateDeserializer) == null)
return (((_valueDeserializer) == null) && ((_valueTypeDeserializer) == null)) && ((_delegateDeserializer) == null)
boolean wrap = (ctxt == null) || (ctxt.isEnabled(DeserializationFeature.WRAP_EXCEPTIONS))
boolean canWrap = ((_unwrapSingle) == (Boolean.TRUE)) || (((_unwrapSingle) == null) && (ctxt.isEnabled(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY)))
return ((_pushbackToken) != null) || (super.hasMoreTokens())
return (getGetter()) != null
return (getSetter()) != null
final boolean hasCreatorProps = creatorProps != null
CheckNotNull  in 2173ms
ForceNullInit in 396ms
AddImplicitCastChecker --> 0 in 479ms
BeforeDeref --> 8908 (failed:0) in 1469ms
target--> 10682 (failed:0) in 8604ms
TryRegister # Try: 263 in 369ms
Assign --> 6431 (failed: 0) in 5267ms
VarInit --> 1801 in 941ms
MethodEncapsulation # Method: 5929 in 6772ms
ConstructorEncapsulation # Constructor: 815 in 1592ms
VariableFor in 769ms
Exception in thread "main" spoon.SpoonException: spoon.SpoonException: Cannot create MethodTypingContext for method declared in different ClassTypingContext
	at spoon.Launcher.prettyprint(Launcher.java:729)
	at fr.inria.spirals.npefix.main.all.Launcher.instrument(Launcher.java:107)
	at fr.inria.spirals.npefix.main.run.Main.run(Main.java:61)
	at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)
Caused by: spoon.SpoonException: Cannot create MethodTypingContext for method declared in different ClassTypingContext
	at spoon.support.visitor.MethodTypingContext.setMethod(MethodTypingContext.java:71)
	at spoon.support.visitor.ClassTypingContext.isSameSignature(ClassTypingContext.java:616)
	at spoon.support.visitor.ClassTypingContext.isSameSignature(ClassTypingContext.java:312)
	at spoon.support.reflect.declaration.CtTypeImpl$2.accept(CtTypeImpl.java:959)
	at spoon.support.reflect.declaration.CtTypeImpl$2.accept(CtTypeImpl.java:955)
	at spoon.reflect.visitor.chain.CtQueryImpl$OutputFunctionWrapper._accept(CtQueryImpl.java:444)
	at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:308)
	at spoon.reflect.visitor.filter.AllTypeMembersFunction$1.accept(AllTypeMembersFunction.java:78)
	at spoon.reflect.visitor.filter.AllTypeMembersFunction$1.accept(AllTypeMembersFunction.java:73)
	at spoon.reflect.visitor.chain.CtQueryImpl$OutputFunctionWrapper._accept(CtQueryImpl.java:444)
	at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:308)
	at spoon.reflect.visitor.filter.SuperInheritanceHierarchyFunction.sendResult(SuperInheritanceHierarchyFunction.java:360)
	at spoon.reflect.visitor.filter.SuperInheritanceHierarchyFunction.visitSuperInterfaces(SuperInheritanceHierarchyFunction.java:308)
	at spoon.reflect.visitor.filter.SuperInheritanceHierarchyFunction.visitSuperClasses(SuperInheritanceHierarchyFunction.java:266)
	at spoon.reflect.visitor.filter.SuperInheritanceHierarchyFunction.apply(SuperInheritanceHierarchyFunction.java:248)
	at spoon.reflect.visitor.filter.SuperInheritanceHierarchyFunction.apply(SuperInheritanceHierarchyFunction.java:51)
	at spoon.reflect.visitor.chain.CtQueryImpl$LazyFunctionWrapper._accept(CtQueryImpl.java:478)
	at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:308)
	at spoon.reflect.visitor.chain.CtQueryImpl.forEach(CtQueryImpl.java:94)
	at spoon.reflect.visitor.filter.AllTypeMembersFunction.apply(AllTypeMembersFunction.java:73)
	at spoon.reflect.visitor.filter.AllTypeMembersFunction.apply(AllTypeMembersFunction.java:36)
	at spoon.reflect.visitor.chain.CtQueryImpl$LazyFunctionWrapper._accept(CtQueryImpl.java:478)
	at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:308)
	at spoon.reflect.visitor.chain.CtQueryImpl.forEach(CtQueryImpl.java:94)
	at spoon.support.reflect.declaration.CtTypeImpl.getAllMethods(CtTypeImpl.java:955)
	at spoon.reflect.visitor.ImportScannerImpl.isInCollisionWithLocalMethod(ImportScannerImpl.java:408)
	at spoon.reflect.visitor.ImportScannerImpl.addMethodImport(ImportScannerImpl.java:431)
	at spoon.reflect.visitor.ImportScannerImpl.visitCtExecutableReference(ImportScannerImpl.java:106)
	at spoon.support.reflect.reference.CtExecutableReferenceImpl.accept(CtExecutableReferenceImpl.java:84)
	at spoon.reflect.visitor.ImportScannerImpl.scan(ImportScannerImpl.java:135)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:157)
	at spoon.reflect.visitor.CtScanner.visitCtInvocation(CtScanner.java:495)
	at spoon.support.reflect.code.CtInvocationImpl.accept(CtInvocationImpl.java:56)
	at spoon.reflect.visitor.ImportScannerImpl.scan(ImportScannerImpl.java:135)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:157)
	at spoon.reflect.visitor.CtScanner.visitCtField(CtScanner.java:405)
	at spoon.support.reflect.declaration.CtFieldImpl.accept(CtFieldImpl.java:67)
	at spoon.reflect.visitor.ImportScannerImpl.scan(ImportScannerImpl.java:135)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:157)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:327)
	at spoon.reflect.visitor.ImportScannerImpl.visitCtClass(ImportScannerImpl.java:173)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:68)
	at spoon.reflect.visitor.ImportScannerImpl.scan(ImportScannerImpl.java:135)
	at spoon.reflect.visitor.ImportScannerImpl.computeImports(ImportScannerImpl.java:200)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.computeImports(DefaultJavaPrettyPrinter.java:284)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.calculate(DefaultJavaPrettyPrinter.java:1794)
	at spoon.support.JavaOutputProcessor.createJavaFile(JavaOutputProcessor.java:134)
	at spoon.support.JavaOutputProcessor.process(JavaOutputProcessor.java:174)
	at spoon.support.JavaOutputProcessor.process(JavaOutputProcessor.java:44)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:74)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:157)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.reflect.visitor.CtScanner.visitCtPackage(CtScanner.java:640)
	at spoon.support.reflect.declaration.CtPackageImpl.accept(CtPackageImpl.java:56)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:165)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:77)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:157)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.reflect.visitor.CtScanner.visitCtPackage(CtScanner.java:639)
	at spoon.support.reflect.declaration.CtPackageImpl.accept(CtPackageImpl.java:56)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:165)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:77)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:157)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.reflect.visitor.CtScanner.visitCtPackage(CtScanner.java:639)
	at spoon.support.reflect.declaration.CtPackageImpl.accept(CtPackageImpl.java:56)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:165)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:77)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:157)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.reflect.visitor.CtScanner.visitCtPackage(CtScanner.java:639)
	at spoon.support.reflect.declaration.CtPackageImpl.accept(CtPackageImpl.java:56)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:165)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:77)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:157)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.reflect.visitor.CtScanner.visitCtPackage(CtScanner.java:639)
	at spoon.support.reflect.declaration.CtPackageImpl.accept(CtPackageImpl.java:56)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:165)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:77)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:157)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.reflect.visitor.CtScanner.visitCtPackage(CtScanner.java:639)
	at spoon.support.reflect.declaration.CtPackageImpl.accept(CtPackageImpl.java:56)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:165)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:77)
	at spoon.support.QueueProcessingManager.process(QueueProcessingManager.java:119)
	at spoon.support.QueueProcessingManager.process(QueueProcessingManager.java:131)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFilesUsingTypes(JDTBasedSpoonCompiler.java:439)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.generateProcessedSourceFiles(JDTBasedSpoonCompiler.java:195)
	at spoon.Launcher.prettyprint(Launcher.java:727)
	... 3 more
Command exited with non-zero status 1
85.71user 1.34system 0:39.72elapsed 219%CPU (0avgtext+0avgdata 1875236maxresident)k
20928inputs+560outputs (1major+488545minor)pagefaults 0swaps


Node: graphene-62.nancy.grid5000.fr



Date: Thu Feb 14 15:49:18 EST 2019

