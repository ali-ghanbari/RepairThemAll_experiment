cd /tmp/NPEFix_Bears_classgraph-classgraph_448207270-449613955;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/RepairThemAll/script/../repair_tools/npefix.jar fr.inria.spirals.npefix.main.run.Main \
    --test io.github.classgraph.issues.issue277.Issue227Test \
    --iteration 100 \
	--complianceLevel 8 \
	--workingdirectory . \
	--source src/main/java \
	--classpath target/classes:target/test-classes:/home/tdurieux/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tdurieux/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:/home/tdurieux/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.19/jmh-generator-annprocess-1.19.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-aether-support/2.5.4/pax-url-aether-support-2.5.4.jar:/home/tdurieux/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/tdurieux/.m2/repository/org/openjdk/jmh/jmh-core/1.19/jmh-core-1.19.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-api/1.8.0-beta2/slf4j-api-1.8.0-beta2.jar:/home/tdurieux/.m2/repository/org/jboss/spec/javax/interceptor/jboss-interceptors-api_1.1_spec/1.0.0.Beta1/jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar:/home/tdurieux/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar:/home/tdurieux/.m2/repository/org/eclipse/aether/aether-spi/1.0.2.v20150114/aether-spi-1.0.2.v20150114.jar:/home/tdurieux/.m2/repository/org/ops4j/pax/url/pax-url-aether/2.5.4/pax-url-aether-2.5.4.jar:/home/tdurieux/.m2/repository/org/slf4j/slf4j-jdk14/1.8.0-beta2/slf4j-jdk14-1.8.0-beta2.jar:/home/tdurieux/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.2.Final/hibernate-jpa-2.1-api-1.0.2.Final.jar:/home/tdurieux/.m2/repository/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar:/home/tdurieux/.m2/repository/javax/enterprise/cdi-api/1.0-SP4/cdi-api-1.0-SP4.jar:/home/tdurieux/.m2/repository/org/eclipse/aether/aether-util/1.0.2.v20150114/aether-util-1.0.2.v20150114.jar:/home/tdurieux/.m2/repository/org/slf4j/jcl-over-slf4j/1.6.6/jcl-over-slf4j-1.6.6.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/.m2/repository/org/eclipse/aether/aether-impl/1.0.2.v20150114/aether-impl-1.0.2.v20150114.jar:/home/tdurieux/.m2/repository/org/eclipse/aether/aether-api/1.0.2.v20150114/aether-api-1.0.2.v20150114.jar:/home/tdurieux/.m2/repository/org/assertj/assertj-core/3.10.0/assertj-core-3.10.0.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
TernarySplitter  in 167ms
final boolean instantiate = annotationClassInfo != null
eltClass = ((elt.longValue) != null) ? Long.class : (elt.shortValue) != null ? Short.class : (elt.characterValue) != null ? Character.class : (elt.byteValue) != null ? Byte.class : (elt.booleanValue) != null ? Boolean.class : (elt.doubleValue) != null ? Double.class : (elt.floatValue) != null ? Float.class : null
eltClass = ((elt.longValue) != null) ? Long.class : (elt.shortValue) != null ? Short.class : (elt.characterValue) != null ? Character.class : (elt.byteValue) != null ? Byte.class : (elt.booleanValue) != null ? Boolean.class : (elt.doubleValue) != null ? Double.class : (elt.floatValue) != null ? Float.class : null
eltClass = ((elt.longValue) != null) ? Long.class : (elt.shortValue) != null ? Short.class : (elt.characterValue) != null ? Character.class : (elt.byteValue) != null ? Byte.class : (elt.booleanValue) != null ? Boolean.class : (elt.doubleValue) != null ? Double.class : (elt.floatValue) != null ? Float.class : null
eltClass = ((elt.longValue) != null) ? Long.class : (elt.shortValue) != null ? Short.class : (elt.characterValue) != null ? Character.class : (elt.byteValue) != null ? Byte.class : (elt.booleanValue) != null ? Boolean.class : (elt.doubleValue) != null ? Double.class : (elt.floatValue) != null ? Float.class : null
eltClass = ((elt.longValue) != null) ? Long.class : (elt.shortValue) != null ? Short.class : (elt.characterValue) != null ? Character.class : (elt.byteValue) != null ? Byte.class : (elt.booleanValue) != null ? Boolean.class : (elt.doubleValue) != null ? Double.class : (elt.floatValue) != null ? Float.class : null
eltClass = ((elt.longValue) != null) ? Long.class : (elt.shortValue) != null ? Short.class : (elt.characterValue) != null ? Character.class : (elt.byteValue) != null ? Byte.class : (elt.booleanValue) != null ? Boolean.class : (elt.doubleValue) != null ? Double.class : (elt.floatValue) != null ? Float.class : null
eltClass = ((elt.longValue) != null) ? Long.class : (elt.shortValue) != null ? Short.class : (elt.characterValue) != null ? Character.class : (elt.byteValue) != null ? Byte.class : (elt.booleanValue) != null ? Boolean.class : (elt.doubleValue) != null ? Double.class : (elt.floatValue) != null ? Float.class : null
targetElementTypeName = ((elt.longValue) != null) ? "long" : (elt.shortValue) != null ? "short" : (elt.characterValue) != null ? "char" : (elt.byteValue) != null ? "byte" : (elt.booleanValue) != null ? "boolean" : (elt.doubleValue) != null ? "double" : (elt.floatValue) != null ? "float" : ""
targetElementTypeName = ((elt.longValue) != null) ? "long" : (elt.shortValue) != null ? "short" : (elt.characterValue) != null ? "char" : (elt.byteValue) != null ? "byte" : (elt.booleanValue) != null ? "boolean" : (elt.doubleValue) != null ? "double" : (elt.floatValue) != null ? "float" : ""
targetElementTypeName = ((elt.longValue) != null) ? "long" : (elt.shortValue) != null ? "short" : (elt.characterValue) != null ? "char" : (elt.byteValue) != null ? "byte" : (elt.booleanValue) != null ? "boolean" : (elt.doubleValue) != null ? "double" : (elt.floatValue) != null ? "float" : ""
targetElementTypeName = ((elt.longValue) != null) ? "long" : (elt.shortValue) != null ? "short" : (elt.characterValue) != null ? "char" : (elt.byteValue) != null ? "byte" : (elt.booleanValue) != null ? "boolean" : (elt.doubleValue) != null ? "double" : (elt.floatValue) != null ? "float" : ""
targetElementTypeName = ((elt.longValue) != null) ? "long" : (elt.shortValue) != null ? "short" : (elt.characterValue) != null ? "char" : (elt.byteValue) != null ? "byte" : (elt.booleanValue) != null ? "boolean" : (elt.doubleValue) != null ? "double" : (elt.floatValue) != null ? "float" : ""
targetElementTypeName = ((elt.longValue) != null) ? "long" : (elt.shortValue) != null ? "short" : (elt.characterValue) != null ? "char" : (elt.byteValue) != null ? "byte" : (elt.booleanValue) != null ? "boolean" : (elt.doubleValue) != null ? "double" : (elt.floatValue) != null ? "float" : ""
targetElementTypeName = ((elt.longValue) != null) ? "long" : (elt.shortValue) != null ? "short" : (elt.characterValue) != null ? "char" : (elt.byteValue) != null ? "byte" : (elt.booleanValue) != null ? "boolean" : (elt.doubleValue) != null ? "double" : (elt.floatValue) != null ? "float" : ""
throw new IOException((("Could not locate file " + ((fileCached) == null ? rawPath : fileCached)) + (rawPath.equals(path) ? "" : " -- resolved to: " + path)))
final AnnotationInfoList reachableAnnotationInfo = new AnnotationInfoList((directAnnotationInfo == null ? 2 : directAnnotationInfo.size()))
return otherString == null
isModule = (classpathRelativePath.getModuleRef()) != null
subLog = log.log(resolvedPath, (("Scanning " + (isModule ? "module " : isDir ? "directory " : "jarfile ")) + (isModule ? (classpathRelativePath.getModuleRef()) + ((classpathRelativePath.getModuleRef().getLocationStr()) == null ? "" : " -> " + (classpathRelativePath.getModuleRef().getLocationStr())) : classpathRelativePath)))
final boolean parentRelativePathChanged = (prevParentRelativePath == null) || (!(parentRelativePath.equals(prevParentRelativePath)))
rmLog.log(((((success ? "Removed" : "Unable to remove") + " ") + path) + (e == null ? "" : " : " + e)))
subLog.log(("Class type signature: " + (typeSig == null ? typeSignature : typeSig.toString(className, false, classModifiers, isAnnotation, isInterface))))
super((parser == null ? msg : ((msg + " (") + (parser.getPositionInfo())) + ")"))
final boolean parentPackageAlreadyExisted = parentPackageInfo != null
return ((((((((((obj == null) || (obj instanceof String)) || (obj instanceof Integer)) || (obj instanceof Boolean)) || (obj instanceof Long)) || (obj instanceof Float)) || (obj instanceof Double)) || (obj instanceof Short)) || (obj instanceof Byte)) || (obj instanceof Character)) || (obj.getClass().isEnum())
return ((value) == null) && ((o.value) == null) ? true : ((value) == null) || ((o.value) == null) ? false : true
return ((value) == null) && ((o.value) == null) ? true : ((value) == null) || ((o.value) == null) ? false : true
return ((value) == null) && ((o.value) == null) ? true : ((value) == null) || ((o.value) == null) ? false : true
return ((value) == null) && ((o.value) == null) ? true : ((value) == null) || ((o.value) == null) ? false : true
return ((other != null) && (other instanceof ReferenceEqualityKey)) && ((wrappedKey) == (((ReferenceEqualityKey<?>) (other)).wrappedKey))
return (interrupted.get()) || ((executionException) != null)
return ((name.hashCode()) + ((classBound) == null ? 0 : (classBound.hashCode()) * 7)) + ((interfaceBounds.hashCode()) * 15)
return ((o.name.equals(this.name)) && ((((o.classBound) == null) && ((this.classBound) == null)) || (((o.classBound) != null) && (o.classBound.equals(this.classBound))))) && (o.interfaceBounds.equals(this.interfaceBounds))
return ((o.name.equals(this.name)) && ((((o.classBound) == null) && ((this.classBound) == null)) || (((o.classBound) != null) && (o.classBound.equals(this.classBound))))) && (o.interfaceBounds.equals(this.interfaceBounds))
return ((o.name.equals(this.name)) && ((((o.classBound) == null) && ((this.classBound) == null)) || (((o.classBound) != null) && (o.classBound.equals(this.classBound))))) && (o.interfaceBounds.equals(this.interfaceBounds))
instantiatedItemObject = (commonValueDefaultConstructor != null) ? commonValueDefaultConstructor.newInstance() : null
final boolean isModule = (classpathElt.getModuleRef()) != null
final String newSortKey = ((((sortKeyPrefix) + "\t") + (sortKey == null ? "" : sortKey)) + "\t") + (String.format("%09d", LogNode.sortKeyUniqueSuffix.getAndIncrement()))
boolean isWhitelisted = (whitelistPrefixes) == null
boolean isWhitelisted = (whitelistPrefixes) == null
return ((((((whitelist) == null) && ((whitelistPatterns) == null)) || (((whitelist) != null) && (whitelist.contains(str)))) || (WhiteBlackList.matchesPatternList(str, whitelistPatterns))) && (((blacklist) == null) || (!(blacklist.contains(str))))) && (!(WhiteBlackList.matchesPatternList(str, blacklistPatterns)))
return ((((((whitelist) == null) && ((whitelistPatterns) == null)) || (((whitelist) != null) && (whitelist.contains(str)))) || (WhiteBlackList.matchesPatternList(str, whitelistPatterns))) && (((blacklist) == null) || (!(blacklist.contains(str))))) && (!(WhiteBlackList.matchesPatternList(str, blacklistPatterns)))
return ((((((whitelist) == null) && ((whitelistPatterns) == null)) || (((whitelist) != null) && (whitelist.contains(str)))) || (WhiteBlackList.matchesPatternList(str, whitelistPatterns))) && (((blacklist) == null) || (!(blacklist.contains(str))))) && (!(WhiteBlackList.matchesPatternList(str, blacklistPatterns)))
return ((((((whitelist) == null) && ((whitelistPatterns) == null)) || (((whitelist) != null) && (whitelist.contains(str)))) || (WhiteBlackList.matchesPatternList(str, whitelistPatterns))) && (((blacklist) == null) || (!(blacklist.contains(str))))) && (!(WhiteBlackList.matchesPatternList(str, blacklistPatterns)))
return ((((whitelist) == null) && ((whitelistPatterns) == null)) || (((whitelist) != null) && (whitelist.contains(str)))) || (WhiteBlackList.matchesPatternList(str, whitelistPatterns))
return ((((whitelist) == null) && ((whitelistPatterns) == null)) || (((whitelist) != null) && (whitelist.contains(str)))) || (WhiteBlackList.matchesPatternList(str, whitelistPatterns))
return ((((whitelist) == null) && ((whitelistPatterns) == null)) || (((whitelist) != null) && (whitelist.contains(str)))) || (WhiteBlackList.matchesPatternList(str, whitelistPatterns))
return (((blacklist) != null) && (blacklist.contains(str))) || (WhiteBlackList.matchesPatternList(str, blacklistPatterns))
return (((whitelist) == null) && ((whitelistPrefixes) == null)) && ((whitelistGlobs) == null)
return (((whitelist) == null) && ((whitelistPrefixes) == null)) && ((whitelistGlobs) == null)
return (((whitelist) == null) && ((whitelistPrefixes) == null)) && ((whitelistGlobs) == null)
return ((classInfo != null) && (classInfo.isInterface())) && (hasBody)
final int otherParamMax = Math.max(((parameterNames) == null ? 0 : parameterNames.length), Math.max(((parameterModifiers) == null ? 0 : parameterModifiers.length), ((parameterAnnotationInfo) == null ? 0 : parameterAnnotationInfo.length)))
final int otherParamMax = Math.max(((parameterNames) == null ? 0 : parameterNames.length), Math.max(((parameterModifiers) == null ? 0 : parameterModifiers.length), ((parameterAnnotationInfo) == null ? 0 : parameterAnnotationInfo.length)))
final int otherParamMax = Math.max(((parameterNames) == null ? 0 : parameterNames.length), Math.max(((parameterModifiers) == null ? 0 : parameterModifiers.length), ((parameterAnnotationInfo) == null ? 0 : parameterAnnotationInfo.length)))
parameterInfo[i] = new MethodParameterInfo(this, (paramAnnotationInfoAligned == null ? null : paramAnnotationInfoAligned[i]), (paramModifiersAligned == null ? 0 : paramModifiersAligned[i]), paramTypeDescriptors.get(i), (paramTypeSignaturesAligned == null ? null : paramTypeSignaturesAligned.get(i)), (paramNamesAligned == null ? null : paramNamesAligned[i]))
parameterInfo[i] = new MethodParameterInfo(this, (paramAnnotationInfoAligned == null ? null : paramAnnotationInfoAligned[i]), (paramModifiersAligned == null ? 0 : paramModifiersAligned[i]), paramTypeDescriptors.get(i), (paramTypeSignaturesAligned == null ? null : paramTypeSignaturesAligned.get(i)), (paramNamesAligned == null ? null : paramNamesAligned[i]))
parameterInfo[i] = new MethodParameterInfo(this, (paramAnnotationInfoAligned == null ? null : paramAnnotationInfoAligned[i]), (paramModifiersAligned == null ? 0 : paramModifiersAligned[i]), paramTypeDescriptors.get(i), (paramTypeSignaturesAligned == null ? null : paramTypeSignaturesAligned.get(i)), (paramNamesAligned == null ? null : paramNamesAligned[i]))
parameterInfo[i] = new MethodParameterInfo(this, (paramAnnotationInfoAligned == null ? null : paramAnnotationInfoAligned[i]), (paramModifiersAligned == null ? 0 : paramModifiersAligned[i]), paramTypeDescriptors.get(i), (paramTypeSignaturesAligned == null ? null : paramTypeSignaturesAligned.get(i)), (paramNamesAligned == null ? null : paramNamesAligned[i]))
throw new RuntimeException((cause == null ? e : cause))
throw new RuntimeException((cause == null ? e : cause))
throw new RuntimeException((cause == null ? e : cause))
return ((((args[0]) != null) && ((args[0]) instanceof AnnotationInfo.AnnotationInvocationHandler)) && ((((AnnotationInfo.AnnotationInvocationHandler) (args[0])).annotationClass) == (annotationClass))) && (((AnnotationInfo.AnnotationInvocationHandler) (args[0])).annotationParameterValuesInstantiated.equals(annotationParameterValuesInstantiated))
return (fullyQualifiedDefiningMethodName) != null
return ((relatedClasses.get(ClassInfo.RelType.CLASSES_IMPLEMENTING)) != null) || ((isInterface) && (!(isAnnotation)))
CheckNotNull  in 2099ms
ForceNullInit in 749ms
AddImplicitCastChecker --> 4 in 147ms
BeforeDeref --> 2921 (failed:0) in 660ms
target--> 4072 (failed:0) in 1941ms
TryRegister # Try: 158 in 140ms
Assign --> 1221 (failed: 0) in 1236ms
VarInit --> 1224 in 533ms
MethodEncapsulation # Method: 1109 in 1044ms
ConstructorEncapsulation # Constructor: 117 in 805ms
VariableFor in 235ms
spoon.compiler.ModelBuildingException: currPackageInfo cannot be resolved to a variable at /tmp/NPEFix_Bears_classgraph-classgraph_448207270-449613955/PackageInfo.java:363
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.report(JDTBasedSpoonCompiler.java:581)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.reportProblems(JDTBasedSpoonCompiler.java:562)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.compile(JDTBasedSpoonCompiler.java:157)
	at fr.inria.spirals.npefix.main.all.Launcher.instrument(Launcher.java:109)
	at fr.inria.spirals.npefix.main.run.Main.run(Main.java:61)
	at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)
Exception in thread "main" spoon.compiler.ModelBuildingException: currPackageInfo cannot be resolved to a variable at /tmp/NPEFix_Bears_classgraph-classgraph_448207270-449613955/PackageInfo.java:363
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.report(JDTBasedSpoonCompiler.java:581)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.reportProblems(JDTBasedSpoonCompiler.java:562)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.compile(JDTBasedSpoonCompiler.java:157)
	at fr.inria.spirals.npefix.main.all.Launcher.instrument(Launcher.java:109)
	at fr.inria.spirals.npefix.main.run.Main.run(Main.java:61)
	at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)
Command exited with non-zero status 1
96.75user 1.29system 0:37.85elapsed 259%CPU (0avgtext+0avgdata 1689588maxresident)k
17320inputs+10608outputs (1major+440865minor)pagefaults 0swaps


Node: suno-37.sophia.grid5000.fr



Date: Wed Dec 26 12:27:19 EST 2018

