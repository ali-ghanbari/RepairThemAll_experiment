{
  "repair_end": "2018-12-03 01:39:37.295352", 
  "repair_begin": "2018-12-03 01:18:15.326134", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1437/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:16.297550565 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -65,7 +64,8 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tsetBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        gasLabel.setText(\"gas pedal\");\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1303/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:04.773934980 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -100,7 +100,6 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1878/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:00.796073701 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -88,7 +87,6 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n@@ -135,7 +133,8 @@\n      * @return          The mapped value between [-75, 255] interval.\n      */\n     private int calculateSpeedometer(int speed) {\n-        final int minSpeedValue = 0;\n+        rpmAngle = calculateTachometer(0);\n+\t\tfinal int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Delete", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 138, 
          "faulty": "final int minSpeedValue=0;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_928/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:03.436501927 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -65,7 +65,6 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Delete", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_576/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:16.836065458 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -138,7 +138,8 @@\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_302/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:12.705509194 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -91,7 +91,6 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1968/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:44.521971910 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -82,12 +81,13 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        progressBarsPanel.add(breakLabel);\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1800/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:18.182187228 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -122,7 +122,8 @@\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n-        int newrpm = maxRpmValue - rpm;\n+        speedAngle = calculateSpeedometer(0);\n+\t\tint newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 125, 
          "faulty": "int newrpm=maxRpmValue - rpm;", 
          "type": "InsertBefore", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2134/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:07.057471651 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -82,7 +82,7 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        progressBarsPanel.add(gasLabel);\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n@@ -90,7 +90,6 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n@@ -118,7 +117,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2494/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:39:10.824957950 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -91,7 +90,9 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tprogressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2274/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:19.416470602 -0500\n@@ -56,14 +56,15 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n+        rpmAngle = calculateTachometer(0);\n+\t\t// Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n@@ -118,7 +119,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_306/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:13.981509149 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -85,7 +85,7 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(gasLabel);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2348/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:57.366023392 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -88,7 +87,7 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_559/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:09.239618098 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -136,7 +135,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2452/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:48.236087351 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -89,7 +89,7 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        setBackground(new Color(backgroundColor));\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Replace", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_272/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:57.937509713 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -89,7 +89,6 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_528/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:54.454586291 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -121,7 +121,8 @@\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n-        final int maxRpmMeter = 255;\n+        progressBarsPanel.add(gasLabel);\n+\t\tfinal int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 124, 
          "faulty": "final int maxRpmMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1520/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:57.987635671 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -76,12 +76,6 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n-\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n@@ -119,7 +113,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBackground(new Color(backgroundColor));\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1456/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:25.370010936 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -69,6 +69,7 @@\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n+\t\tinitializeProgressBars();\n     }\n \n     /**\n@@ -84,7 +85,7 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "InsertBefore", 
          "seed": "initializeProgressBars();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_188/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:13.449511277 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -75,7 +75,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        add(progressBarsPanel);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1063/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:08.243462746 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -76,15 +76,10 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n-\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_81/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:19:13.933513369 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_589/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:23.264416157 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -85,7 +85,7 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(breakProgressBar);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n@@ -100,7 +100,8 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tsuper.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_500/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:41.432790097 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -83,6 +83,7 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1711/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:32.164101915 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -85,7 +84,8 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(gasLabel);\n+\t\tbreakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1960/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:41.121825526 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -135,7 +135,8 @@\n      * @return          The mapped value between [-75, 255] interval.\n      */\n     private int calculateSpeedometer(int speed) {\n-        final int minSpeedValue = 0;\n+        rpmAngle = calculateTachometer(0);\n+\t\tfinal int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 138, 
          "faulty": "final int minSpeedValue=0;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2361/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:03.206261310 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -83,11 +82,10 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        progressBarsPanel.add(breakProgressBar);\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_317/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:19.097508970 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n+\t\trpmAngle = calculateTachometer(0);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2121/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:01.977258914 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -135,10 +135,12 @@\n      * @return          The mapped value between [-75, 255] interval.\n      */\n     private int calculateSpeedometer(int speed) {\n-        final int minSpeedValue = 0;\n+        add(progressBarsPanel);\n+\t\tfinal int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 138, 
          "faulty": "final int minSpeedValue=0;", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1123/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:37.253163483 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -87,7 +86,9 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_75/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:19:10.757513480 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2073/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:39.492313421 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -67,8 +66,6 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n-        initializeProgressBars();\n     }\n \n     /**\n@@ -100,7 +97,8 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n+\t\tsuper.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Delete", 
          "seed": "initializeProgressBars();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_876/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:39.351606688 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -82,7 +82,8 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2021/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:12.223157542 -0500\n@@ -54,9 +54,9 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n+        gasProgressBar.setStringPainted(true);\n+\t\tspeedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_509/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:45.373403901 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        speedAngle = calculateSpeedometer(0);\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Replace", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_681/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:08.448907046 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -135,7 +135,8 @@\n      * @return          The mapped value between [-75, 255] interval.\n      */\n     private int calculateSpeedometer(int speed) {\n-        final int minSpeedValue = 0;\n+        rpmAngle = calculateTachometer(0);\n+\t\tfinal int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 138, 
          "faulty": "final int minSpeedValue=0;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_268/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:56.045509780 -0500\n@@ -55,8 +55,7 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -84,13 +83,14 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(breakLabel);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Delete", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1029/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:50.730401935 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -138,7 +138,8 @@\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1549/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:14.544443500 -0500\n@@ -52,11 +52,12 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +76,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -91,7 +93,6 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2027/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:14.735264475 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -142,6 +142,6 @@\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n-                / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n+\t\t\t\t/ (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "Replace", 
          "seed": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_535/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:57.002798976 -0500\n@@ -56,14 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n+        breakProgressBar.setStringPainted(true);\n+\t\t// Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n@@ -89,7 +89,6 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2355/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:00.630156398 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,20 +75,21 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1367/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:37.003579999 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasLabel.setText(\"gas pedal\");\n+\t\trpmAngle = calculateTachometer(0);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_288/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:05.669509442 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n     }\n \n     /**\n@@ -84,7 +84,8 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1002/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:38.501806547 -0500\n@@ -56,17 +56,17 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n@@ -90,7 +90,8 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n@@ -120,7 +121,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        initializeDashboard();\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2246/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:04.711865503 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -118,7 +118,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n@@ -139,7 +140,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_792/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:01.462199925 -0500\n@@ -56,7 +56,8 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1973/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:47.066081315 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakLabel.setText(\"break pedal\");\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_798/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:04.702320142 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -139,7 +138,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        rpmAngle = calculateTachometer(0);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1101/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:26.320530429 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -84,7 +83,7 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_243/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:42.041510272 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(breakProgressBar);\n+\t\trpmAngle = calculateTachometer(0);\n     }\n \n     /**\n@@ -120,11 +120,13 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter)\n+\t\t\t\t/ (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "Replace", 
          "seed": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1018/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:45.622087351 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -90,7 +90,8 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_495/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:39.512455127 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +75,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        setLayout(null);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2370/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:07.698444134 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -84,7 +83,6 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_40/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:18:48.909514248 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        speedAngle = calculateSpeedometer(0);\n     }\n \n     /**\n@@ -65,8 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+        breakProgressBar.setStringPainted(true);\n \n         initializeProgressBars();\n     }\n@@ -85,8 +84,6 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n-\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n@@ -122,9 +119,12 @@\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n-        int newrpm = maxRpmValue - rpm;\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tint newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter)\n+\t\t\t\t/ (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Delete", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 125, 
          "faulty": "int newrpm=maxRpmValue - rpm;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "Replace", 
          "seed": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2047/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:26.123748081 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -83,7 +83,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        setLayout(null);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n@@ -141,7 +142,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        initializeDashboard();\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_225/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:33.181510583 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasLabel.setText(\"gas pedal\");\n     }\n \n     /**\n@@ -68,7 +68,7 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        rpmAngle = calculateTachometer(0);\n     }\n \n     /**\n@@ -85,8 +85,6 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n-\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_493/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:38.868339612 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        speedAngle = calculateSpeedometer(0);\n     }\n \n     /**\n@@ -82,7 +82,7 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1149/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:49.357853858 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -83,7 +83,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        gasLabel.setText(\"gas pedal\");\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n@@ -139,7 +140,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        rpmAngle = calculateTachometer(0);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_661/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:58.700864336 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -85,7 +85,7 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(gasLabel);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1052/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:02.983146938 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -124,7 +124,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter)\n+\t\t\t\t/ (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "Replace", 
          "seed": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1718/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:34.772221593 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -83,7 +82,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        setLayout(null);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1207/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:18.131453332 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -83,7 +82,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        progressBarsPanel.add(breakProgressBar);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2129/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:05.165392455 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -87,7 +86,6 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n@@ -100,7 +98,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        gasLabel.setText(\"gas pedal\");\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_472/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:29.910514045 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -68,7 +68,7 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        add(progressBarsPanel);\n     }\n \n     /**\n@@ -76,19 +76,15 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n-\n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        setLayout(null);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        add(progressBarsPanel);\n+\t\tprogressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_391/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:52.130714640 -0500\n@@ -56,14 +56,15 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n+        breakProgressBar.setStringPainted(true);\n+\t\t// Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2373/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:10.162544351 -0500\n@@ -54,17 +54,17 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n+        progressBarsPanel.add(gasLabel);\n+\t\tspeedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        rpmAngle = calculateTachometer(0);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_434/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:11.950624968 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -76,12 +76,6 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n-\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n@@ -138,7 +132,8 @@\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1083/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:17.864034297 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,10 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n-        initializeProgressBars();\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_996/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:35.953711698 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -100,7 +99,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        gasLabel.setText(\"gas pedal\");\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n@@ -120,7 +119,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        initializeDashboard();\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_147/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:19:51.525512047 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1272/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:49.181119482 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -89,7 +89,6 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n@@ -100,7 +99,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Delete", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1314/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:09.222165188 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -136,7 +135,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        breakLabel.setText(\"break pedal\");\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1467/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:32.054347695 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        rpmAngle = calculateTachometer(0);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1827/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:33.022848696 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -100,7 +99,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_635/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:45.772838492 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -82,14 +81,15 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Replace", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_474/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:30.542656631 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -88,7 +88,8 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        add(progressBarsPanel);\n+\t\tprogressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_321/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:21.217508895 -0500\n@@ -53,18 +53,16 @@\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n-        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        gasProgressBar.setStringPainted(true);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 56, 
          "faulty": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_999/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:37.217758750 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -76,12 +75,6 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n-\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n@@ -118,7 +111,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n@@ -142,6 +136,6 @@\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n-                / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n+\t\t\t\t/ (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "Replace", 
          "seed": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1286/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:56.241490408 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -136,7 +136,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        progressBarsPanel.add(gasLabel);\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1178/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:02.766606272 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(breakProgressBar);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -75,7 +75,6 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Delete", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_607/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:32.232645099 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -85,7 +84,8 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tbreakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2114/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:58.825126755 -0500\n@@ -52,11 +52,12 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -87,7 +88,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2331/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:50.309735578 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,7 +65,8 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tsetBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -118,7 +119,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1317/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:10.542233299 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -90,7 +89,8 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1644/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:04.054799517 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -124,7 +124,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter)\n+\t\t\t\t/ (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "Replace", 
          "seed": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1926/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:24.309098760 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -119,7 +119,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1235/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:31.600183286 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -83,7 +82,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        setLayout(null);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        gasLabel.setText(\"gas pedal\");\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_227/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:33.813510561 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -68,7 +67,8 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        add(progressBarsPanel);\n+\t\tinitializeProgressBars();\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_990/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:33.437618047 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -119,7 +119,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        initializeProgressBars();\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "initializeProgressBars();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_648/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:52.944891184 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -136,7 +136,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        progressBarsPanel.add(gasLabel);\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1587/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:33.789369430 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -65,7 +64,8 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tsetBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_388/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:50.842383645 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -75,7 +74,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -137,7 +137,8 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n+        breakProgressBar.setStringPainted(true);\n+\t\tfinal int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_693/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:15.336990459 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -120,7 +120,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1662/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:11.679155112 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -90,7 +90,6 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1797/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:16.898129758 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2389/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:17.782853995 -0500\n@@ -53,10 +53,10 @@\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n-        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tbreakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 56, 
          "faulty": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1898/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:10.308489663 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(breakProgressBar);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_365/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:41.403562367 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -136,7 +135,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        progressBarsPanel.add(gasLabel);\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_892/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:47.147896395 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -67,8 +67,6 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n-        initializeProgressBars();\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Delete", 
          "seed": "initializeProgressBars();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1298/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:02.881836737 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -76,7 +76,8 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n+        progressBarsPanel.add(gasLabel);\n+\t\tprogressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n                 progressBarsPanelWidth,\n@@ -88,7 +89,7 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        add(progressBarsPanel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_108/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:19:29.581512819 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -68,7 +68,7 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        progressBarsPanel.add(gasLabel);\n     }\n \n     /**\n@@ -100,7 +100,6 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1884/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:03.316184074 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -89,9 +89,10 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tprogressBarsPanel.add(gasProgressBar);\n+        setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakLabel);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_136/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:19:45.853512247 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1247/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:37.444496535 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -91,7 +91,6 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_326/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:23.769508805 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -82,12 +82,13 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n@@ -119,7 +120,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1503/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:48.503167937 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -89,7 +88,6 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n@@ -100,7 +98,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Delete", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1412/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:01.448794478 -0500\n@@ -56,14 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n+        rpmAngle = calculateTachometer(0);\n+\t\t// Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1006/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:40.485880406 -0500\n@@ -56,14 +56,15 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n+        rpmAngle = calculateTachometer(0);\n+\t\t// Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n@@ -90,8 +91,9 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n+\t\tprogressBarsPanel.add(breakLabel);\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2005/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:04.670835493 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -141,7 +141,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        initializeDashboard();\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1080/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:16.583958686 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -100,7 +100,8 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n+\t\tsuper.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n@@ -136,7 +137,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        gasProgressBar.setStringPainted(true);\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_550/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:04.875341983 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -138,7 +138,8 @@\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1552/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:15.844506484 -0500\n@@ -52,11 +52,11 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -66,8 +66,6 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n         initializeProgressBars();\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1145/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:47.477747334 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -89,9 +88,9 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_57/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:18:59.701513869 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        setBackground(new Color(backgroundColor));\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2366/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:05.778366008 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -66,8 +65,6 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n         initializeProgressBars();\n     }\n \n@@ -82,7 +79,8 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        progressBarsPanel.add(breakLabel);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_910/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:54.908184844 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -68,7 +68,8 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        add(progressBarsPanel);\n+\t\tinitializeProgressBars();\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_978/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:26.389355742 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +75,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -85,7 +85,7 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(gasLabel);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1595/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:38.333586121 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -88,9 +88,10 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        gasLabel.setText(\"gas pedal\");\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1513/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:54.175448116 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -82,7 +81,7 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        progressBarsPanel.add(breakLabel);\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1165/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:56.426252066 -0500\n@@ -52,11 +52,12 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -89,7 +90,8 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tprogressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n@@ -136,7 +138,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        progressBarsPanel.add(gasLabel);\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2336/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:52.237814262 -0500\n@@ -56,15 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        progressBarsPanel.add(breakLabel);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_311/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:16.549509059 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -82,7 +82,7 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        progressBarsPanel.add(gasLabel);\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2156/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:16.745876498 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -65,9 +64,8 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tsetBackground(new Color(backgroundColor));\n         initializeProgressBars();\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "Delete", 
          "seed": "initializeProgressBars();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2214/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:48.791208001 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -84,7 +84,7 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1790/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:12.993954780 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -120,11 +120,13 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakLabel.setText(\"break pedal\");\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_787/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:58.918105542 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -118,7 +118,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2412/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:29.195316947 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -76,12 +76,6 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n-\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n@@ -136,7 +130,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        progressBarsPanel.add(gasLabel);\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1023/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:47.542205870 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -82,7 +82,7 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        progressBarsPanel.add(breakProgressBar);\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1923/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:23.021042876 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2174/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:25.210229303 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        rpmAngle = calculateTachometer(0);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_826/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:16.198746820 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2346/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:56.729997466 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -87,7 +86,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n@@ -119,7 +119,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_282/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:03.017509535 -0500\n@@ -55,8 +55,9 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(breakProgressBar);\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_180/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:09.421511418 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -89,7 +89,7 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Replace", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2126/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:03.901339523 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -100,7 +100,8 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n+\t\tsuper.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n@@ -119,7 +120,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBackground(new Color(backgroundColor));\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_165/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:01.797511686 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -83,7 +83,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1269/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:47.797046436 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -82,7 +81,7 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1056/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:04.279224964 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -122,7 +122,8 @@\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n-        int newrpm = maxRpmValue - rpm;\n+        initializeDashboard();\n+\t\tint newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 125, 
          "faulty": "int newrpm=maxRpmValue - rpm;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1906/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:14.804685671 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -91,7 +91,7 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n+        setBackground(new Color(backgroundColor));\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Replace", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2505/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:39:15.893092547 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -118,9 +118,11 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        initializeDashboard();\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        initializeDashboard();\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2084/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:44.536526102 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -85,7 +85,8 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tbreakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_514/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:47.357683223 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -85,9 +85,11 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(gasLabel);\n+\t\tbreakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n@@ -119,8 +121,10 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        initializeProgressBars();\n+\t\tfinal int maxRpmValue = 10000;\n+        initializeDashboard();\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "initializeProgressBars();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_760/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:46.169701404 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -83,7 +83,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        setLayout(null);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n@@ -100,7 +101,8 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n+\t\tsuper.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_708/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:21.921102895 -0500\n@@ -56,15 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        rpmAngle = calculateTachometer(0);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n@@ -139,7 +138,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        rpmAngle = calculateTachometer(0);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_743/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:38.513487674 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +75,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        add(progressBarsPanel);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -122,7 +122,8 @@\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n-        int newrpm = maxRpmValue - rpm;\n+        initializeDashboard();\n+\t\tint newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 125, 
          "faulty": "int newrpm=maxRpmValue - rpm;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1135/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:42.413459120 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -82,7 +82,8 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_278/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:01.105509602 -0500\n@@ -54,9 +54,10 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n+\t\tspeedAngle = calculateSpeedometer(0);\n+        gasProgressBar.setStringPainted(true);\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1014/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:43.722000883 -0500\n@@ -52,11 +52,12 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -100,7 +101,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1343/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:25.607004268 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        rpmAngle = calculateTachometer(0);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -75,7 +75,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        add(progressBarsPanel);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1963/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:42.429881862 -0500\n@@ -55,8 +55,7 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -124,7 +123,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakLabel.setText(\"break pedal\");\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1881/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:02.048128554 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -75,7 +75,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        setLayout(null);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1774/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:05.233605885 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +75,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -90,7 +91,6 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2446/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:45.679984069 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -91,7 +91,9 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tprogressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1328/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:15.606493770 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -68,7 +67,7 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        rpmAngle = calculateTachometer(0);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2131/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:05.801419082 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -87,7 +87,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1930/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:26.325186173 -0500\n@@ -56,14 +56,15 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n+        progressBarsPanel.add(breakLabel);\n+\t\t// Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2463/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:53.408296210 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -91,7 +91,9 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tprogressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_884/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:43.207749970 -0500\n@@ -54,9 +54,9 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n+        setBackground(new Color(backgroundColor));\n+\t\tspeedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1859/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:51.283655943 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -75,7 +75,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        add(progressBarsPanel);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -83,7 +83,6 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n@@ -139,7 +138,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        rpmAngle = calculateTachometer(0);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1632/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:57.358485701 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        rpmAngle = calculateTachometer(0);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -75,7 +75,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        add(progressBarsPanel);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -90,7 +90,8 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1197/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:13.679209488 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -141,7 +140,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        breakProgressBar.setStringPainted(true);\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2143/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:10.965635095 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -124,7 +124,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakLabel.setText(\"break pedal\");\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2340/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:54.133891609 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -83,7 +83,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        setLayout(null);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n@@ -118,8 +119,10 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmValue = 0;\n+        gasProgressBar.setStringPainted(true);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_381/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:48.329702635 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -88,7 +88,7 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        gasLabel.setText(\"gas pedal\");\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2105/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:54.176931645 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -141,7 +141,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        progressBarsPanel.add(gasLabel);\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2013/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:09.075023406 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -66,8 +65,6 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n         initializeProgressBars();\n     }\n \n@@ -82,7 +79,8 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_504/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:43.361106573 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -119,7 +119,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setLayout(null);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1364/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:35.739516446 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -83,7 +83,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n@@ -100,7 +101,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        progressBarsPanel.add(breakLabel);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1498/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:45.975042631 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -90,7 +90,8 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1288/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:57.813572619 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n@@ -137,7 +137,8 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n+        breakProgressBar.setStringPainted(true);\n+\t\tfinal int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1278/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:51.765255569 -0500\n@@ -56,14 +56,15 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n+        rpmAngle = calculateTachometer(0);\n+\t\t// Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1532/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:04.987978546 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -139,7 +138,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1976/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:48.394138383 -0500\n@@ -55,8 +55,9 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        speedAngle = calculateSpeedometer(0);\n+\t\trpmAngle = calculateTachometer(0);\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_479/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:32.479081161 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -91,7 +91,8 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_913/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:56.200232877 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -90,7 +89,6 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1090/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:21.196230480 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        rpmAngle = calculateTachometer(0);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -75,7 +75,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        add(progressBarsPanel);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -137,7 +137,8 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n+        breakProgressBar.setStringPainted(true);\n+\t\tfinal int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_938/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:07.916668534 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -136,10 +136,12 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        progressBarsPanel.add(gasLabel);\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        rpmAngle = calculateTachometer(0);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1658/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:10.411096094 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -118,7 +118,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        setLayout(null);\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n@@ -136,7 +137,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_411/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:01.168744999 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -88,10 +88,9 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        gasLabel.setText(\"gas pedal\");\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_813/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:10.446533308 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -82,7 +82,8 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_908/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:54.260160754 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -84,7 +84,6 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1873/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:58.215960571 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -75,7 +75,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        speedAngle = calculateSpeedometer(0);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_450/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:20.284000524 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -135,10 +134,12 @@\n      * @return          The mapped value between [-75, 255] interval.\n      */\n     private int calculateSpeedometer(int speed) {\n-        final int minSpeedValue = 0;\n+        rpmAngle = calculateTachometer(0);\n+\t\tfinal int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 138, 
          "faulty": "final int minSpeedValue=0;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1209/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:18.779488715 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        rpmAngle = calculateTachometer(0);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_190/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:14.097511254 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -121,7 +121,8 @@\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n-        final int maxRpmMeter = 255;\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tfinal int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 124, 
          "faulty": "final int maxRpmMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_328/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:24.409508783 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -83,7 +82,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n@@ -91,7 +91,6 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1966/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:43.881944371 -0500\n@@ -54,9 +54,10 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n+        gasProgressBar.setStringPainted(true);\n+\t\tspeedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,7 +66,8 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tsetBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1290/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:58.449605839 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -67,6 +67,7 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n@@ -82,7 +83,8 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        progressBarsPanel.add(breakLabel);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1768/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:02.033461584 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2466/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:54.668347066 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1331/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:16.854557758 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -119,7 +118,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        add(progressBarsPanel);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1683/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:19.355511349 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -119,7 +119,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1952/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:37.217657197 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -135,7 +134,8 @@\n      * @return          The mapped value between [-75, 255] interval.\n      */\n     private int calculateSpeedometer(int speed) {\n-        final int minSpeedValue = 0;\n+        add(progressBarsPanel);\n+\t\tfinal int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 138, 
          "faulty": "final int minSpeedValue=0;", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_313/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:17.181509037 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        setLayout(null);\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_849/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:28.379199093 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -135,7 +135,8 @@\n      * @return          The mapped value between [-75, 255] interval.\n      */\n     private int calculateSpeedometer(int speed) {\n-        final int minSpeedValue = 0;\n+        add(progressBarsPanel);\n+\t\tfinal int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 138, 
          "faulty": "final int minSpeedValue=0;", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1599/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:40.241676895 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -68,7 +68,7 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        add(progressBarsPanel);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_748/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:41.061556438 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -142,6 +142,6 @@\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n-                / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n+\t\t\t\t/ (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "Replace", 
          "seed": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_330/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:25.061508760 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        rpmAngle = calculateTachometer(0);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_400/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:56.675796425 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -89,7 +89,9 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tprogressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1233/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:30.936147569 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -138,7 +137,8 @@\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        rpmAngle = calculateTachometer(0);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_341/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:30.201508579 -0500\n@@ -55,8 +55,9 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        initializeProgressBars();\n+\t\trpmAngle = calculateTachometer(0);\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -65,8 +66,9 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(breakProgressBar);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "initializeProgressBars();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2280/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:22.608601695 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -85,11 +85,9 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n-\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Replace", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_762/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:46.805720196 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -119,7 +119,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_816/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:11.718580520 -0500\n@@ -56,15 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        rpmAngle = calculateTachometer(0);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2423/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:34.239521277 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -75,7 +75,6 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -135,7 +134,8 @@\n      * @return          The mapped value between [-75, 255] interval.\n      */\n     private int calculateSpeedometer(int speed) {\n-        final int minSpeedValue = 0;\n+        rpmAngle = calculateTachometer(0);\n+\t\tfinal int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Delete", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 138, 
          "faulty": "final int minSpeedValue=0;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2107/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:54.836959366 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        rpmAngle = calculateTachometer(0);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -119,7 +119,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        initializeProgressBars();\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "initializeProgressBars();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2488/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:39:07.660870145 -0500\n@@ -52,11 +52,12 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -100,7 +101,8 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        initializeDashboard();\n+\t\tsuper.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_698/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:17.885030283 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -82,13 +82,15 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        gasLabel.setText(\"gas pedal\");\n+\t\tprogressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2206/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:45.655078182 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -90,7 +90,8 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n@@ -139,7 +140,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2162/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:19.313983628 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -85,11 +85,11 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(gasLabel);\n+\t\tbreakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Delete", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1845/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:43.671320289 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +75,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_702/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:19.245054025 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -119,7 +118,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1097/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:24.388417578 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -120,7 +119,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        initializeDashboard();\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_359/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:38.206425693 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -90,7 +90,6 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_953/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:14.356908075 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -87,7 +87,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n@@ -120,7 +121,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        initializeDashboard();\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1734/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:43.080601593 -0500\n@@ -56,14 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\t// Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_687/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:11.864943375 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -122,7 +121,8 @@\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n-        int newrpm = maxRpmValue - rpm;\n+        initializeDashboard();\n+\t\tint newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 125, 
          "faulty": "int newrpm=maxRpmValue - rpm;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1679/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:18.079452255 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -85,7 +85,8 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(gasLabel);\n+\t\tbreakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_264/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:54.149509846 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -87,7 +87,6 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2418/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:32.343444491 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -91,7 +91,6 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2359/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:02.566235251 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -83,7 +83,7 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1374/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:40.259743346 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -83,7 +83,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        setLayout(null);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n@@ -100,7 +101,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_722/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:28.329236033 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -121,7 +120,8 @@\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n-        final int maxRpmMeter = 255;\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tfinal int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 124, 
          "faulty": "final int maxRpmMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_758/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:45.529682970 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -119,7 +119,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n@@ -139,7 +140,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1307/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:06.062001751 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -141,7 +140,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        progressBarsPanel.add(gasLabel);\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2295/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:30.920942636 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -124,7 +124,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakLabel.setText(\"break pedal\");\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n@@ -141,7 +142,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        initializeDashboard();\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_620/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:38.052711127 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -121,7 +121,8 @@\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n-        final int maxRpmMeter = 255;\n+        progressBarsPanel.add(gasLabel);\n+\t\tfinal int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 124, 
          "faulty": "final int maxRpmMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_200/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:19.229511074 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -89,7 +89,7 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Replace", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_89/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:19:18.489513208 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -65,8 +64,11 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+        gasLabel.setText(\"gas pedal\");\n+\t\tsetBackground(new Color(backgroundColor));\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n@@ -82,16 +84,12 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n-\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n@@ -122,7 +120,9 @@\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n-        int newrpm = maxRpmValue - rpm;\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tint newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 125, 
          "faulty": "int newrpm=maxRpmValue - rpm;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Delete", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1806/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:21.494335290 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -84,7 +84,8 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1104/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:28.428653221 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -119,7 +119,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_229/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:34.461510538 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -135,7 +134,8 @@\n      * @return          The mapped value between [-75, 255] interval.\n      */\n     private int calculateSpeedometer(int speed) {\n-        final int minSpeedValue = 0;\n+        rpmAngle = calculateTachometer(0);\n+\t\tfinal int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 138, 
          "faulty": "final int minSpeedValue=0;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_431/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:10.678427401 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -87,7 +87,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2003/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:04.026807991 -0500\n@@ -55,8 +55,7 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -66,7 +65,8 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+        gasLabel.setText(\"gas pedal\");\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Delete", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1034/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:53.298559193 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n     }\n \n     /**\n@@ -83,7 +83,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_481/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:33.115216320 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -89,7 +88,7 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Replace", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_144/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:19:50.265512092 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -65,7 +65,8 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        rpmAngle = calculateTachometer(0);\n+\t\tsetBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2303/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:34.881104852 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        speedAngle = calculateSpeedometer(0);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1650/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:07.190946003 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -141,7 +141,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        initializeProgressBars();\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "initializeProgressBars();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1637/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:59.942606973 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -68,7 +67,8 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        setBackground(new Color(backgroundColor));\n+\t\tinitializeProgressBars();\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2499/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:39:13.361025168 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        setBackground(new Color(backgroundColor));\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1224/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:26.459906045 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -124,7 +123,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter)\n+\t\t\t\t/ (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n@@ -136,7 +136,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        progressBarsPanel.add(gasLabel);\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "Replace", 
          "seed": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_852/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:29.659246636 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -88,7 +87,6 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1037/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:54.662642478 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -137,7 +137,8 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n+        breakProgressBar.setStringPainted(true);\n+\t\tfinal int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2017/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:10.951103361 -0500\n@@ -56,15 +56,13 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n@@ -118,7 +116,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Delete", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2007/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:05.422867601 -0500\n@@ -55,8 +55,7 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -76,7 +75,8 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n+        progressBarsPanel.add(gasLabel);\n+\t\tprogressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n                 progressBarsPanelWidth,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Delete", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_860/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:32.951368916 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -142,6 +141,6 @@\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n-                / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n+\t\t\t\t/ (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "Replace", 
          "seed": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_344/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:31.677508528 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -90,7 +90,8 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1241/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:34.892360003 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        gasLabel.setText(\"gas pedal\");\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1255/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:40.696669962 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,7 +65,8 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tsetBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -124,7 +125,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter)\n+\t\t\t\t/ (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "Replace", 
          "seed": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1119/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:35.373055270 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -89,7 +89,8 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        speedAngle = calculateSpeedometer(0);\n+\t\tprogressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n@@ -120,7 +121,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        initializeDashboard();\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "InsertBefore", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2312/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:40.061316843 -0500\n@@ -56,15 +56,12 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2350/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:58.082052577 -0500\n@@ -56,15 +56,13 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n@@ -90,7 +88,8 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_336/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:28.273508647 -0500\n@@ -56,15 +56,13 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Delete", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1379/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:42.787869832 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -65,10 +64,12 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tsetBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        setLayout(null);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2501/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:39:14.005042276 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -83,7 +82,7 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2401/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:23.507086318 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -92,6 +92,7 @@\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n+\t\tprogressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1471/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:33.974444054 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +75,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -137,7 +138,8 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n+        breakProgressBar.setStringPainted(true);\n+\t\tfinal int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_896/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:48.431944119 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1541/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:10.084226936 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -67,6 +67,7 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1818/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:28.490647217 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -90,7 +90,8 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_219/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:29.561510711 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n     }\n \n     /**\n@@ -137,7 +137,8 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n+        gasProgressBar.setStringPainted(true);\n+\t\tfinal int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1665/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:12.975215386 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -118,7 +118,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        initializeDashboard();\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_750/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:41.693574468 -0500\n@@ -56,15 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        breakProgressBar.setStringPainted(true);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_845/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:26.467128081 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -90,7 +90,6 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1157/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:52.566035037 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_900/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:50.372016227 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -68,7 +68,7 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        add(progressBarsPanel);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1012/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:43.081977054 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -84,7 +84,7 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n@@ -100,7 +100,6 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Delete", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_171/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:04.965511575 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -82,7 +82,7 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_437/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:13.226816410 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -84,7 +84,8 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1401/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:55.604506559 -0500\n@@ -52,11 +52,12 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -119,7 +120,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        initializeProgressBars();\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "initializeProgressBars();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1835/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:37.947067084 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -89,7 +89,8 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        speedAngle = calculateSpeedometer(0);\n+\t\tprogressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "InsertBefore", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_842/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:25.199080992 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -119,7 +118,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        initializeProgressBars();\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "initializeProgressBars();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_603/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:30.252628928 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -142,6 +142,6 @@\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n-                / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n+\t\t\t\t/ (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "Replace", 
          "seed": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_574/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:16.208029947 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -75,14 +74,15 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n+        progressBarsPanel.add(gasLabel);\n+\t\tprogressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        progressBarsPanel.add(breakLabel);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Delete", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1155/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:51.933999408 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -82,7 +81,8 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n@@ -137,7 +137,8 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n+        breakProgressBar.setStringPainted(true);\n+\t\tfinal int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_516/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:48.001771819 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1655/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:09.095034794 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -83,7 +83,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1441/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:18.321653611 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n+        breakLabel.setText(\"break pedal\");\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -90,7 +90,8 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Replace", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_862/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:33.591392692 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -67,6 +67,7 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n@@ -85,7 +86,7 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(gasLabel);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1979/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:49.678193531 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -75,7 +75,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        add(progressBarsPanel);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -83,7 +83,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1765/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:00.769404512 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -138,7 +138,8 @@\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2101/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:52.876877026 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -68,7 +68,7 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        add(progressBarsPanel);\n     }\n \n     /**\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_882/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:42.563726040 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -91,7 +90,9 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tprogressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n@@ -135,7 +136,8 @@\n      * @return          The mapped value between [-75, 255] interval.\n      */\n     private int calculateSpeedometer(int speed) {\n-        final int minSpeedValue = 0;\n+        rpmAngle = calculateTachometer(0);\n+\t\tfinal int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 138, 
          "faulty": "final int minSpeedValue=0;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1305/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:05.429968996 -0500\n@@ -56,15 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        breakProgressBar.setStringPainted(true);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n@@ -90,7 +89,6 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1203/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:16.227349205 -0500\n@@ -52,11 +52,12 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_679/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:07.736900518 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -83,7 +82,7 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        setLayout(null);\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1692/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:23.827718089 -0500\n@@ -56,14 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n+        rpmAngle = calculateTachometer(0);\n+\t\t// Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n@@ -87,7 +87,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_557/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:08.607578802 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -65,7 +64,9 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tsetBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1824/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:31.734791481 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_958/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:16.260978905 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -75,7 +74,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1575/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:27.353061263 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -124,7 +124,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakLabel.setText(\"break pedal\");\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_779/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:55.757990057 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_350/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:34.233512853 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -89,7 +89,6 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n@@ -121,7 +120,8 @@\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n-        final int maxRpmMeter = 255;\n+        setBackground(new Color(backgroundColor));\n+\t\tfinal int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 124, 
          "faulty": "final int maxRpmMeter=255;", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_598/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:27.716613918 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -84,12 +84,14 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(breakLabel);\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tprogressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_404/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:58.572210273 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +75,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1251/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:38.780567861 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -84,7 +83,6 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Delete", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_819/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:12.982627436 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -89,7 +88,6 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_915/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:56.888258456 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -67,6 +67,7 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n@@ -124,7 +125,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakLabel.setText(\"break pedal\");\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_285/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:04.397509486 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n     }\n \n     /**\n@@ -85,8 +85,6 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n-\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Delete", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_548/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:04.223299247 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -76,12 +76,6 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n-\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n@@ -100,7 +94,8 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tsuper.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1626/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:54.590355555 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -85,7 +84,7 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_487/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:35.683738545 -0500\n@@ -55,8 +55,9 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        setLayout(null);\n+\t\trpmAngle = calculateTachometer(0);\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -90,7 +91,8 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n@@ -139,9 +141,10 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n-                / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n+\t\t\t\t/ (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "Replace", 
          "seed": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2183/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:30.390444817 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -118,7 +117,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        initializeDashboard();\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2171/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:23.934176167 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -68,7 +68,7 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        setLayout(null);\n     }\n \n     /**\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        gasLabel.setText(\"gas pedal\");\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1132/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:41.145386659 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -76,12 +76,6 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n-\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n@@ -90,7 +84,8 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n@@ -121,7 +116,8 @@\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n-        final int maxRpmMeter = 255;\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tfinal int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n@@ -137,8 +133,10 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        setBackground(new Color(backgroundColor));\n+\t\tfinal int minSpeedMeter = -75;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 124, 
          "faulty": "final int maxRpmMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1815/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:27.214590409 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        rpmAngle = calculateTachometer(0);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_428/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:09.414225896 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -66,7 +66,8 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+        gasProgressBar.setStringPainted(true);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1258/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:42.004739545 -0500\n@@ -56,19 +56,15 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n-        initializeProgressBars();\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Delete", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Delete", 
          "seed": "initializeProgressBars();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_339/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:29.557508602 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -87,7 +86,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1915/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:19.240878686 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -68,7 +68,8 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        add(progressBarsPanel);\n+\t\tinitializeProgressBars();\n     }\n \n     /**\n@@ -83,11 +84,11 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setLayout(null);\n+        setBackground(new Color(backgroundColor));\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_236/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:38.245510405 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -84,7 +84,7 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2439/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:42.527856645 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -76,7 +75,8 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n+        progressBarsPanel.add(gasLabel);\n+\t\tprogressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n                 progressBarsPanelWidth,\n@@ -90,7 +90,8 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n@@ -137,7 +138,8 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n+        breakProgressBar.setStringPainted(true);\n+\t\tfinal int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1431/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:13.081386429 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -75,7 +74,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        setLayout(null);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_972/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:23.861261670 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -76,7 +76,8 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n+        progressBarsPanel.add(gasLabel);\n+\t\tprogressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n                 progressBarsPanelWidth,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1125/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:37.901200723 -0500\n@@ -56,15 +56,13 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_955/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:14.992931734 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -136,7 +136,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        breakLabel.setText(\"break pedal\");\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_920/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:00.240383085 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -121,7 +120,8 @@\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n-        final int maxRpmMeter = 255;\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tfinal int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n@@ -135,7 +135,8 @@\n      * @return          The mapped value between [-75, 255] interval.\n      */\n     private int calculateSpeedometer(int speed) {\n-        final int minSpeedValue = 0;\n+        rpmAngle = calculateTachometer(0);\n+\t\tfinal int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 124, 
          "faulty": "final int maxRpmMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 138, 
          "faulty": "final int minSpeedValue=0;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2515/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:39:20.697221130 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -136,7 +136,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        gasProgressBar.setStringPainted(true);\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1690/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:23.183688353 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -66,9 +66,8 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n-        initializeProgressBars();\n+        breakProgressBar.setStringPainted(true);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1763/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:00.133375783 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +75,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -141,7 +142,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        breakProgressBar.setStringPainted(true);\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_385/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:49.586048434 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -91,7 +90,6 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n@@ -124,7 +122,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakProgressBar.setStringPainted(true);\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_572/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:15.563993092 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -100,7 +100,8 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n+\t\tsuper.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2264/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:13.592231176 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -136,12 +135,13 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n-                / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n+\t\t\t\t/ (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "Replace", 
          "seed": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_785/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:58.274081653 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -118,7 +118,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n@@ -139,7 +140,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1085/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:18.508072281 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -82,7 +82,7 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n@@ -138,7 +138,8 @@\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_713/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:23.861140730 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -100,7 +100,8 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tsuper.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n@@ -119,7 +120,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n@@ -136,7 +138,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        progressBarsPanel.add(gasLabel);\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2062/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:33.764071483 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -88,7 +88,7 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        add(progressBarsPanel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_869/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:36.155487944 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n+\t\trpmAngle = calculateTachometer(0);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_346/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:32.321508505 -0500\n@@ -55,8 +55,9 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        setLayout(null);\n+\t\trpmAngle = calculateTachometer(0);\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -122,7 +123,8 @@\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n-        int newrpm = maxRpmValue - rpm;\n+        initializeDashboard();\n+\t\tint newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 125, 
          "faulty": "int newrpm=maxRpmValue - rpm;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2437/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:41.883830602 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -89,7 +89,7 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        progressBarsPanel.add(breakProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_941/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:09.260718522 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -119,7 +119,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        initializeProgressBars();\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "initializeProgressBars();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1201/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:15.575313491 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -87,7 +86,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        progressBarsPanel.add(breakProgressBar);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1160/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:53.826105999 -0500\n@@ -52,11 +52,13 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n+        progressBarsPanel.add(gasLabel);\n+\t\tspeedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2060/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:33.132044761 -0500\n@@ -52,11 +52,12 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -68,7 +69,8 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        setLayout(null);\n+\t\tinitializeProgressBars();\n     }\n \n     /**\n@@ -142,6 +144,6 @@\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n-                / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n+\t\t\t\t/ (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "Replace", 
          "seed": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1221/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:25.171836318 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -141,7 +140,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        initializeDashboard();\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1140/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:44.925602330 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -76,14 +76,9 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n-\n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        setLayout(null);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2065/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:35.024124742 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        setLayout(null);\n+\t\trpmAngle = calculateTachometer(0);\n     }\n \n     /**\n@@ -85,7 +85,8 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(gasLabel);\n+\t\tbreakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1569/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:24.180908836 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -66,7 +66,8 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+        add(progressBarsPanel);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n@@ -141,7 +142,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        initializeDashboard();\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_511/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:46.017496909 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -87,7 +87,7 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        gasLabel.setText(\"gas pedal\");\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "Replace", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1675/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:16.803393111 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -84,7 +84,7 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n@@ -118,7 +118,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_716/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:25.137166934 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,9 +65,8 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tsetBackground(new Color(backgroundColor));\n         initializeProgressBars();\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "Delete", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_304/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:13.341509172 -0500\n@@ -55,8 +55,7 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Delete", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2095/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:49.672742318 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -87,7 +86,6 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "Delete", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2537/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:39:31.585516037 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -91,7 +90,6 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1652/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:07.826975675 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -82,7 +81,7 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setBackground(new Color(backgroundColor));\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1275/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:50.453186518 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -90,7 +90,6 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n@@ -118,7 +117,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_352/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:34.873536880 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -89,7 +89,7 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Replace", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1195/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:13.039174335 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -85,8 +85,6 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n-\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_419/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:04.345352318 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -89,7 +89,7 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Replace", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1671/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:15.547334845 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -118,7 +117,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        setBackground(new Color(backgroundColor));\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2208/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:46.291104519 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -67,6 +66,7 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n@@ -85,7 +85,7 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(gasLabel);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n@@ -138,8 +138,10 @@\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int maxSpeedMeter = 255;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_960/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:16.901002714 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -136,7 +136,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1780/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:08.557755514 -0500\n@@ -55,8 +55,7 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -66,7 +65,8 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+        breakProgressBar.setStringPainted(true);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n@@ -75,7 +75,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_855/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:30.935294031 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -100,7 +99,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        progressBarsPanel.add(breakProgressBar);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2324/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:46.481579266 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -75,7 +75,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -88,8 +89,7 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2077/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:41.376392901 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -82,7 +81,8 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2042/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:23.603641226 -0500\n@@ -56,15 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        gasProgressBar.setStringPainted(true);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1919/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:21.136961074 -0500\n@@ -56,15 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        breakProgressBar.setStringPainted(true);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n@@ -75,7 +74,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(breakProgressBar);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_175/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:06.877511508 -0500\n@@ -56,7 +56,8 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n     }\n \n     /**\n@@ -83,7 +84,7 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        rpmAngle = calculateTachometer(0);\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n@@ -138,7 +139,8 @@\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1616/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:48.766080909 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -90,7 +90,8 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1175/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:01.506536098 -0500\n@@ -54,9 +54,9 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n+        gasProgressBar.setStringPainted(true);\n+\t\tspeedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -87,7 +87,6 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2151/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:14.821796186 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,7 +65,8 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tsetBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -75,7 +76,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -88,7 +90,8 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        add(progressBarsPanel);\n+\t\tprogressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_291/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:06.941509397 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -120,7 +119,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_866/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:34.875440390 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -66,8 +65,6 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n         initializeProgressBars();\n     }\n \n@@ -82,7 +79,8 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1696/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:25.731805931 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -118,7 +118,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        setBackground(new Color(backgroundColor));\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n@@ -136,7 +137,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        progressBarsPanel.add(gasLabel);\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_158/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:19:57.965511821 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -100,7 +99,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        initializeDashboard();\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1169/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:58.322358287 -0500\n@@ -56,15 +56,13 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        progressBarsPanel.add(breakLabel);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n@@ -142,6 +140,6 @@\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n-                / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n+\t\t\t\t/ (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "Replace", 
          "seed": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_669/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:01.908867287 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -69,6 +69,7 @@\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n+\t\tinitializeProgressBars();\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "InsertBefore", 
          "seed": "initializeProgressBars();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_378/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:47.073344384 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -84,11 +84,11 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        rpmAngle = calculateTachometer(0);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1848/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:44.927375758 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -68,7 +68,8 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        rpmAngle = calculateTachometer(0);\n+\t\tinitializeProgressBars();\n     }\n \n     /**\n@@ -124,7 +125,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakLabel.setText(\"break pedal\");\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1113/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:32.844909338 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -86,6 +85,7 @@\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n+\t\tbreakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_540/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:59.582983994 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -66,7 +66,8 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+        gasProgressBar.setStringPainted(true);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n@@ -88,7 +89,8 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1955/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:38.493712243 -0500\n@@ -55,8 +55,9 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n+\t\trpmAngle = calculateTachometer(0);\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_100/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:19:24.933512982 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -119,12 +118,15 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n-        final int maxRpmMeter = 255;\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tfinal int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        progressBarsPanel.add(breakProgressBar);\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n@@ -137,7 +139,8 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 124, 
          "faulty": "final int maxRpmMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_596/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:27.076611505 -0500\n@@ -54,9 +54,9 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n+        breakProgressBar.setStringPainted(true);\n+\t\tspeedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_951/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:13.724884565 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        initializeProgressBars();\n+\t\trpmAngle = calculateTachometer(0);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "initializeProgressBars();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2450/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:47.600061655 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -87,7 +87,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        gasLabel.setText(\"gas pedal\");\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_833/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:20.126892652 -0500\n@@ -55,8 +55,9 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        setLayout(null);\n+\t\trpmAngle = calculateTachometer(0);\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_213/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:26.325510824 -0500\n@@ -55,8 +55,9 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        setLayout(null);\n+\t\trpmAngle = calculateTachometer(0);\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -88,7 +89,9 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tprogressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n@@ -121,7 +124,8 @@\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n-        final int maxRpmMeter = 255;\n+        setBackground(new Color(backgroundColor));\n+\t\tfinal int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 124, 
          "faulty": "final int maxRpmMeter=255;", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2287/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:26.404757474 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        rpmAngle = calculateTachometer(0);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1068/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:10.823616790 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -83,7 +83,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1946/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:34.657546676 -0500\n@@ -54,9 +54,10 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tspeedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_533/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:56.370752493 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1713/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:32.796130933 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        progressBarsPanel.add(breakProgressBar);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n@@ -119,7 +119,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1715/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:33.436160308 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        add(progressBarsPanel);\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        add(progressBarsPanel);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1939/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:30.785379299 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -90,7 +90,7 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        setBackground(new Color(backgroundColor));\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "Replace", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1319/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:11.178266089 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -85,7 +85,8 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(gasLabel);\n+\t\tbreakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2425/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:34.875547029 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -119,7 +118,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setLayout(null);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_756/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:44.881664472 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        initializeDashboard();\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_618/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:37.412702407 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -120,7 +120,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1707/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:30.244013684 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -89,7 +88,8 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tprogressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_659/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:58.052865282 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -120,7 +119,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n@@ -137,7 +137,8 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n+        breakProgressBar.setStringPainted(true);\n+\t\tfinal int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1218/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:23.891766920 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -124,7 +124,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakLabel.setText(\"break pedal\");\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_665/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:00.628864403 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -83,7 +83,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        setLayout(null);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_374/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:45.772960041 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -89,7 +89,6 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Delete", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1667/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:13.607244756 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -89,7 +88,6 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n@@ -100,7 +98,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        progressBarsPanel.add(breakProgressBar);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n@@ -139,7 +137,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1911/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:17.348796408 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -83,7 +82,7 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        progressBarsPanel.add(gasProgressBar);\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1950/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:36.581629750 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -84,7 +84,7 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1249/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:38.116532429 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -82,7 +81,7 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n@@ -142,6 +141,6 @@\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n-                / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n+\t\t\t\t/ (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "Replace", 
          "seed": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2159/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:18.021929741 -0500\n@@ -56,15 +56,13 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n@@ -87,7 +85,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Delete", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1301/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:04.141902185 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -82,7 +82,8 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n@@ -120,7 +121,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        initializeDashboard();\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_376/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:46.413150498 -0500\n@@ -52,11 +52,12 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -76,17 +77,9 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n-\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n-\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_735/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:34.717389193 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -136,7 +135,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        gasProgressBar.setStringPainted(true);\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_667/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:01.264865646 -0500\n@@ -56,14 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n+        gasProgressBar.setStringPainted(true);\n+\t\t// Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2394/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:20.278955330 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1054/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:03.611184761 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -118,7 +118,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_926/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:02.800478276 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -87,7 +87,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_395/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:54.023181457 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -91,7 +91,6 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n@@ -119,7 +118,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBackground(new Color(backgroundColor));\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_554/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:07.315497993 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -89,7 +89,8 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tprogressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1704/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:28.991956096 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,7 +65,8 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tsetBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_584/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:20.708279294 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -87,7 +87,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_782/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:57.018035060 -0500\n@@ -55,8 +55,7 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -139,7 +138,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        rpmAngle = calculateTachometer(0);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Delete", 
          "seed": "initializeProgressBars();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1761/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:59.497347040 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -65,7 +64,9 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tsetBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -118,8 +119,10 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmValue = 0;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_409/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:00.532617014 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -68,7 +68,8 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        rpmAngle = calculateTachometer(0);\n+\t\tinitializeProgressBars();\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2254/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:09.136047774 -0500\n@@ -52,11 +52,12 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1495/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:44.698979276 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -90,7 +90,6 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n@@ -141,7 +140,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        initializeDashboard();\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1892/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:07.156352021 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -76,11 +75,7 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n+        progressBarsPanel.add(gasLabel);\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_466/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:26.681742459 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        setLayout(null);\n+\t\trpmAngle = calculateTachometer(0);\n     }\n \n     /**\n@@ -135,10 +135,13 @@\n      * @return          The mapped value between [-75, 255] interval.\n      */\n     private int calculateSpeedometer(int speed) {\n-        final int minSpeedValue = 0;\n+        add(progressBarsPanel);\n+\t\tfinal int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 138, 
          "faulty": "final int minSpeedValue=0;", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_198/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:18.573511097 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        rpmAngle = calculateTachometer(0);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -84,7 +84,7 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(breakLabel);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_483/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:33.755349156 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        speedAngle = calculateSpeedometer(0);\n+\t\trpmAngle = calculateTachometer(0);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_936/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:07.184641310 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -88,7 +88,7 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        add(progressBarsPanel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2023/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:12.855184455 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -88,7 +87,7 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n@@ -124,7 +123,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakLabel.setText(\"break pedal\");\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_651/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:54.216881799 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -124,7 +123,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakLabel.setText(\"break pedal\");\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_459/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:24.125082693 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -75,7 +74,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_31/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:18:43.581514435 -0500\n@@ -56,7 +56,8 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n     }\n \n     /**\n@@ -124,7 +125,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter)\n+\t\t\t\t/ (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "Replace", 
          "seed": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1485/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:39.674729157 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -137,7 +137,8 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n+        setBackground(new Color(backgroundColor));\n+\t\tfinal int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2226/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:54.507444365 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -75,7 +75,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        add(progressBarsPanel);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -141,7 +142,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        progressBarsPanel.add(gasLabel);\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1729/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:40.460481959 -0500\n@@ -56,15 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        rpmAngle = calculateTachometer(0);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n@@ -84,7 +83,8 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2534/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:39:30.281480467 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -68,7 +67,8 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        setLayout(null);\n+\t\tinitializeProgressBars();\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_464/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:26.049584091 -0500\n@@ -54,9 +54,10 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n+        progressBarsPanel.add(gasLabel);\n+\t\tspeedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_413/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:01.808871443 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakLabel.setText(\"break pedal\");\n     }\n \n     /**\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        rpmAngle = calculateTachometer(0);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2166/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:21.250064340 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -88,7 +88,7 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        gasLabel.setText(\"gas pedal\");\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n@@ -120,7 +120,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        initializeDashboard();\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_947/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:12.384834719 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        rpmAngle = calculateTachometer(0);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_864/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:34.231416466 -0500\n@@ -55,8 +55,7 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -85,7 +84,8 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tbreakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Delete", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1660/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:11.047125705 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -120,7 +120,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        initializeDashboard();\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1050/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:02.347108582 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -85,7 +84,7 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(breakProgressBar);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2406/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:26.019188198 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -87,7 +86,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1566/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:22.924848379 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -89,7 +89,7 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_520/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:49.906024391 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -69,6 +69,7 @@\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n+\t\tinitializeProgressBars();\n     }\n \n     /**\n@@ -88,7 +89,7 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        gasLabel.setText(\"gas pedal\");\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n@@ -141,7 +142,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        progressBarsPanel.add(gasLabel);\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "InsertBefore", 
          "seed": "initializeProgressBars();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_807/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:07.914439336 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -82,10 +82,12 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tbreakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_802/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:06.010368679 -0500\n@@ -55,8 +55,9 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        setLayout(null);\n+\t\trpmAngle = calculateTachometer(0);\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -82,7 +83,8 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n@@ -124,7 +126,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakLabel.setText(\"break pedal\");\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1477/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:36.522571675 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -84,14 +84,15 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n@@ -136,7 +137,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        breakLabel.setText(\"break pedal\");\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1117/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:34.721017679 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n     }\n \n     /**\n@@ -66,7 +66,8 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+        breakProgressBar.setStringPainted(true);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1244/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:36.160427892 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_453/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:21.580378061 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +75,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -88,7 +89,8 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        add(progressBarsPanel);\n+\t\tprogressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1447/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:20.869783063 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -100,7 +99,6 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n@@ -120,7 +118,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        initializeDashboard();\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Delete", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_949/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:13.044859270 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n+\t\trpmAngle = calculateTachometer(0);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2103/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:53.528904421 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -124,7 +124,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakProgressBar.setStringPainted(true);\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2301/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:34.181076188 -0500\n@@ -52,11 +52,12 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -85,8 +86,6 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n-\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1071/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:12.095692534 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        initializeProgressBars();\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -76,12 +76,6 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n-\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Replace", 
          "seed": "initializeProgressBars();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Delete", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1310/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:07.318066772 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -66,7 +66,8 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+        gasProgressBar.setStringPainted(true);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n@@ -83,7 +84,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1151/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:49.993889844 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -85,7 +85,8 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        speedAngle = calculateSpeedometer(0);\n+\t\tbreakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n@@ -137,7 +138,8 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n+        breakProgressBar.setStringPainted(true);\n+\t\tfinal int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2442/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:43.775907105 -0500\n@@ -56,17 +56,17 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        gasProgressBar.setStringPainted(true);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+        add(progressBarsPanel);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n@@ -85,7 +85,8 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tbreakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2237/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:59.603654815 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -100,7 +99,8 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n+\t\tsuper.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n@@ -136,7 +136,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        gasProgressBar.setStringPainted(true);\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1009/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:41.785928804 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -76,12 +76,6 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n-\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_186/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:12.809511299 -0500\n@@ -54,9 +54,10 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n+        gasProgressBar.setStringPainted(true);\n+\t\tspeedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -75,7 +76,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        speedAngle = calculateSpeedometer(0);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_530/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:55.094657677 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -85,8 +85,6 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n-\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_383/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:48.961878683 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -119,7 +119,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        initializeProgressBars();\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "initializeProgressBars();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2088/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:46.464607308 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -66,7 +66,8 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+        breakProgressBar.setStringPainted(true);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1702/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:28.355926821 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        initializeProgressBars();\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "initializeProgressBars();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1610/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:45.433923272 -0500\n@@ -53,10 +53,11 @@\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n-        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tbreakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 56, 
          "faulty": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1362/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:35.099484244 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -68,7 +68,8 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        add(progressBarsPanel);\n+\t\tinitializeProgressBars();\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_293/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:07.581509374 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -83,7 +83,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        setLayout(null);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n@@ -142,6 +143,6 @@\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n-                / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n+\t\t\t\t/ (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "Replace", 
          "seed": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2471/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:57.396457140 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -88,7 +88,8 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        gasLabel.setText(\"gas pedal\");\n+\t\tprogressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2019/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:11.587130454 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +75,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        setLayout(null);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1479/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:37.158603490 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -66,7 +66,8 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+        add(progressBarsPanel);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n@@ -139,7 +140,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        rpmAngle = calculateTachometer(0);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1562/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:20.928752181 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1640/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:01.238667715 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -87,10 +87,10 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2343/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:55.445945115 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -84,7 +83,8 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1408/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:59.488698080 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        initializeProgressBars();\n     }\n \n     /**\n@@ -100,7 +100,8 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tsuper.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "initializeProgressBars();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1265/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:45.884945343 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +75,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1459/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:26.642075180 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -68,7 +68,7 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        add(progressBarsPanel);\n     }\n \n     /**\n@@ -100,7 +100,8 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n+\t\tsuper.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_710/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:22.569115477 -0500\n@@ -55,8 +55,9 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        setLayout(null);\n+\t\trpmAngle = calculateTachometer(0);\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -90,7 +91,8 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n@@ -136,7 +138,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        gasProgressBar.setStringPainted(true);\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_407/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:59.884485164 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -138,7 +137,8 @@\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_811/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:09.806509554 -0500\n@@ -56,15 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        rpmAngle = calculateTachometer(0);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n@@ -82,7 +81,7 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1786/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:11.105870029 -0500\n@@ -56,15 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        rpmAngle = calculateTachometer(0);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n@@ -100,7 +99,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_367/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:42.047780465 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -135,7 +135,8 @@\n      * @return          The mapped value between [-75, 255] interval.\n      */\n     private int calculateSpeedometer(int speed) {\n-        final int minSpeedValue = 0;\n+        add(progressBarsPanel);\n+\t\tfinal int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 138, 
          "faulty": "final int minSpeedValue=0;", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1021/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:46.910166899 -0500\n@@ -54,9 +54,10 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasLabel);\n+\t\tspeedAngle = calculateSpeedometer(0);\n+        setLayout(null);\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +76,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -88,7 +89,8 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        add(progressBarsPanel);\n+\t\tprogressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2522/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:39:24.533324484 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -84,7 +84,7 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        speedAngle = calculateSpeedometer(0);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2384/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:15.222750016 -0500\n@@ -52,11 +52,12 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -138,7 +139,9 @@\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2461/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:52.768270375 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -65,8 +65,10 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+        add(progressBarsPanel);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_800/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:05.342343891 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasLabel.setText(\"gas pedal\");\n     }\n \n     /**\n@@ -90,7 +90,6 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n@@ -135,7 +134,8 @@\n      * @return          The mapped value between [-75, 255] interval.\n      */\n     private int calculateSpeedometer(int speed) {\n-        final int minSpeedValue = 0;\n+        setLayout(null);\n+\t\tfinal int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 138, 
          "faulty": "final int minSpeedValue=0;", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2333/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:50.973762680 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -118,8 +118,10 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmValue = 0;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_923/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:01.524430828 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -82,7 +81,8 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        progressBarsPanel.add(breakLabel);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_974/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:24.497285337 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -120,7 +120,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1988/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:55.066424662 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasLabel);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1607/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:44.161862999 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -66,7 +66,8 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+        gasLabel.setText(\"gas pedal\");\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_804/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:06.642392132 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -88,7 +88,8 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        add(progressBarsPanel);\n+\t\tprogressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_204/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:21.133511007 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -67,6 +67,7 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n@@ -87,7 +88,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n@@ -139,7 +141,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2230/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:56.403522694 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -76,18 +75,13 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n+        progressBarsPanel.add(gasLabel);\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n@@ -119,7 +113,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        add(progressBarsPanel);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n@@ -139,7 +134,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        rpmAngle = calculateTachometer(0);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_371/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:43.960401501 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -83,7 +82,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n@@ -119,7 +119,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1933/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:27.593241115 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +75,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -84,11 +85,12 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        add(progressBarsPanel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n@@ -119,7 +121,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n@@ -141,7 +144,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        progressBarsPanel.add(gasLabel);\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1482/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:38.422666656 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -84,12 +83,11 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_609/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:32.884650670 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -67,6 +67,7 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_764/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:47.445738664 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -88,8 +88,9 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        add(progressBarsPanel);\n+        speedAngle = calculateSpeedometer(0);\n+\t\tprogressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "InsertBefore", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_654/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:55.492874048 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        initializeProgressBars();\n     }\n \n     /**\n@@ -67,6 +67,7 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "initializeProgressBars();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_774/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:53.205911490 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        progressBarsPanel.add(breakProgressBar);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_730/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:32.809341649 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        add(progressBarsPanel);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_581/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:19.360205825 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -83,7 +83,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        setLayout(null);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2233/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:57.711576711 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -124,7 +124,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakLabel.setText(\"break pedal\");\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n@@ -141,7 +142,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        breakLabel.setText(\"break pedal\");\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_456/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:22.852736960 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -87,10 +86,12 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_123/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:19:38.157512517 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n+\t\trpmAngle = calculateTachometer(0);\n     }\n \n     /**\n@@ -83,10 +83,9 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        setLayout(null);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n-\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n@@ -119,7 +118,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_613/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:34.808670721 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -67,6 +67,7 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_415/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:02.456997192 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -84,7 +84,8 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1673/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:16.171363799 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        gasLabel.setText(\"gas pedal\");\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1727/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:39.816452526 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n@@ -119,7 +119,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_644/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:51.004910383 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -118,7 +117,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_623/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:39.348729976 -0500\n@@ -55,8 +55,9 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        initializeProgressBars();\n+\t\trpmAngle = calculateTachometer(0);\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -91,7 +92,6 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "initializeProgressBars();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "initializeProgressBars();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2124/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:03.257312545 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -67,6 +67,7 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n@@ -84,12 +85,15 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tprogressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_823/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:14.910699004 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -67,6 +67,7 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n@@ -75,7 +76,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1339/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:23.634903998 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -68,7 +68,8 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        speedAngle = calculateSpeedometer(0);\n+\t\tinitializeProgressBars();\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "InsertBefore", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_934/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:06.552617805 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        setLayout(null);\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -67,8 +67,6 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n-        initializeProgressBars();\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1360/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:34.463452216 -0500\n@@ -55,8 +55,8 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n+\t\trpmAngle = calculateTachometer(0);\n     }\n \n     /**\n@@ -68,7 +68,8 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        add(progressBarsPanel);\n+\t\tinitializeProgressBars();\n     }\n \n     /**\n@@ -138,10 +139,11 @@\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n-                / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n+\t\t\t\t/ (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "Replace", 
          "seed": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "InsertBefore", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2136/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:07.697498430 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -88,7 +88,6 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1862/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:52.551711738 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -118,7 +118,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        setBackground(new Color(backgroundColor));\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1491/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:42.810885410 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -67,15 +67,13 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n-        initializeProgressBars();\n     }\n \n     /**\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        speedAngle = calculateSpeedometer(0);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -138,7 +136,8 @@\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Delete", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_354/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:21:35.521561206 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -67,8 +67,6 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n-        initializeProgressBars();\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1453/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:24.065945003 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -68,7 +68,7 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        add(progressBarsPanel);\n     }\n \n     /**\n@@ -83,7 +83,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        setLayout(null);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n@@ -138,7 +139,8 @@\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1886/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:34:03.960212262 -0500\n@@ -52,11 +52,11 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -118,7 +118,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        setBackground(new Color(backgroundColor));\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1745/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:49.712903598 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -83,7 +83,7 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        setLayout(null);\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_253/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:20:47.769510071 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -137,11 +137,12 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n+        breakProgressBar.setStringPainted(true);\n+\t\tfinal int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n-                / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n+\t\t\t\t/ (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "Replace", 
          "seed": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_871/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:36.819512612 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,7 +64,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1109/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:30.964800493 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_894/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:47.791920331 -0500\n@@ -52,11 +52,12 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_994/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:26:35.325688322 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,7 +65,6 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_564/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:11.751770215 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -121,7 +121,8 @@\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n-        final int maxRpmMeter = 255;\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tfinal int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 124, 
          "faulty": "final int maxRpmMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2118/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:00.713205930 -0500\n@@ -56,16 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -87,7 +85,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n@@ -120,7 +119,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Delete", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_570/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:14.931956723 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -89,7 +88,7 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        speedAngle = calculateSpeedometer(0);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "Replace", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1630/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:56.514446044 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -84,7 +84,7 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1698/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:26.395836541 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -68,7 +67,7 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        add(progressBarsPanel);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2141/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:10.257605497 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -87,11 +87,13 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n+        setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1445/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:20.237750980 -0500\n@@ -56,15 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        gasProgressBar.setStringPainted(true);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n@@ -119,7 +118,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        initializeProgressBars();\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "initializeProgressBars();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1127/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:38.533237005 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -87,7 +87,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n@@ -100,7 +101,6 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n@@ -136,7 +136,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        breakLabel.setText(\"break pedal\");\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_700/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:18.593042585 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -67,8 +67,6 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n-        initializeProgressBars();\n     }\n \n     /**\n@@ -76,12 +74,6 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n-\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_705/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:20.545077375 -0500\n@@ -54,9 +54,10 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n+        progressBarsPanel.add(gasLabel);\n+\t\tspeedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_630/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:23:43.212791805 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        breakProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_858/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:32.319345440 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -119,7 +118,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1075/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:14.015806606 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -100,7 +100,8 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tsuper.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1829/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:33.778882258 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -84,7 +84,7 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(breakLabel);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_887/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:44.499797985 -0500\n@@ -52,11 +52,12 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2081/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:43.272472839 -0500\n@@ -55,8 +55,7 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Delete", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_477/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:31.814938213 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -88,7 +88,7 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2532/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:39:29.641463034 -0500\n@@ -52,11 +52,12 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -87,7 +88,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2211/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:47.539156185 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -68,7 +67,7 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        setLayout(null);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2011/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:08.426995773 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -67,8 +67,6 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n-        initializeProgressBars();\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_497/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:40.156569515 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -84,7 +84,8 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(breakLabel);\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1093/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:27:22.484306070 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -141,7 +141,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        breakProgressBar.setStringPainted(true);\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1868/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:55.691849764 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -67,8 +67,6 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n-        initializeProgressBars();\n     }\n \n     /**\n@@ -89,7 +87,8 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        speedAngle = calculateSpeedometer(0);\n+\t\tprogressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n@@ -122,7 +121,8 @@\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n-        int newrpm = maxRpmValue - rpm;\n+        initializeDashboard();\n+\t\tint newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n@@ -138,7 +138,8 @@\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "InsertBefore", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 125, 
          "faulty": "int newrpm=maxRpmValue - rpm;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1228/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:28:28.376009583 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -65,7 +65,9 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tsetBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1325/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:14.354429497 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -137,7 +136,8 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n+        breakProgressBar.setStringPainted(true);\n+\t\tfinal int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_728/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:31.553311271 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -65,7 +64,6 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_446/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:18.375532309 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +75,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(breakLabel);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -90,7 +90,6 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2513/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:39:20.057203942 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        initializeDashboard();\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "initializeDashboard();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1602/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:41.541738669 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +75,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -87,7 +88,6 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2257/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:10.408100147 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        progressBarsPanel.add(breakProgressBar);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2541/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:39:33.621571708 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -82,7 +82,7 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n@@ -124,7 +124,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakLabel.setText(\"break pedal\");\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1783/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:33:09.829812701 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -84,7 +84,8 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n@@ -119,7 +120,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n@@ -138,7 +140,8 @@\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n-        final int maxSpeedMeter = 255;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 141, 
          "faulty": "final int maxSpeedMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2420/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:32.979470252 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -82,7 +82,8 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n@@ -100,7 +101,6 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Delete", 
          "seed": "setLayout(null);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2153/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:15.461822905 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -67,8 +67,6 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n-        initializeProgressBars();\n     }\n \n     /**\n@@ -82,13 +80,13 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        setLayout(null);\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        add(progressBarsPanel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2261/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:12.324179006 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -90,8 +89,6 @@\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n@@ -124,7 +121,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakProgressBar.setStringPainted(true);\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2530/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:39:29.001445614 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -137,7 +137,8 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n+        breakProgressBar.setStringPainted(true);\n+\t\tfinal int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_740/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:37.253454226 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n     }\n \n     /**\n@@ -75,7 +75,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -85,13 +86,15 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(gasLabel);\n+\t\tbreakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n+\t\tprogressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2058/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:32.496017864 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -68,7 +67,8 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        rpmAngle = calculateTachometer(0);\n+\t\tinitializeProgressBars();\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "InsertBefore", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1384/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:45.343997414 -0500\n@@ -56,15 +56,14 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        breakProgressBar.setStringPainted(true);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n@@ -76,11 +75,7 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n+        progressBarsPanel.add(gasLabel);\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2508/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:39:17.169126606 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -84,11 +84,12 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        add(progressBarsPanel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n@@ -124,7 +125,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakLabel.setText(\"break pedal\");\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1681/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:18.723482086 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -87,10 +87,10 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n-        progressBarsPanel.add(breakLabel);\n+        setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n     }\n \n@@ -124,7 +124,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        breakProgressBar.setStringPainted(true);\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 93, 
          "faulty": "progressBarsPanel.add(breakLabel);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1348/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:28.139132735 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,7 +65,6 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -75,7 +74,7 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2377/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:12.094622902 -0500\n@@ -54,9 +54,10 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n+        progressBarsPanel.add(gasLabel);\n+\t\tspeedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -83,7 +84,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        setLayout(null);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2092/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:35:48.396688633 -0500\n@@ -56,15 +56,13 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n+        breakProgressBar.setStringPainted(true);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2398/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:22.191032925 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -68,7 +68,7 @@\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n-        initializeProgressBars();\n+        add(progressBarsPanel);\n     }\n \n     /**\n@@ -87,7 +87,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n@@ -124,7 +125,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Replace", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1475/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:30:35.886539848 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        rpmAngle = calculateTachometer(0);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -83,7 +83,8 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_733/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:24:34.069372641 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -118,7 +118,8 @@\n      * @return      The mapped value between [-75, 255] interval.\n      */\n     private int calculateTachometer(int rpm) {\n-        final int minRpmValue = 0;\n+        gasLabel.setText(\"gas pedal\");\n+\t\tfinal int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 121, 
          "faulty": "final int minRpmValue=0;", 
          "type": "InsertBefore", 
          "seed": "gasLabel.setText(\"gas pedal\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1559/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:19.644690218 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -67,8 +67,6 @@\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n-        initializeProgressBars();\n     }\n \n     /**\n@@ -84,7 +82,8 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setBackground(new Color(backgroundColor));\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_116/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:19:34.333512652 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -65,7 +64,8 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tsetBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -122,7 +122,9 @@\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n-        int newrpm = maxRpmValue - rpm;\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tint newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 125, 
          "faulty": "int newrpm=maxRpmValue - rpm;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_905/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:25:52.968112724 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -141,7 +141,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        initializeDashboard();\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2145/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:11.605661843 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,7 +65,8 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n+\t\tsetBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n@@ -91,7 +92,6 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n@@ -122,7 +122,8 @@\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n-        int newrpm = maxRpmValue - rpm;\n+        speedAngle = calculateSpeedometer(0);\n+\t\tint newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 125, 
          "faulty": "int newrpm=maxRpmValue - rpm;", 
          "type": "InsertBefore", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2216/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:49.427234318 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -82,7 +81,7 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        progressBarsPanel.add(gasLabel);\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1369/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:37.635611741 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -141,7 +141,8 @@\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n-        return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n+        progressBarsPanel.add(gasLabel);\n+\t\treturn (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 144, 
          "faulty": "return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter) / (maxSpeedValue - minSpeedValue) + minSpeedMeter;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2315/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:37:41.345369355 -0500\n@@ -52,11 +52,12 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -65,7 +66,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        progressBarsPanel.add(gasProgressBar);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2221/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:36:51.983340037 -0500\n@@ -54,9 +54,10 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n+        gasProgressBar.setStringPainted(true);\n+\t\tspeedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2381/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:13.970699147 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -82,7 +81,8 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        progressBarsPanel.add(breakProgressBar);\n+\t\tgasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "add(progressBarsPanel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_506/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:43.997202956 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -88,7 +87,8 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1578/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:31:28.629122478 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setStringPainted(true);\n     }\n \n     /**\n@@ -75,7 +75,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        gasProgressBar.setStringPainted(true);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -85,7 +86,7 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(gasLabel);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1350/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:29:28.783165357 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n     }\n \n     /**\n@@ -87,7 +87,8 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tadd(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_462/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:22:25.409419592 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -124,7 +124,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter)\n+\t\t\t\t/ (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "Replace", 
          "seed": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_2457/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:38:50.844192689 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -100,7 +100,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        breakProgressBar.setStringPainted(true);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:17:56.021516107 -0500\n+++ /tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_9k8l/Patch_1677/patched/tmp/Arja_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-02 19:32:17.431422224 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(gasProgressBar);\n     }\n \n     /**\n@@ -84,7 +84,8 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(breakLabel);\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n@@ -136,7 +137,8 @@\n      */\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n-        final int maxSpeedValue = 500;\n+        breakLabel.setText(\"break pedal\");\n+\t\tfinal int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 139, 
          "faulty": "final int maxSpeedValue=500;", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ]
    }
  ]
}