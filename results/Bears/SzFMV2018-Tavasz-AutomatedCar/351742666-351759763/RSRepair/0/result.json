{
  "repair_end": "2018-12-27 16:07:42.091221", 
  "repair_begin": "2018-12-27 15:59:22.172269", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Delete", 
          "seed": "final int minSpeedValue=0;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Replace", 
          "seed": "final int minRpmValue=0;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_1108/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:07:39.699677371 -0500\n@@ -54,9 +54,7 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -100,7 +98,7 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n+        final int minRpmValue = 0;\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_828/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:05:37.663625378 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        speedAngle = calculateSpeedometer(0);\n     }\n \n     /**\n@@ -88,10 +88,10 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n+\t\tprogressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "final int maxRpmValue=10000;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 124, 
          "faulty": "final int maxRpmMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_761/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:05:07.727614920 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        final int maxRpmValue = 10000;\n     }\n \n     /**\n@@ -121,7 +121,8 @@\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n-        final int maxRpmMeter = 255;\n+        progressBarsPanel.add(breakLabel);\n+\t\tfinal int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 55, 
          "faulty": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "final int minSpeedValue=0;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "initializeProgressBars();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 124, 
          "faulty": "final int maxRpmMeter=255;", 
          "type": "InsertBefore", 
          "seed": "final int minSpeedMeter=-75;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_922/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:06:19.595641280 -0500\n@@ -52,11 +52,11 @@\n      * @param inputPacket Contains all the required values coming from input.\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n-        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n+        final int minSpeedValue = 0;\n+\t\tgasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -121,7 +121,8 @@\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n-        final int maxRpmMeter = 255;\n+        final int minSpeedMeter = -75;\n+\t\tfinal int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "Replace", 
          "seed": "final int minRpmMeter=-75;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_713/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:04:47.455607628 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -83,7 +82,7 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n+        final int minRpmMeter = -75;\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "InsertBefore", 
          "seed": "final int maxRpmMeter=255;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_677/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:04:31.743601850 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.add(breakLabel);\n     }\n \n     /**\n@@ -66,7 +66,8 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n+        final int maxRpmMeter = 255;\n+\t\tsetBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 127, 
          "faulty": "return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_413/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:02:36.043555108 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n     }\n \n     /**\n@@ -124,7 +124,8 @@\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n-        return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n+        progressBarsPanel.add(breakLabel);\n+\t\treturn (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "final int minRpmValue=0;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_979/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:06:41.847651787 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -82,10 +81,10 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        progressBarsPanel.add(breakProgressBar);\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(breakLabel);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "final int minSpeedMeter=-75;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Replace", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 140, 
          "faulty": "final int minSpeedMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_126/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:00:27.439527041 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        final int minSpeedMeter = -75;\n     }\n \n     /**\n@@ -76,11 +76,7 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n+        breakLabel.setText(\"break pedal\");\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n@@ -88,7 +84,6 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n@@ -137,7 +132,8 @@\n     private int calculateSpeedometer(int speed) {\n         final int minSpeedValue = 0;\n         final int maxSpeedValue = 500;\n-        final int minSpeedMeter = -75;\n+        progressBarsPanel.add(gasLabel);\n+\t\tfinal int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n         int newspeed = maxSpeedValue - speed;\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 90, 
          "faulty": "add(progressBarsPanel);", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_964/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:06:35.011648601 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n     }\n \n     /**\n@@ -87,7 +87,6 @@\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n-        add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "final int minRpmMeter=-75;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 68, 
          "faulty": "setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_291/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:01:40.779530440 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        final int minRpmMeter = -75;\n     }\n \n     /**\n@@ -65,7 +65,7 @@\n     private void initializeDashboard() {\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n-        setBackground(new Color(backgroundColor));\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n         initializeProgressBars();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 58, 
          "faulty": "rpmAngle=calculateTachometer(0);", 
          "type": "Delete", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakProgressBar);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_80/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:00:07.107526100 -0500\n@@ -55,8 +55,6 @@\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n-        rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -84,7 +82,8 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        setLayout(null);\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 85, 
          "faulty": "gasLabel.setText(\"gas pedal\");", 
          "type": "Replace", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "InsertBefore", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_1063/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:07:19.251668593 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -82,8 +81,9 @@\n                 progressBarsPanelWidth,\n                 progressBarsPanelHeight);\n \n-        gasLabel.setText(\"gas pedal\");\n+        progressBarsPanel.add(breakLabel);\n         breakLabel.setText(\"break pedal\");\n+\t\tbreakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "final int minSpeedMeter=-75;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_557/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:03:37.079580771 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        final int minSpeedMeter = -75;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "final int minSpeedValue=0;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 124, 
          "faulty": "final int maxRpmMeter=255;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_586/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:03:49.903585862 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        final int minSpeedValue = 0;\n     }\n \n     /**\n@@ -121,7 +121,9 @@\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n-        final int maxRpmMeter = 255;\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tfinal int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_697/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:04:40.487605080 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -139,7 +138,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        gasProgressBar.setStringPainted(true);\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "Delete", 
          "seed": "gasProgressBar.setStringPainted(true);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_405/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:02:31.895553268 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n     }\n \n     /**\n@@ -88,7 +88,6 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "breakLabel.setText(\"break pedal\");"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Delete", 
          "seed": "final int maxSpeedValue=500;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "Delete", 
          "seed": "initializeDashboard();"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 125, 
          "faulty": "int newrpm=maxRpmValue - rpm;", 
          "type": "InsertBefore", 
          "seed": "final int minSpeedMeter=-75;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_190/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:00:52.815528215 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        breakLabel.setText(\"break pedal\");\n     }\n \n     /**\n@@ -84,9 +84,6 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n-\n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n@@ -122,7 +119,8 @@\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n-        int newrpm = maxRpmValue - rpm;\n+        final int minSpeedMeter = -75;\n+\t\tint newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_951/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:06:30.467646463 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -75,7 +74,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -91,7 +91,6 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_1033/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:07:05.951662732 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -84,7 +83,9 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Replace", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 91, 
          "faulty": "progressBarsPanel.add(gasLabel);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_155/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:00:38.683527561 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -88,7 +87,8 @@\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n-        progressBarsPanel.add(gasLabel);\n+        progressBarsPanel.setBackground(new Color(backgroundColor));\n+\t\tprogressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n         progressBarsPanel.add(breakProgressBar);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "InsertBefore", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_313/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:01:50.339534921 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -75,7 +74,8 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n+        speedAngle = calculateSpeedometer(0);\n+\t\tprogressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 122, 
          "faulty": "final int maxRpmValue=10000;", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_953/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:06:30.831646635 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -119,7 +118,8 @@\n      */\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n-        final int maxRpmValue = 10000;\n+        progressBarsPanel.add(gasLabel);\n+\t\tfinal int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "final int maxRpmMeter=255;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 67, 
          "faulty": "setLayout(null);", 
          "type": "Delete", 
          "seed": "final int minRpmMeter=-75;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 92, 
          "faulty": "progressBarsPanel.add(gasProgressBar);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "InsertBefore", 
          "seed": "final int maxSpeedValue=500;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_245/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:01:18.635529409 -0500\n@@ -56,15 +56,13 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        final int maxRpmMeter = 255;\n     }\n \n     /**\n      * Initializes the dashboard components\n      */\n     private void initializeDashboard() {\n-        // Not using any layout manager, but fixed coordinates\n-        setLayout(null);\n         setBackground(new Color(backgroundColor));\n         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n \n@@ -89,9 +87,11 @@\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n-        progressBarsPanel.add(gasProgressBar);\n+        progressBarsPanel.add(gasLabel);\n+\t\tprogressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n+        final int maxSpeedValue = 500;\n+\t\tprogressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "final int minSpeedMeter=-75;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_110/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:00:20.519526721 -0500\n@@ -56,7 +56,8 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,\n+\t\t\t\tprogressBarsPanelWidth, progressBarsPanelHeight);\n     }\n \n     /**\n@@ -85,7 +86,8 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        final int minSpeedMeter = -75;\n+\t\tbreakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "gasProgressBar.setValue(inputPacket.getGasPedalPosition());"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_66/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:00:02.055525866 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 57, 
          "faulty": "speedAngle=calculateSpeedometer(0);", 
          "type": "Replace", 
          "seed": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "final int maxSpeedValue=500;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_477/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:03:01.035565921 -0500\n@@ -54,9 +54,8 @@\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n-        speedAngle = calculateSpeedometer(0);\n+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -76,15 +75,10 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n-\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n+        final int maxSpeedValue = 500;\n+\t\tgasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "final int maxSpeedMeter=255;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 87, 
          "faulty": "gasProgressBar.setStringPainted(true);", 
          "type": "Delete", 
          "seed": "final int minSpeedValue=0;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "setBackground(new Color(backgroundColor));"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_7/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:34.867524609 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -84,7 +83,6 @@\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n-        gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n@@ -120,7 +118,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        setBackground(new Color(backgroundColor));\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 123, 
          "faulty": "final int minRpmMeter=-75;", 
          "type": "InsertBefore", 
          "seed": "setLayout(null);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_776/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:05:13.939617120 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -120,7 +119,8 @@\n     private int calculateTachometer(int rpm) {\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n-        final int minRpmMeter = -75;\n+        setLayout(null);\n+\t\tfinal int minRpmMeter = -75;\n         final int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 56, 
          "faulty": "breakProgressBar.setValue(inputPacket.getBreakPedalPosition());", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(breakLabel);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "final int maxRpmMeter=255;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 103, 
          "faulty": "super.paintComponent(g);", 
          "type": "Delete", 
          "seed": "initializeProgressBars();"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_262/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:01:26.843529789 -0500\n@@ -53,10 +53,10 @@\n      */\n     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {\n         gasProgressBar.setValue(inputPacket.getGasPedalPosition());\n-        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n+        progressBarsPanel.add(breakLabel);\n+\t\tbreakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -100,7 +100,6 @@\n      * @param g {@link Graphics} object that can draw to the canvas\n      */\n     protected void paintComponent(Graphics g) {\n-        super.paintComponent(g);\n         g.setColor(Color.BLACK);\n         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);\n         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "progressBarsPanel.setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 79, 
          "faulty": "progressBarsPanel.setBounds(progressBarsPanelX,progressBarsPanelY,progressBarsPanelWidth,progressBarsPanelHeight);", 
          "type": "Replace", 
          "seed": "final int minRpmValue=0;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_134/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:00:30.223527169 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -76,11 +75,7 @@\n      */\n     private void initializeProgressBars() {\n         progressBarsPanel.setBackground(new Color(backgroundColor));\n-        progressBarsPanel.setBounds(\n-                progressBarsPanelX,\n-                progressBarsPanelY,\n-                progressBarsPanelWidth,\n-                progressBarsPanelHeight);\n+        final int minRpmValue = 0;\n \n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "setBackground(new Color(backgroundColor));"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "progressBarsPanel.add(gasLabel);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_459/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:02:54.071562953 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -85,7 +84,8 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        progressBarsPanel.add(gasLabel);\n+\t\tbreakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "breakProgressBar.setStringPainted(true);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 124, 
          "faulty": "final int maxRpmMeter=255;", 
          "type": "InsertBefore", 
          "seed": "final int maxSpeedMeter=255;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 142, 
          "faulty": "int newspeed=maxSpeedValue - speed;", 
          "type": "InsertBefore", 
          "seed": "final int minRpmValue=0;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_581/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:03:47.999585112 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -121,7 +120,8 @@\n         final int minRpmValue = 0;\n         final int maxRpmValue = 10000;\n         final int minRpmMeter = -75;\n-        final int maxRpmMeter = 255;\n+        final int maxSpeedMeter = 255;\n+\t\tfinal int maxRpmMeter = 255;\n         int newrpm = maxRpmValue - rpm;\n \n         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;\n@@ -139,7 +139,8 @@\n         final int maxSpeedValue = 500;\n         final int minSpeedMeter = -75;\n         final int maxSpeedMeter = 255;\n-        int newspeed = maxSpeedValue - speed;\n+        final int minRpmValue = 0;\n+\t\tint newspeed = maxSpeedValue - speed;\n \n         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)\n                 / (maxSpeedValue - minSpeedValue) + minSpeedMeter;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "final int minRpmValue=0;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Delete", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_932/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:06:23.407643109 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -91,7 +90,6 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "final int minSpeedValue=0;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 78, 
          "faulty": "progressBarsPanel.setBackground(new Color(backgroundColor));", 
          "type": "Delete", 
          "seed": "final int maxSpeedValue=500;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 86, 
          "faulty": "breakLabel.setText(\"break pedal\");", 
          "type": "Delete", 
          "seed": "progressBarsPanel.add(gasProgressBar);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_438/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:02:45.971559457 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        final int minSpeedValue = 0;\n     }\n \n     /**\n@@ -75,7 +75,6 @@\n      * Initializes the progress bars on the dashboard\n      */\n     private void initializeProgressBars() {\n-        progressBarsPanel.setBackground(new Color(backgroundColor));\n         progressBarsPanel.setBounds(\n                 progressBarsPanelX,\n                 progressBarsPanelY,\n@@ -83,7 +82,6 @@\n                 progressBarsPanelHeight);\n \n         gasLabel.setText(\"gas pedal\");\n-        breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n         breakProgressBar.setStringPainted(true);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "speedAngle=calculateSpeedometer(0);"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 88, 
          "faulty": "breakProgressBar.setStringPainted(true);", 
          "type": "InsertBefore", 
          "seed": "final int maxSpeedMeter=255;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_1014/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:06:57.939659142 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -85,7 +84,8 @@\n         gasLabel.setText(\"gas pedal\");\n         breakLabel.setText(\"break pedal\");\n         gasProgressBar.setStringPainted(true);\n-        breakProgressBar.setStringPainted(true);\n+        final int maxSpeedMeter = 255;\n+\t\tbreakProgressBar.setStringPainted(true);\n \n         add(progressBarsPanel);\n         progressBarsPanel.add(gasLabel);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Replace", 
          "seed": "final int maxSpeedMeter=255;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_157/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:00:39.159527583 -0500\n@@ -56,7 +56,7 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        final int maxSpeedMeter = 255;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 59, 
          "faulty": "paintComponent(getGraphics());", 
          "type": "Delete", 
          "seed": "final int minRpmValue=0;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 69, 
          "faulty": "setBounds(dashboardBoundsX,dashboardBoundsY,width,height);", 
          "type": "Replace", 
          "seed": "final int minSpeedValue=0;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 71, 
          "faulty": "initializeProgressBars();", 
          "type": "Delete", 
          "seed": "final int maxRpmMeter=255;"
        }, 
        {
          "path": "src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java", 
          "line": 94, 
          "faulty": "progressBarsPanel.add(breakProgressBar);", 
          "type": "Replace", 
          "seed": "rpmAngle=calculateTachometer(0);"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 09:59:09.243523423 -0500\n+++ /tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/patches_vatz/Patch_942/patched/tmp/RSRepair_Bears_SzFMV2018-Tavasz-AutomatedCar_351742666-351759763/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\t2018-12-27 10:06:26.867644758 -0500\n@@ -56,7 +56,6 @@\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n     }\n \n     /**\n@@ -66,9 +65,7 @@\n         // Not using any layout manager, but fixed coordinates\n         setLayout(null);\n         setBackground(new Color(backgroundColor));\n-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);\n-\n-        initializeProgressBars();\n+        final int minSpeedValue = 0;\n     }\n \n     /**\n@@ -91,7 +88,7 @@\n         progressBarsPanel.add(gasLabel);\n         progressBarsPanel.add(gasProgressBar);\n         progressBarsPanel.add(breakLabel);\n-        progressBarsPanel.add(breakProgressBar);\n+        rpmAngle = calculateTachometer(0);\n     }\n \n     /**\n\n\n"
    }
  ]
}