{
  "patches": [
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "return approx;"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "return approx;"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "return approx;"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "return approx;"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ]
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }
      ]
    }
  ]
}