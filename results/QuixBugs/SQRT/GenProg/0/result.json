{
  "repair_end": "2018-12-02 21:12:38.812398", 
  "repair_begin": "2018-12-02 21:00:04.570745", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_888/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:08:00.646413940 -0500\n@@ -13,9 +13,13 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_597/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:06:37.946706935 -0500\n@@ -13,9 +13,12 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_982/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:08:30.833271897 -0500\n@@ -13,9 +13,12 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n-        return approx;\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\treturn approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_1472/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:10:30.195695457 -0500\n@@ -13,9 +13,15 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_1582/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:11:03.910439881 -0500\n@@ -13,9 +13,43 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_1511/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:10:43.748807518 -0500\n@@ -13,9 +13,20 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_685/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:06:55.675863111 -0500\n@@ -13,9 +13,12 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "return approx;"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_1669/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:11:33.700807569 -0500\n@@ -13,9 +13,19 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_694/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:06:57.364041074 -0500\n@@ -13,9 +13,11 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_1506/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:10:42.904738620 -0500\n@@ -13,9 +13,23 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n-        return approx;\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\treturn approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_550/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:06:28.174085620 -0500\n@@ -13,9 +13,11 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_975/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:08:29.785174410 -0500\n@@ -13,9 +13,16 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_978/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:08:30.205213494 -0500\n@@ -13,9 +13,13 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_1862/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:12:25.980850908 -0500\n@@ -13,9 +13,26 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_1163/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:09:08.576706014 -0500\n@@ -13,9 +13,21 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n-        return approx;\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\treturn approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_659/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:06:50.419500251 -0500\n@@ -13,9 +13,11 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_657/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:06:50.207486762 -0500\n@@ -13,9 +13,12 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_1637/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:11:21.159816956 -0500\n@@ -13,9 +13,19 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_1273/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:09:37.139214118 -0500\n@@ -13,9 +13,30 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n-        return approx;\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\treturn approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_968/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:08:22.720514131 -0500\n@@ -13,9 +13,14 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_1457/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:10:27.223449914 -0500\n@@ -13,9 +13,18 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "return approx;"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_960/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:08:21.256376590 -0500\n@@ -13,9 +13,11 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n-        return approx;\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\treturn approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_728/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:07:10.021361478 -0500\n@@ -13,9 +13,12 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_1208/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:09:23.622036237 -0500\n@@ -13,9 +13,30 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n-        return approx;\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\treturn approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_1541/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:10:55.461758930 -0500\n@@ -13,9 +13,17 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "double approx=x / 2f;"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_1778/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:12:02.351039700 -0500\n@@ -13,9 +13,26 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_627/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:06:44.031093878 -0500\n@@ -13,9 +13,11 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n         return approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_1454/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:10:26.799414834 -0500\n@@ -13,9 +13,12 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n-        return approx;\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\treturn approx;\n     }\n }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 15, 
          "faulty": "double approx=x / 2f;", 
          "type": "Replace", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "return approx;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "double approx=x / 2f;"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 16, 
          "faulty": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}", 
          "type": "Delete", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "InsertBefore", 
          "seed": "approx=0.5f * (approx + x / approx);"
        }, 
        {
          "path": "src/main/java/SQRT.java", 
          "line": 17, 
          "faulty": "approx=0.5f * (approx + x / approx);", 
          "type": "Replace", 
          "seed": "while (Math.abs(x - approx) > epsilon) {\n  approx=0.5f * (approx + x / approx);\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 14:59:58.999350896 -0500\n+++ /tmp/GenProg_QuixBugs_SQRT_/patches_p6et/Patch_1520/patched/tmp/GenProg_QuixBugs_SQRT_/src/main/java/SQRT.java\t2018-12-02 15:10:51.269419400 -0500\n@@ -13,9 +13,18 @@\n public class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double approx = x / 2f;\n-        while (Math.abs(x-approx) > epsilon) {\n-            approx = 0.5f * (approx + x / approx);\n-        }\n-        return approx;\n+        approx = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\tapprox = 0.5f * (approx + x / approx);\n+\t\treturn approx;\n     }\n }\n\n\n"
    }
  ]
}