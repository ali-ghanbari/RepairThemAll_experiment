{"general":{"NR_RIGHT_COMPILATIONS":18,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"SHORTEST_PATH_LENGTHS-","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":8,"NR_GENERATIONS":26,"TOTAL_TIME":5.118,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"52","VALIDATION":"|true|0|4|[]|","patchhunks":[{"LOCATION":"java_programs.SHORTEST_PATH_LENGTHS","PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/src\\\/default\\\/SHORTEST_PATH_LENGTHS.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"return length_by_path","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (i == j) {\\n\\tlength_by_path.put(edge, 0);\\n}else\\n\\tif (length_by_edge.containsKey(edge)) {\\n\\t\\tlength_by_path.put(edge, length_by_edge.get(edge));\\n\\t}else {\\n\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/src\\\/\\\/variant-52_f\\\/java_programs\\\/SHORTEST_PATH_LENGTHS.java","LINE":"22","MP_RANKING":"4","PATCH_HUNK_CODE":"return length_by_path"}],"TIME":"5","GENERATION":"26","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_QuixBugs_SHORTEST_PATH_LENGTHS_\\\/.\\\/output_astor\\\/AstorMain-SHORTEST_PATH_LENGTHS-\\\/\\\/bin\\\/\\\/variant-52","PATCH_DIFF_ORIG":"\\\/var\\\/lib\\\/oar\\\/.batch_job_bashrc: line 5: \\\/home\\\/tdurieux\\\/.bashrc: No such file or directory\\n--- java_programs\\\/SHORTEST_PATH_LENGTHS.java\\n+++ java_programs\\\/SHORTEST_PATH_LENGTHS.java\\n@@ -27,16 +27,16 @@\\n \\t\\t\\t\\t\\t}else {\\n \\t\\t\\t\\t\\t\\tlength_by_path.put(edge, java_programs.SHORTEST_PATH_LENGTHS.INF);\\n \\t\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tfor (int k = 0; k < numNodes; k++) {\\n-\\t\\t\\tfor (int i = 0; i < numNodes; i++) {\\n-\\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) {\\n-\\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), \\n-\\t\\t\\t\\t\\t((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k)))));\\n-\\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn length_by_path;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t\\treturn length_by_path;}} \\t\\tfor (int k = 0; k < numNodes; k++) { \\t\\t\\tfor (int i = 0; i < numNodes; i++) { \\t\\t\\t\\tfor (int j = 0; j < numNodes; j++) { \\t\\t\\t\\t\\tint update_length = java.lang.Math.min(length_by_path.get(java.util.Arrays.asList(i, j)), ((length_by_path.get(java.util.Arrays.asList(i, k))) + (length_by_path.get(java.util.Arrays.asList(j, k))))); \\t\\t\\t\\t\\tlength_by_path.put(java.util.Arrays.asList(i, j), update_length);}}} \\t\\treturn length_by_path;\\n \\t}}\\n\\\\ No newline at end of file\\n\\n"}]}